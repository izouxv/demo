<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- 扫描到业务组件 -->
	<context:component-scan base-package="com.lanlian.chatting.serviceImpl" />
	<context:component-scan base-package="com.lanlian.chatting.rpc" />
	<context:component-scan base-package="com.lanlian.server.redis" />
	<context:component-scan base-package="com.lanlian.server.http" />

	<!-- Spring用AOP技术实现声明式事物处理，基于注解 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明:开启事务控制的注解支持 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- spring异步调用 -->
	<task:annotation-driven executor="annotationExecutor" />
	<!-- 支持 @Async 注解 -->
	<task:executor id="annotationExecutor" pool-size="5" />

	<!-- rpc调用 aliyun-10.27.201.187 -->
	<bean id="accountClient" class="com.lanlian.chatting.rpc.AccountClient">
		<constructor-arg name="host" value="127.0.0.1" />
		<constructor-arg name="accountPort" value="8003" />
	</bean>
	<bean id="ssoClient" class="com.lanlian.chatting.rpc.SsoClient">
		<constructor-arg name="host" value="127.0.0.1" />
		<constructor-arg name="ssoPort" value="8003" />
	</bean>
	<bean id="twinsClient" class="com.lanlian.chatting.rpc.TwinsClient">
		<constructor-arg name="host" value="rpc.analysis.radacat.com" />
		<constructor-arg name="port" value="7011" />
	</bean>
	<bean id="adverClient" class="com.lanlian.chatting.rpc.AdverClient">
		<constructor-arg name="host" value="192.168.1.51" />
		<constructor-arg name="port" value="7002" />
	</bean>
	<bean id="feedBackClient" class="com.lanlian.chatting.rpc.FeedBackClient">
		<constructor-arg name="host" value="192.168.1.51" />
		<constructor-arg name="port" value="7002" />
	</bean>
	<bean id="versionClient" class="com.lanlian.chatting.rpc.VersionClient">
		<constructor-arg name="host" value="192.168.1.51" />
		<constructor-arg name="port" value="7002" />
	</bean>
 	
	<!-- <bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="chatting" />
	</bean> -->
	<!-- 事务属性配置
	<tx:advice id="txAdvice" transaction-manager="txManager">
	 -->
		<!-- 事务传播属性
		<tx:attributes>
		 -->
	    <!-- 所有已get、query、select开头的方法都是只读 
		<tx:method name="get*" read-only="true"/>
		<tx:method name="query*" read-only="true"/>
		<tx:method name="select*" read-only="true"/>
	    -->
		<!-- 其它的所有方法支持事务设置的属性（异常回滚）
		<tx:method name="*" rollback-for="java.lang.Throwing" />
	    </tx:attributes>
	</tx:advice>
		 -->
		
</beans>