// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/friday.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 请求用户信息
type Request struct {
	Test                 string   `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_friday_c85b24c663e0f77e, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

// 请求用户信息的结果
type Response struct {
	Test                 string   `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_friday_c85b24c663e0f77e, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "api.Request")
	proto.RegisterType((*Response)(nil), "api.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataClient is the client API for Data service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataClient interface {
	// 简单Rpc
	Test01(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	// 双向流Rpc
	Test02(ctx context.Context, opts ...grpc.CallOption) (Data_Test02Client, error)
}

type dataClient struct {
	cc *grpc.ClientConn
}

func NewDataClient(cc *grpc.ClientConn) DataClient {
	return &dataClient{cc}
}

func (c *dataClient) Test01(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Data/Test01", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataClient) Test02(ctx context.Context, opts ...grpc.CallOption) (Data_Test02Client, error) {
	stream, err := c.cc.NewStream(ctx, &_Data_serviceDesc.Streams[0], "/api.Data/Test02", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataTest02Client{stream}
	return x, nil
}

type Data_Test02Client interface {
	Send(*Response) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type dataTest02Client struct {
	grpc.ClientStream
}

func (x *dataTest02Client) Send(m *Response) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataTest02Client) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataServer is the server API for Data service.
type DataServer interface {
	// 简单Rpc
	Test01(context.Context, *Request) (*Response, error)
	// 双向流Rpc
	Test02(Data_Test02Server) error
}

func RegisterDataServer(s *grpc.Server, srv DataServer) {
	s.RegisterService(&_Data_serviceDesc, srv)
}

func _Data_Test01_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServer).Test01(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Data/Test01",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServer).Test01(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Data_Test02_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataServer).Test02(&dataTest02Server{stream})
}

type Data_Test02Server interface {
	Send(*Response) error
	Recv() (*Response, error)
	grpc.ServerStream
}

type dataTest02Server struct {
	grpc.ServerStream
}

func (x *dataTest02Server) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataTest02Server) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Data_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Data",
	HandlerType: (*DataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Test01",
			Handler:    _Data_Test01_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Test02",
			Handler:       _Data_Test02_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/friday.proto",
}

func init() { proto.RegisterFile("api/friday.proto", fileDescriptor_friday_c85b24c663e0f77e) }

var fileDescriptor_friday_c85b24c663e0f77e = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x2c, 0xc8, 0xd4,
	0x4f, 0x2b, 0xca, 0x4c, 0x49, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c,
	0xc8, 0x54, 0x92, 0xe5, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62,
	0x29, 0x49, 0x2d, 0x2e, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xe4, 0xb8,
	0x38, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xb1, 0xc9, 0x1b, 0xc5, 0x72, 0xb1, 0xb8,
	0x24, 0x96, 0x24, 0x0a, 0xa9, 0x73, 0xb1, 0x85, 0xa4, 0x16, 0x97, 0x18, 0x18, 0x0a, 0xf1, 0xe8,
	0x25, 0x16, 0x64, 0xea, 0x41, 0xcd, 0x94, 0xe2, 0x85, 0xf2, 0x20, 0x46, 0x28, 0x31, 0x08, 0xe9,
	0x40, 0x15, 0x1a, 0x09, 0xa1, 0x4a, 0x61, 0xa8, 0xd4, 0x60, 0x34, 0x60, 0x4c, 0x62, 0x03, 0xbb,
	0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x96, 0xe5, 0xcf, 0x9d, 0xbd, 0x00, 0x00, 0x00,
}
