// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feedback.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	feedback.proto

It has these top-level messages:
	Feedback
	AddFeedbackRequest
	AddFeedbackResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Feedback struct {
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	MobileInfo  string `protobuf:"bytes,2,opt,name=mobileInfo" json:"mobileInfo,omitempty"`
	AppInfo     string `protobuf:"bytes,3,opt,name=appInfo" json:"appInfo,omitempty"`
	Files       string `protobuf:"bytes,4,opt,name=files" json:"files,omitempty"`
	LogFile     string `protobuf:"bytes,5,opt,name=logFile" json:"logFile,omitempty"`
	Contact     string `protobuf:"bytes,6,opt,name=contact" json:"contact,omitempty"`
	UserInfo    string `protobuf:"bytes,7,opt,name=userInfo" json:"userInfo,omitempty"`
	ExtendInfo  string `protobuf:"bytes,8,opt,name=extendInfo" json:"extendInfo,omitempty"`
}

func (m *Feedback) Reset()                    { *m = Feedback{} }
func (m *Feedback) String() string            { return proto.CompactTextString(m) }
func (*Feedback) ProtoMessage()               {}
func (*Feedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Feedback) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Feedback) GetMobileInfo() string {
	if m != nil {
		return m.MobileInfo
	}
	return ""
}

func (m *Feedback) GetAppInfo() string {
	if m != nil {
		return m.AppInfo
	}
	return ""
}

func (m *Feedback) GetFiles() string {
	if m != nil {
		return m.Files
	}
	return ""
}

func (m *Feedback) GetLogFile() string {
	if m != nil {
		return m.LogFile
	}
	return ""
}

func (m *Feedback) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *Feedback) GetUserInfo() string {
	if m != nil {
		return m.UserInfo
	}
	return ""
}

func (m *Feedback) GetExtendInfo() string {
	if m != nil {
		return m.ExtendInfo
	}
	return ""
}

type AddFeedbackRequest struct {
	Feedback *Feedback `protobuf:"bytes,1,opt,name=feedback" json:"feedback,omitempty"`
}

func (m *AddFeedbackRequest) Reset()                    { *m = AddFeedbackRequest{} }
func (m *AddFeedbackRequest) String() string            { return proto.CompactTextString(m) }
func (*AddFeedbackRequest) ProtoMessage()               {}
func (*AddFeedbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddFeedbackRequest) GetFeedback() *Feedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

type AddFeedbackResponse struct {
	Feedback *Feedback `protobuf:"bytes,1,opt,name=feedback" json:"feedback,omitempty"`
	ErrCode  int32     `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode,omitempty"`
}

func (m *AddFeedbackResponse) Reset()                    { *m = AddFeedbackResponse{} }
func (m *AddFeedbackResponse) String() string            { return proto.CompactTextString(m) }
func (*AddFeedbackResponse) ProtoMessage()               {}
func (*AddFeedbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AddFeedbackResponse) GetFeedback() *Feedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

func (m *AddFeedbackResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func init() {
	proto.RegisterType((*Feedback)(nil), "pb.Feedback")
	proto.RegisterType((*AddFeedbackRequest)(nil), "pb.AddFeedbackRequest")
	proto.RegisterType((*AddFeedbackResponse)(nil), "pb.AddFeedbackResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FeedbackService service

type FeedbackServiceClient interface {
	// 添加app问题反馈
	AddFeedback(ctx context.Context, in *AddFeedbackRequest, opts ...grpc.CallOption) (*AddFeedbackResponse, error)
}

type feedbackServiceClient struct {
	cc *grpc.ClientConn
}

func NewFeedbackServiceClient(cc *grpc.ClientConn) FeedbackServiceClient {
	return &feedbackServiceClient{cc}
}

func (c *feedbackServiceClient) AddFeedback(ctx context.Context, in *AddFeedbackRequest, opts ...grpc.CallOption) (*AddFeedbackResponse, error) {
	out := new(AddFeedbackResponse)
	err := grpc.Invoke(ctx, "/pb.FeedbackService/AddFeedback", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FeedbackService service

type FeedbackServiceServer interface {
	// 添加app问题反馈
	AddFeedback(context.Context, *AddFeedbackRequest) (*AddFeedbackResponse, error)
}

func RegisterFeedbackServiceServer(s *grpc.Server, srv FeedbackServiceServer) {
	s.RegisterService(&_FeedbackService_serviceDesc, srv)
}

func _FeedbackService_AddFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedbackServiceServer).AddFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FeedbackService/AddFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedbackServiceServer).AddFeedback(ctx, req.(*AddFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeedbackService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FeedbackService",
	HandlerType: (*FeedbackServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFeedback",
			Handler:    _FeedbackService_AddFeedback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feedback.proto",
}

func init() { proto.RegisterFile("feedback.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xbf, 0x4e, 0xf3, 0x40,
	0x10, 0xc4, 0x3f, 0xe7, 0xc3, 0x89, 0x59, 0x23, 0x90, 0x16, 0x04, 0xa7, 0x14, 0x28, 0x72, 0x95,
	0xca, 0x45, 0xe8, 0x11, 0x08, 0x11, 0x89, 0xd6, 0xa9, 0x28, 0x6d, 0xdf, 0x1a, 0x9d, 0x30, 0xbe,
	0xe3, 0xee, 0x82, 0x78, 0x68, 0x1e, 0x02, 0x79, 0xfd, 0x07, 0xa3, 0x34, 0x94, 0x33, 0xbf, 0xf1,
	0xed, 0xec, 0x1a, 0x4e, 0x2b, 0x22, 0x59, 0xe4, 0xe5, 0x6b, 0x6a, 0xac, 0xf6, 0x1a, 0x67, 0xa6,
	0x48, 0xbe, 0x02, 0x88, 0xb6, 0xbd, 0x8d, 0x2b, 0x88, 0x25, 0xb9, 0xd2, 0x2a, 0xe3, 0x95, 0x6e,
	0x44, 0xb0, 0x0a, 0xd6, 0xc7, 0xd9, 0xd4, 0xc2, 0x6b, 0x80, 0x37, 0x5d, 0xa8, 0x9a, 0x9e, 0x9a,
	0x4a, 0x8b, 0x19, 0x07, 0x26, 0x0e, 0x0a, 0x58, 0xe4, 0xc6, 0x30, 0xfc, 0xcf, 0x70, 0x90, 0x78,
	0x01, 0x61, 0xa5, 0x6a, 0x72, 0xe2, 0x88, 0xfd, 0x4e, 0xb4, 0xf9, 0x5a, 0xbf, 0x6c, 0x55, 0x4d,
	0x22, 0xec, 0xf2, 0xbd, 0x6c, 0x49, 0xa9, 0x1b, 0x9f, 0x97, 0x5e, 0xcc, 0x3b, 0xd2, 0x4b, 0x5c,
	0x42, 0xb4, 0x77, 0x64, 0x79, 0xc8, 0x82, 0xd1, 0xa8, 0xdb, 0x7e, 0xf4, 0xe9, 0xa9, 0x91, 0x4c,
	0xa3, 0xae, 0xdf, 0x8f, 0x93, 0xdc, 0x02, 0xde, 0x4b, 0x39, 0x2c, 0x9c, 0xd1, 0xfb, 0x9e, 0x9c,
	0xc7, 0x35, 0x44, 0xc3, 0x69, 0x78, 0xe9, 0x78, 0x73, 0x92, 0x9a, 0x22, 0x1d, 0x63, 0x23, 0x4d,
	0x9e, 0xe1, 0xfc, 0xd7, 0xf7, 0xce, 0xe8, 0xc6, 0xd1, 0xdf, 0x1f, 0x68, 0xd7, 0x7a, 0xb4, 0xf6,
	0x41, 0x4b, 0xe2, 0xeb, 0x85, 0xd9, 0x20, 0x37, 0x3b, 0x38, 0x1b, 0xf2, 0x3b, 0xb2, 0x1f, 0xaa,
	0x24, 0xbc, 0x83, 0x78, 0x32, 0x0d, 0x2f, 0xdb, 0x37, 0x0f, 0xeb, 0x2f, 0xaf, 0x0e, 0xfc, 0xae,
	0x56, 0xf2, 0xaf, 0x98, 0xf3, 0x9f, 0xbe, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xba, 0x71, 0x00,
	0x11, 0xfb, 0x01, 0x00, 0x00,
}
