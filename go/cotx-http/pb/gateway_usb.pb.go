// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway_usb.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UsbWifiHotSpotUser struct {
	Device string `protobuf:"bytes,1,opt,name=Device" json:"Device"`
	MAC    string `protobuf:"bytes,2,opt,name=MAC" json:"MAC"`
}

func (m *UsbWifiHotSpotUser) Reset()                    { *m = UsbWifiHotSpotUser{} }
func (m *UsbWifiHotSpotUser) String() string            { return proto.CompactTextString(m) }
func (*UsbWifiHotSpotUser) ProtoMessage()               {}
func (*UsbWifiHotSpotUser) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *UsbWifiHotSpotUser) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *UsbWifiHotSpotUser) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

type ResUsbWifiHotSpotUser struct {
	HotSpotUser []*UsbWifiHotSpotUser `protobuf:"bytes,1,rep,name=HotSpotUser" json:"HotSpotUser"`
	ErrCode     int32                 `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode"`
}

func (m *ResUsbWifiHotSpotUser) Reset()                    { *m = ResUsbWifiHotSpotUser{} }
func (m *ResUsbWifiHotSpotUser) String() string            { return proto.CompactTextString(m) }
func (*ResUsbWifiHotSpotUser) ProtoMessage()               {}
func (*ResUsbWifiHotSpotUser) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *ResUsbWifiHotSpotUser) GetHotSpotUser() []*UsbWifiHotSpotUser {
	if m != nil {
		return m.HotSpotUser
	}
	return nil
}

func (m *ResUsbWifiHotSpotUser) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type UsbWifiWlan struct {
	WifiName string `protobuf:"bytes,1,opt,name=WifiName" json:"WifiName"`
	WifiRssi int32  `protobuf:"varint,2,opt,name=WifiRssi" json:"WifiRssi"`
	Key      int32  `protobuf:"varint,3,opt,name=Key" json:"Key"`
}

func (m *UsbWifiWlan) Reset()                    { *m = UsbWifiWlan{} }
func (m *UsbWifiWlan) String() string            { return proto.CompactTextString(m) }
func (*UsbWifiWlan) ProtoMessage()               {}
func (*UsbWifiWlan) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *UsbWifiWlan) GetWifiName() string {
	if m != nil {
		return m.WifiName
	}
	return ""
}

func (m *UsbWifiWlan) GetWifiRssi() int32 {
	if m != nil {
		return m.WifiRssi
	}
	return 0
}

func (m *UsbWifiWlan) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

type ResUsbWifiWlan struct {
	UsbWifiWlan []*UsbWifiWlan `protobuf:"bytes,1,rep,name=UsbWifiWlan" json:"UsbWifiWlan"`
	ErrCode     int32          `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode"`
}

func (m *ResUsbWifiWlan) Reset()                    { *m = ResUsbWifiWlan{} }
func (m *ResUsbWifiWlan) String() string            { return proto.CompactTextString(m) }
func (*ResUsbWifiWlan) ProtoMessage()               {}
func (*ResUsbWifiWlan) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *ResUsbWifiWlan) GetUsbWifiWlan() []*UsbWifiWlan {
	if m != nil {
		return m.UsbWifiWlan
	}
	return nil
}

func (m *ResUsbWifiWlan) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type ReqGatewayUsb struct {
	GatewayId string `protobuf:"bytes,1,opt,name=GatewayId" json:"GatewayId"`
	UserId    int32  `protobuf:"varint,2,opt,name=UserId" json:"UserId"`
	UsbId     int32  `protobuf:"varint,3,opt,name=UsbId" json:"UsbId"`
}

func (m *ReqGatewayUsb) Reset()                    { *m = ReqGatewayUsb{} }
func (m *ReqGatewayUsb) String() string            { return proto.CompactTextString(m) }
func (*ReqGatewayUsb) ProtoMessage()               {}
func (*ReqGatewayUsb) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *ReqGatewayUsb) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqGatewayUsb) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqGatewayUsb) GetUsbId() int32 {
	if m != nil {
		return m.UsbId
	}
	return 0
}

type ResWifiHotSpotUser struct {
	HotSpotUser []*UsbWifiHotSpotUser `protobuf:"bytes,1,rep,name=HotSpotUser" json:"HotSpotUser"`
	ErrCode     int32                 `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode"`
}

func (m *ResWifiHotSpotUser) Reset()                    { *m = ResWifiHotSpotUser{} }
func (m *ResWifiHotSpotUser) String() string            { return proto.CompactTextString(m) }
func (*ResWifiHotSpotUser) ProtoMessage()               {}
func (*ResWifiHotSpotUser) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *ResWifiHotSpotUser) GetHotSpotUser() []*UsbWifiHotSpotUser {
	if m != nil {
		return m.HotSpotUser
	}
	return nil
}

func (m *ResWifiHotSpotUser) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type UsbWifiScan struct {
	DevideId int32  `protobuf:"varint,1,opt,name=DevideId" json:"DevideId"`
	SSId     string `protobuf:"bytes,2,opt,name=SSId" json:"SSId"`
	MAC      string `protobuf:"bytes,3,opt,name=MAC" json:"MAC"`
	RSSI     int32  `protobuf:"varint,4,opt,name=RSSI" json:"RSSI"`
	Vendor   string `protobuf:"bytes,5,opt,name=Vendor" json:"Vendor"`
	Time     int64  `protobuf:"varint,6,opt,name=Time" json:"Time"`
}

func (m *UsbWifiScan) Reset()                    { *m = UsbWifiScan{} }
func (m *UsbWifiScan) String() string            { return proto.CompactTextString(m) }
func (*UsbWifiScan) ProtoMessage()               {}
func (*UsbWifiScan) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *UsbWifiScan) GetDevideId() int32 {
	if m != nil {
		return m.DevideId
	}
	return 0
}

func (m *UsbWifiScan) GetSSId() string {
	if m != nil {
		return m.SSId
	}
	return ""
}

func (m *UsbWifiScan) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

func (m *UsbWifiScan) GetRSSI() int32 {
	if m != nil {
		return m.RSSI
	}
	return 0
}

func (m *UsbWifiScan) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *UsbWifiScan) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ResUsbWifiScan struct {
	UsbWifiScan []*UsbWifiScan `protobuf:"bytes,1,rep,name=UsbWifiScan" json:"UsbWifiScan"`
	ErrCode     int32          `protobuf:"varint,2,opt,name=ErrCode" json:"ErrCode"`
}

func (m *ResUsbWifiScan) Reset()                    { *m = ResUsbWifiScan{} }
func (m *ResUsbWifiScan) String() string            { return proto.CompactTextString(m) }
func (*ResUsbWifiScan) ProtoMessage()               {}
func (*ResUsbWifiScan) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *ResUsbWifiScan) GetUsbWifiScan() []*UsbWifiScan {
	if m != nil {
		return m.UsbWifiScan
	}
	return nil
}

func (m *ResUsbWifiScan) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func init() {
	proto.RegisterType((*UsbWifiHotSpotUser)(nil), "pb.UsbWifiHotSpotUser")
	proto.RegisterType((*ResUsbWifiHotSpotUser)(nil), "pb.ResUsbWifiHotSpotUser")
	proto.RegisterType((*UsbWifiWlan)(nil), "pb.UsbWifiWlan")
	proto.RegisterType((*ResUsbWifiWlan)(nil), "pb.ResUsbWifiWlan")
	proto.RegisterType((*ReqGatewayUsb)(nil), "pb.ReqGatewayUsb")
	proto.RegisterType((*ResWifiHotSpotUser)(nil), "pb.ResWifiHotSpotUser")
	proto.RegisterType((*UsbWifiScan)(nil), "pb.UsbWifiScan")
	proto.RegisterType((*ResUsbWifiScan)(nil), "pb.ResUsbWifiScan")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GatewayUsb service

type GatewayUsbClient interface {
	GetUsbWifiWlan(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiWlan, error)
	GetUsbHotSpotUser(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiHotSpotUser, error)
	GetWifiHotSpotUser(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResWifiHotSpotUser, error)
	GetUsbWifiScan(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiScan, error)
}

type gatewayUsbClient struct {
	cc *grpc.ClientConn
}

func NewGatewayUsbClient(cc *grpc.ClientConn) GatewayUsbClient {
	return &gatewayUsbClient{cc}
}

func (c *gatewayUsbClient) GetUsbWifiWlan(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiWlan, error) {
	out := new(ResUsbWifiWlan)
	err := grpc.Invoke(ctx, "/pb.Gateway_usb/GetUsbWifiWlan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayUsbClient) GetUsbHotSpotUser(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiHotSpotUser, error) {
	out := new(ResUsbWifiHotSpotUser)
	err := grpc.Invoke(ctx, "/pb.Gateway_usb/GetUsbHotSpotUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayUsbClient) GetWifiHotSpotUser(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResWifiHotSpotUser, error) {
	out := new(ResWifiHotSpotUser)
	err := grpc.Invoke(ctx, "/pb.Gateway_usb/GetWifiHotSpotUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayUsbClient) GetUsbWifiScan(ctx context.Context, in *ReqGatewayUsb, opts ...grpc.CallOption) (*ResUsbWifiScan, error) {
	out := new(ResUsbWifiScan)
	err := grpc.Invoke(ctx, "/pb.Gateway_usb/GetUsbWifiScan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GatewayUsb service

type GatewayUsbServer interface {
	GetUsbWifiWlan(context.Context, *ReqGatewayUsb) (*ResUsbWifiWlan, error)
	GetUsbHotSpotUser(context.Context, *ReqGatewayUsb) (*ResUsbWifiHotSpotUser, error)
	GetWifiHotSpotUser(context.Context, *ReqGatewayUsb) (*ResWifiHotSpotUser, error)
	GetUsbWifiScan(context.Context, *ReqGatewayUsb) (*ResUsbWifiScan, error)
}

func RegisterGatewayUsbServer(s *grpc.Server, srv GatewayUsbServer) {
	s.RegisterService(&_GatewayUsb_serviceDesc, srv)
}

func _GatewayUsb_GetUsbWifiWlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGatewayUsb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayUsbServer).GetUsbWifiWlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway_usb/GetUsbWifiWlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayUsbServer).GetUsbWifiWlan(ctx, req.(*ReqGatewayUsb))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayUsb_GetUsbHotSpotUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGatewayUsb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayUsbServer).GetUsbHotSpotUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway_usb/GetUsbHotSpotUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayUsbServer).GetUsbHotSpotUser(ctx, req.(*ReqGatewayUsb))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayUsb_GetWifiHotSpotUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGatewayUsb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayUsbServer).GetWifiHotSpotUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway_usb/GetWifiHotSpotUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayUsbServer).GetWifiHotSpotUser(ctx, req.(*ReqGatewayUsb))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayUsb_GetUsbWifiScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGatewayUsb)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayUsbServer).GetUsbWifiScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Gateway_usb/GetUsbWifiScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayUsbServer).GetUsbWifiScan(ctx, req.(*ReqGatewayUsb))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayUsb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Gateway_usb",
	HandlerType: (*GatewayUsbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsbWifiWlan",
			Handler:    _GatewayUsb_GetUsbWifiWlan_Handler,
		},
		{
			MethodName: "GetUsbHotSpotUser",
			Handler:    _GatewayUsb_GetUsbHotSpotUser_Handler,
		},
		{
			MethodName: "GetWifiHotSpotUser",
			Handler:    _GatewayUsb_GetWifiHotSpotUser_Handler,
		},
		{
			MethodName: "GetUsbWifiScan",
			Handler:    _GatewayUsb_GetUsbWifiScan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway_usb.proto",
}

func init() { proto.RegisterFile("gateway_usb.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x41, 0xcf, 0xd2, 0x40,
	0x10, 0xa5, 0x94, 0xa2, 0x4c, 0x23, 0xca, 0x44, 0xc9, 0x4a, 0x3c, 0x90, 0x3d, 0x71, 0x22, 0x01,
	0x2f, 0x7a, 0x31, 0x21, 0x68, 0x6a, 0x63, 0xf4, 0xb0, 0xb5, 0x72, 0x30, 0xc6, 0xb4, 0x74, 0xd5,
	0x46, 0xa1, 0xb5, 0x5b, 0x35, 0xfc, 0x06, 0x0f, 0xfe, 0x65, 0xb3, 0xdb, 0x6d, 0xe9, 0x4a, 0x89,
	0xb7, 0xef, 0x36, 0x6f, 0x98, 0x79, 0xfb, 0xde, 0xcc, 0x50, 0x98, 0x7c, 0x8e, 0x4a, 0xfe, 0x2b,
	0x3a, 0x7d, 0xfc, 0x21, 0xe2, 0x65, 0x5e, 0x64, 0x65, 0x86, 0xfd, 0x3c, 0xa6, 0xcf, 0x00, 0x43,
	0x11, 0xef, 0xd2, 0x4f, 0xe9, 0xcb, 0xac, 0x0c, 0xf2, 0xac, 0x0c, 0x05, 0x2f, 0x70, 0x0a, 0xc3,
	0xe7, 0xfc, 0x67, 0xba, 0xe7, 0xc4, 0x9a, 0x5b, 0x8b, 0x11, 0xd3, 0x08, 0xef, 0x81, 0xfd, 0x7a,
	0xb3, 0x25, 0x7d, 0x95, 0x94, 0x21, 0xfd, 0x0a, 0x0f, 0x18, 0x17, 0x1d, 0x14, 0x4f, 0xc0, 0x6d,
	0x41, 0x62, 0xcd, 0xed, 0x85, 0xbb, 0x9e, 0x2e, 0xf3, 0x78, 0x79, 0x59, 0xcc, 0xda, 0xa5, 0x48,
	0xe0, 0xd6, 0x8b, 0xa2, 0xd8, 0x66, 0x09, 0x57, 0x0f, 0x39, 0xac, 0x86, 0x74, 0x07, 0xae, 0x6e,
	0xde, 0x7d, 0x8b, 0x8e, 0x38, 0x83, 0xdb, 0x32, 0x7e, 0x13, 0x1d, 0x6a, 0x9d, 0x0d, 0xae, 0x7f,
	0x63, 0x42, 0xa4, 0x9a, 0xa5, 0xc1, 0xd2, 0xc5, 0x2b, 0x7e, 0x22, 0xb6, 0x4a, 0xcb, 0x90, 0x7e,
	0x80, 0xf1, 0xd9, 0x85, 0xe2, 0x5e, 0x19, 0x4f, 0x69, 0xf9, 0x77, 0x5b, 0xf2, 0x65, 0x9a, 0x19,
	0x72, 0xae, 0xeb, 0x7e, 0x0f, 0x77, 0x18, 0xff, 0xee, 0x55, 0x0b, 0x08, 0x45, 0x8c, 0x8f, 0x60,
	0xa4, 0x91, 0x9f, 0x68, 0xe9, 0xe7, 0x84, 0x9c, 0xbe, 0x1c, 0x84, 0x9f, 0x68, 0x1e, 0x8d, 0xf0,
	0x3e, 0x38, 0xa1, 0x88, 0xfd, 0x44, 0x2b, 0xaf, 0x00, 0xfd, 0x02, 0xc8, 0xb8, 0xb8, 0x89, 0xf1,
	0xff, 0xb1, 0x9a, 0xa1, 0x04, 0xfb, 0x6a, 0xfe, 0xf2, 0x2e, 0x12, 0xae, 0x4d, 0x38, 0xac, 0xc1,
	0x88, 0x30, 0x08, 0x02, 0xed, 0x60, 0xc4, 0x54, 0x5c, 0x5f, 0x8f, 0xdd, 0x5c, 0x8f, 0xac, 0x62,
	0x41, 0xe0, 0x93, 0x81, 0xea, 0x56, 0xb1, 0x74, 0xff, 0x8e, 0x1f, 0x93, 0xac, 0x20, 0x4e, 0x75,
	0x7b, 0x15, 0x92, 0xb5, 0x6f, 0xd3, 0x03, 0x27, 0xc3, 0xb9, 0xb5, 0xb0, 0x99, 0x8a, 0xcd, 0xbd,
	0x29, 0x4d, 0x2b, 0x43, 0x62, 0xc7, 0xde, 0x64, 0x9a, 0x19, 0x36, 0xae, 0x1a, 0x5e, 0xff, 0xee,
	0x83, 0xeb, 0x9d, 0xff, 0x36, 0xf8, 0x14, 0xc6, 0x1e, 0x2f, 0xdb, 0x3b, 0x9f, 0x48, 0x66, 0x63,
	0xb7, 0x33, 0xac, 0x52, 0xed, 0x6b, 0xa2, 0x3d, 0xdc, 0xc2, 0xa4, 0x6a, 0x6d, 0x8f, 0xba, 0xa3,
	0xfb, 0xa1, 0xd9, 0xdd, 0xaa, 0xa6, 0x3d, 0xdc, 0x00, 0x7a, 0xbc, 0xfc, 0x77, 0xd5, 0x1d, 0x2c,
	0x53, 0xcd, 0x72, 0x49, 0x61, 0x58, 0x50, 0xf6, 0xff, 0x6f, 0x41, 0x96, 0xd1, 0x5e, 0x3c, 0x54,
	0x5f, 0x8d, 0xc7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x41, 0xaa, 0xef, 0x28, 0x4a, 0x04, 0x00,
	0x00,
}
