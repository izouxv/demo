// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway_set.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResCode struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResCode) Reset()         { *m = ResCode{} }
func (m *ResCode) String() string { return proto.CompactTextString(m) }
func (*ResCode) ProtoMessage()    {}
func (*ResCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{0}
}
func (m *ResCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResCode.Unmarshal(m, b)
}
func (m *ResCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResCode.Marshal(b, m, deterministic)
}
func (dst *ResCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResCode.Merge(dst, src)
}
func (m *ResCode) XXX_Size() int {
	return xxx_messageInfo_ResCode.Size(m)
}
func (m *ResCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResCode.DiscardUnknown(m)
}

var xxx_messageInfo_ResCode proto.InternalMessageInfo

func (m *ResCode) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type ReqSwitch struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	Switch               int32    `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	GatewayId            string   `protobuf:"bytes,3,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSwitch) Reset()         { *m = ReqSwitch{} }
func (m *ReqSwitch) String() string { return proto.CompactTextString(m) }
func (*ReqSwitch) ProtoMessage()    {}
func (*ReqSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{1}
}
func (m *ReqSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSwitch.Unmarshal(m, b)
}
func (m *ReqSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSwitch.Marshal(b, m, deterministic)
}
func (dst *ReqSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSwitch.Merge(dst, src)
}
func (m *ReqSwitch) XXX_Size() int {
	return xxx_messageInfo_ReqSwitch.Size(m)
}
func (m *ReqSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSwitch proto.InternalMessageInfo

func (m *ReqSwitch) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSwitch) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqSwitch) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSwitch) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqInstruction struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqInstruction) Reset()         { *m = ReqInstruction{} }
func (m *ReqInstruction) String() string { return proto.CompactTextString(m) }
func (*ReqInstruction) ProtoMessage()    {}
func (*ReqInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{2}
}
func (m *ReqInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqInstruction.Unmarshal(m, b)
}
func (m *ReqInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqInstruction.Marshal(b, m, deterministic)
}
func (dst *ReqInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqInstruction.Merge(dst, src)
}
func (m *ReqInstruction) XXX_Size() int {
	return xxx_messageInfo_ReqInstruction.Size(m)
}
func (m *ReqInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_ReqInstruction proto.InternalMessageInfo

func (m *ReqInstruction) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqInstruction) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqInstruction) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqGwPower struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	Switch               int32    `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	StartTime            string   `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime"`
	EndTime              string   `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGwPower) Reset()         { *m = ReqGwPower{} }
func (m *ReqGwPower) String() string { return proto.CompactTextString(m) }
func (*ReqGwPower) ProtoMessage()    {}
func (*ReqGwPower) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{3}
}
func (m *ReqGwPower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGwPower.Unmarshal(m, b)
}
func (m *ReqGwPower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGwPower.Marshal(b, m, deterministic)
}
func (dst *ReqGwPower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGwPower.Merge(dst, src)
}
func (m *ReqGwPower) XXX_Size() int {
	return xxx_messageInfo_ReqGwPower.Size(m)
}
func (m *ReqGwPower) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGwPower.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGwPower proto.InternalMessageInfo

func (m *ReqGwPower) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqGwPower) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqGwPower) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ReqGwPower) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ReqGwPower) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqGwPower) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqLora struct {
	// 指令码
	// 设置网关的lora频率信息 1，如果是1276的话只用给freq0值，freq1值 2，1301 8个信道的值都要提供
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	Freq0                int32    `protobuf:"varint,2,opt,name=Freq0,proto3" json:"Freq0"`
	Freq1                int32    `protobuf:"varint,3,opt,name=Freq1,proto3" json:"Freq1"`
	DataRate0            int32    `protobuf:"varint,4,opt,name=DataRate0,proto3" json:"DataRate0"`
	DataRate1            int32    `protobuf:"varint,5,opt,name=DataRate1,proto3" json:"DataRate1"`
	GatewayId            string   `protobuf:"bytes,6,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId"`
	STD                  int32    `protobuf:"varint,8,opt,name=STD,proto3" json:"STD"`
	FSK                  int32    `protobuf:"varint,9,opt,name=FSK,proto3" json:"FSK"`
	DataRateSTD          int32    `protobuf:"varint,10,opt,name=DataRateSTD,proto3" json:"DataRateSTD"`
	Key                  int32    `protobuf:"varint,11,opt,name=Key,proto3" json:"Key"`
	Band                 int32    `protobuf:"varint,12,opt,name=Band,proto3" json:"Band"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqLora) Reset()         { *m = ReqLora{} }
func (m *ReqLora) String() string { return proto.CompactTextString(m) }
func (*ReqLora) ProtoMessage()    {}
func (*ReqLora) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{4}
}
func (m *ReqLora) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqLora.Unmarshal(m, b)
}
func (m *ReqLora) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqLora.Marshal(b, m, deterministic)
}
func (dst *ReqLora) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqLora.Merge(dst, src)
}
func (m *ReqLora) XXX_Size() int {
	return xxx_messageInfo_ReqLora.Size(m)
}
func (m *ReqLora) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqLora.DiscardUnknown(m)
}

var xxx_messageInfo_ReqLora proto.InternalMessageInfo

func (m *ReqLora) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqLora) GetFreq0() int32 {
	if m != nil {
		return m.Freq0
	}
	return 0
}

func (m *ReqLora) GetFreq1() int32 {
	if m != nil {
		return m.Freq1
	}
	return 0
}

func (m *ReqLora) GetDataRate0() int32 {
	if m != nil {
		return m.DataRate0
	}
	return 0
}

func (m *ReqLora) GetDataRate1() int32 {
	if m != nil {
		return m.DataRate1
	}
	return 0
}

func (m *ReqLora) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqLora) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqLora) GetSTD() int32 {
	if m != nil {
		return m.STD
	}
	return 0
}

func (m *ReqLora) GetFSK() int32 {
	if m != nil {
		return m.FSK
	}
	return 0
}

func (m *ReqLora) GetDataRateSTD() int32 {
	if m != nil {
		return m.DataRateSTD
	}
	return 0
}

func (m *ReqLora) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ReqLora) GetBand() int32 {
	if m != nil {
		return m.Band
	}
	return 0
}

type ReqVideo struct {
	// 指令码
	// 设置自动摄像 == 1022
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 打开或者关闭自动摄像  0：关闭 1：打开
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 摄像间隔
	VideoSpacing int32 `protobuf:"varint,3,opt,name=VideoSpacing,proto3" json:"VideoSpacing"`
	// 每次摄像的时长
	VideoTime            int32    `protobuf:"varint,4,opt,name=VideoTime,proto3" json:"VideoTime"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqVideo) Reset()         { *m = ReqVideo{} }
func (m *ReqVideo) String() string { return proto.CompactTextString(m) }
func (*ReqVideo) ProtoMessage()    {}
func (*ReqVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{5}
}
func (m *ReqVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqVideo.Unmarshal(m, b)
}
func (m *ReqVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqVideo.Marshal(b, m, deterministic)
}
func (dst *ReqVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqVideo.Merge(dst, src)
}
func (m *ReqVideo) XXX_Size() int {
	return xxx_messageInfo_ReqVideo.Size(m)
}
func (m *ReqVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqVideo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqVideo proto.InternalMessageInfo

func (m *ReqVideo) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqVideo) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqVideo) GetVideoSpacing() int32 {
	if m != nil {
		return m.VideoSpacing
	}
	return 0
}

func (m *ReqVideo) GetVideoTime() int32 {
	if m != nil {
		return m.VideoTime
	}
	return 0
}

func (m *ReqVideo) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqVideo) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqPhoto struct {
	// 指令码
	// 设置自动拍照 == 1024
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 打开或者关闭 0：关闭 1：打开
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 拍照间隔
	PhotoSpacing int32 `protobuf:"varint,3,opt,name=PhotoSpacing,proto3" json:"PhotoSpacing"`
	// 一次拍几张
	PhotoTime            int32    `protobuf:"varint,4,opt,name=PhotoTime,proto3" json:"PhotoTime"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPhoto) Reset()         { *m = ReqPhoto{} }
func (m *ReqPhoto) String() string { return proto.CompactTextString(m) }
func (*ReqPhoto) ProtoMessage()    {}
func (*ReqPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{6}
}
func (m *ReqPhoto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPhoto.Unmarshal(m, b)
}
func (m *ReqPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPhoto.Marshal(b, m, deterministic)
}
func (dst *ReqPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPhoto.Merge(dst, src)
}
func (m *ReqPhoto) XXX_Size() int {
	return xxx_messageInfo_ReqPhoto.Size(m)
}
func (m *ReqPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPhoto proto.InternalMessageInfo

func (m *ReqPhoto) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqPhoto) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqPhoto) GetPhotoSpacing() int32 {
	if m != nil {
		return m.PhotoSpacing
	}
	return 0
}

func (m *ReqPhoto) GetPhotoTime() int32 {
	if m != nil {
		return m.PhotoTime
	}
	return 0
}

func (m *ReqPhoto) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqPhoto) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqMusic struct {
	// 指令码
	// 设置自动播放音频
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 打开或者关闭 0：关闭 1：打开
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 播放音乐的间隔
	MusicSpacing int32 `protobuf:"varint,3,opt,name=MusicSpacing,proto3" json:"MusicSpacing"`
	// 一次播放几遍音乐
	MusicTime            int32    `protobuf:"varint,4,opt,name=MusicTime,proto3" json:"MusicTime"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqMusic) Reset()         { *m = ReqMusic{} }
func (m *ReqMusic) String() string { return proto.CompactTextString(m) }
func (*ReqMusic) ProtoMessage()    {}
func (*ReqMusic) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{7}
}
func (m *ReqMusic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqMusic.Unmarshal(m, b)
}
func (m *ReqMusic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqMusic.Marshal(b, m, deterministic)
}
func (dst *ReqMusic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqMusic.Merge(dst, src)
}
func (m *ReqMusic) XXX_Size() int {
	return xxx_messageInfo_ReqMusic.Size(m)
}
func (m *ReqMusic) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqMusic.DiscardUnknown(m)
}

var xxx_messageInfo_ReqMusic proto.InternalMessageInfo

func (m *ReqMusic) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqMusic) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqMusic) GetMusicSpacing() int32 {
	if m != nil {
		return m.MusicSpacing
	}
	return 0
}

func (m *ReqMusic) GetMusicTime() int32 {
	if m != nil {
		return m.MusicTime
	}
	return 0
}

func (m *ReqMusic) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqMusic) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqDeletFile struct {
	// 指令码
	// 删除文件的指令 == 1027
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 该属性可以不用添加参数
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 文件类型 0：图片 1： 视频
	FileType int32 `protobuf:"varint,3,opt,name=FileType,proto3" json:"FileType"`
	// 视频名称
	FileName             string   `protobuf:"bytes,4,opt,name=FileName,proto3" json:"FileName"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeletFile) Reset()         { *m = ReqDeletFile{} }
func (m *ReqDeletFile) String() string { return proto.CompactTextString(m) }
func (*ReqDeletFile) ProtoMessage()    {}
func (*ReqDeletFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{8}
}
func (m *ReqDeletFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeletFile.Unmarshal(m, b)
}
func (m *ReqDeletFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeletFile.Marshal(b, m, deterministic)
}
func (dst *ReqDeletFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeletFile.Merge(dst, src)
}
func (m *ReqDeletFile) XXX_Size() int {
	return xxx_messageInfo_ReqDeletFile.Size(m)
}
func (m *ReqDeletFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeletFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeletFile proto.InternalMessageInfo

func (m *ReqDeletFile) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqDeletFile) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqDeletFile) GetFileType() int32 {
	if m != nil {
		return m.FileType
	}
	return 0
}

func (m *ReqDeletFile) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *ReqDeletFile) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqDeletFile) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqUpLog struct {
	// 指令码
	// 设置上传日志 == 1029
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 打开或者关闭  0：关闭 1：打开
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 地址
	Address string `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address"`
	// 端口
	Port                 int32    `protobuf:"varint,4,opt,name=port,proto3" json:"port"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,8,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUpLog) Reset()         { *m = ReqUpLog{} }
func (m *ReqUpLog) String() string { return proto.CompactTextString(m) }
func (*ReqUpLog) ProtoMessage()    {}
func (*ReqUpLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{9}
}
func (m *ReqUpLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUpLog.Unmarshal(m, b)
}
func (m *ReqUpLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUpLog.Marshal(b, m, deterministic)
}
func (dst *ReqUpLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUpLog.Merge(dst, src)
}
func (m *ReqUpLog) XXX_Size() int {
	return xxx_messageInfo_ReqUpLog.Size(m)
}
func (m *ReqUpLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUpLog.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUpLog proto.InternalMessageInfo

func (m *ReqUpLog) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqUpLog) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqUpLog) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ReqUpLog) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ReqUpLog) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqUpLog) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqSetIP struct {
	// 设置网关的ip地址 == 1033
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	NetType              int32    `protobuf:"varint,6,opt,name=NetType,proto3" json:"NetType"`
	Ip                   string   `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip"`
	Gateway              string   `protobuf:"bytes,4,opt,name=Gateway,proto3" json:"Gateway"`
	Mask                 string   `protobuf:"bytes,5,opt,name=Mask,proto3" json:"Mask"`
	GatewayId            string   `protobuf:"bytes,7,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,8,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetIP) Reset()         { *m = ReqSetIP{} }
func (m *ReqSetIP) String() string { return proto.CompactTextString(m) }
func (*ReqSetIP) ProtoMessage()    {}
func (*ReqSetIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{10}
}
func (m *ReqSetIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetIP.Unmarshal(m, b)
}
func (m *ReqSetIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetIP.Marshal(b, m, deterministic)
}
func (dst *ReqSetIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetIP.Merge(dst, src)
}
func (m *ReqSetIP) XXX_Size() int {
	return xxx_messageInfo_ReqSetIP.Size(m)
}
func (m *ReqSetIP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetIP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetIP proto.InternalMessageInfo

func (m *ReqSetIP) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetIP) GetNetType() int32 {
	if m != nil {
		return m.NetType
	}
	return 0
}

func (m *ReqSetIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ReqSetIP) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *ReqSetIP) GetMask() string {
	if m != nil {
		return m.Mask
	}
	return ""
}

func (m *ReqSetIP) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetIP) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqSetUsbIP struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	UsbNum               int32    `protobuf:"varint,2,opt,name=UsbNum,proto3" json:"UsbNum"`
	NetType              int32    `protobuf:"varint,6,opt,name=NetType,proto3" json:"NetType"`
	Ip                   string   `protobuf:"bytes,3,opt,name=Ip,proto3" json:"Ip"`
	Gateway              string   `protobuf:"bytes,4,opt,name=Gateway,proto3" json:"Gateway"`
	Mask                 string   `protobuf:"bytes,5,opt,name=Mask,proto3" json:"Mask"`
	GatewayId            string   `protobuf:"bytes,8,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetUsbIP) Reset()         { *m = ReqSetUsbIP{} }
func (m *ReqSetUsbIP) String() string { return proto.CompactTextString(m) }
func (*ReqSetUsbIP) ProtoMessage()    {}
func (*ReqSetUsbIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{11}
}
func (m *ReqSetUsbIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetUsbIP.Unmarshal(m, b)
}
func (m *ReqSetUsbIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetUsbIP.Marshal(b, m, deterministic)
}
func (dst *ReqSetUsbIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetUsbIP.Merge(dst, src)
}
func (m *ReqSetUsbIP) XXX_Size() int {
	return xxx_messageInfo_ReqSetUsbIP.Size(m)
}
func (m *ReqSetUsbIP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetUsbIP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetUsbIP proto.InternalMessageInfo

func (m *ReqSetUsbIP) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetUsbIP) GetUsbNum() int32 {
	if m != nil {
		return m.UsbNum
	}
	return 0
}

func (m *ReqSetUsbIP) GetNetType() int32 {
	if m != nil {
		return m.NetType
	}
	return 0
}

func (m *ReqSetUsbIP) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ReqSetUsbIP) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *ReqSetUsbIP) GetMask() string {
	if m != nil {
		return m.Mask
	}
	return ""
}

func (m *ReqSetUsbIP) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetUsbIP) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type DNS struct {
	DNS                  string   `protobuf:"bytes,1,opt,name=DNS,proto3" json:"DNS"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNS) Reset()         { *m = DNS{} }
func (m *DNS) String() string { return proto.CompactTextString(m) }
func (*DNS) ProtoMessage()    {}
func (*DNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{12}
}
func (m *DNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNS.Unmarshal(m, b)
}
func (m *DNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNS.Marshal(b, m, deterministic)
}
func (dst *DNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNS.Merge(dst, src)
}
func (m *DNS) XXX_Size() int {
	return xxx_messageInfo_DNS.Size(m)
}
func (m *DNS) XXX_DiscardUnknown() {
	xxx_messageInfo_DNS.DiscardUnknown(m)
}

var xxx_messageInfo_DNS proto.InternalMessageInfo

func (m *DNS) GetDNS() string {
	if m != nil {
		return m.DNS
	}
	return ""
}

// swagger:parameters reqSetDNS
type ReqSetDNS struct {
	// 指令码
	// 设置网络的dns地址 == 1034
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	NetType              int32    `protobuf:"varint,4,opt,name=NetType,proto3" json:"NetType"`
	DNSS                 []*DNS   `protobuf:"bytes,3,rep,name=DNSS,proto3" json:"DNSS"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetDNS) Reset()         { *m = ReqSetDNS{} }
func (m *ReqSetDNS) String() string { return proto.CompactTextString(m) }
func (*ReqSetDNS) ProtoMessage()    {}
func (*ReqSetDNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{13}
}
func (m *ReqSetDNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetDNS.Unmarshal(m, b)
}
func (m *ReqSetDNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetDNS.Marshal(b, m, deterministic)
}
func (dst *ReqSetDNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetDNS.Merge(dst, src)
}
func (m *ReqSetDNS) XXX_Size() int {
	return xxx_messageInfo_ReqSetDNS.Size(m)
}
func (m *ReqSetDNS) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetDNS.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetDNS proto.InternalMessageInfo

func (m *ReqSetDNS) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetDNS) GetNetType() int32 {
	if m != nil {
		return m.NetType
	}
	return 0
}

func (m *ReqSetDNS) GetDNSS() []*DNS {
	if m != nil {
		return m.DNSS
	}
	return nil
}

func (m *ReqSetDNS) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetDNS) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqSetUsbDNS struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	UsbNum               int32    `protobuf:"varint,2,opt,name=UsbNum,proto3" json:"UsbNum"`
	NetType              int32    `protobuf:"varint,4,opt,name=NetType,proto3" json:"NetType"`
	DNSS                 []*DNS   `protobuf:"bytes,3,rep,name=DNSS,proto3" json:"DNSS"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetUsbDNS) Reset()         { *m = ReqSetUsbDNS{} }
func (m *ReqSetUsbDNS) String() string { return proto.CompactTextString(m) }
func (*ReqSetUsbDNS) ProtoMessage()    {}
func (*ReqSetUsbDNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{14}
}
func (m *ReqSetUsbDNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetUsbDNS.Unmarshal(m, b)
}
func (m *ReqSetUsbDNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetUsbDNS.Marshal(b, m, deterministic)
}
func (dst *ReqSetUsbDNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetUsbDNS.Merge(dst, src)
}
func (m *ReqSetUsbDNS) XXX_Size() int {
	return xxx_messageInfo_ReqSetUsbDNS.Size(m)
}
func (m *ReqSetUsbDNS) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetUsbDNS.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetUsbDNS proto.InternalMessageInfo

func (m *ReqSetUsbDNS) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetUsbDNS) GetUsbNum() int32 {
	if m != nil {
		return m.UsbNum
	}
	return 0
}

func (m *ReqSetUsbDNS) GetNetType() int32 {
	if m != nil {
		return m.NetType
	}
	return 0
}

func (m *ReqSetUsbDNS) GetDNSS() []*DNS {
	if m != nil {
		return m.DNSS
	}
	return nil
}

func (m *ReqSetUsbDNS) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetUsbDNS) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// swagger:parameters reqSetHotSpot
type ReqSetHotSpot struct {
	// 指令码
	// 设置热点 == 1036
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 热点名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 热点 密码
	Password string `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password"`
	// 是否需要密码  0：不需要 1：需要
	Key                  int32    `protobuf:"varint,4,opt,name=Key,proto3" json:"Key"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetHotSpot) Reset()         { *m = ReqSetHotSpot{} }
func (m *ReqSetHotSpot) String() string { return proto.CompactTextString(m) }
func (*ReqSetHotSpot) ProtoMessage()    {}
func (*ReqSetHotSpot) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{15}
}
func (m *ReqSetHotSpot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetHotSpot.Unmarshal(m, b)
}
func (m *ReqSetHotSpot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetHotSpot.Marshal(b, m, deterministic)
}
func (dst *ReqSetHotSpot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetHotSpot.Merge(dst, src)
}
func (m *ReqSetHotSpot) XXX_Size() int {
	return xxx_messageInfo_ReqSetHotSpot.Size(m)
}
func (m *ReqSetHotSpot) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetHotSpot.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetHotSpot proto.InternalMessageInfo

func (m *ReqSetHotSpot) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetHotSpot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqSetHotSpot) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqSetHotSpot) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ReqSetHotSpot) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetHotSpot) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// swagger:parameters reqSetHotSpot
type ReqSetUsbHotSpot struct {
	// 指令码
	// 设置热点 == 1036
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 热点名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// 热点 密码
	Password string `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password"`
	// 是否需要密码  0：不需要 1：需要
	Key                  int32    `protobuf:"varint,4,opt,name=Key,proto3" json:"Key"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	UsbId                int32    `protobuf:"varint,7,opt,name=UsbId,proto3" json:"UsbId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetUsbHotSpot) Reset()         { *m = ReqSetUsbHotSpot{} }
func (m *ReqSetUsbHotSpot) String() string { return proto.CompactTextString(m) }
func (*ReqSetUsbHotSpot) ProtoMessage()    {}
func (*ReqSetUsbHotSpot) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{16}
}
func (m *ReqSetUsbHotSpot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetUsbHotSpot.Unmarshal(m, b)
}
func (m *ReqSetUsbHotSpot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetUsbHotSpot.Marshal(b, m, deterministic)
}
func (dst *ReqSetUsbHotSpot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetUsbHotSpot.Merge(dst, src)
}
func (m *ReqSetUsbHotSpot) XXX_Size() int {
	return xxx_messageInfo_ReqSetUsbHotSpot.Size(m)
}
func (m *ReqSetUsbHotSpot) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetUsbHotSpot.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetUsbHotSpot proto.InternalMessageInfo

func (m *ReqSetUsbHotSpot) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetUsbHotSpot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqSetUsbHotSpot) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqSetUsbHotSpot) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ReqSetUsbHotSpot) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetUsbHotSpot) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqSetUsbHotSpot) GetUsbId() int32 {
	if m != nil {
		return m.UsbId
	}
	return 0
}

// swagger:parameters reqSetName
type ReqSetName struct {
	// 指令码
	// 设置名称 == 1037
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 网关名称
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	GatewayId            string   `protobuf:"bytes,3,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetName) Reset()         { *m = ReqSetName{} }
func (m *ReqSetName) String() string { return proto.CompactTextString(m) }
func (*ReqSetName) ProtoMessage()    {}
func (*ReqSetName) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{17}
}
func (m *ReqSetName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetName.Unmarshal(m, b)
}
func (m *ReqSetName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetName.Marshal(b, m, deterministic)
}
func (dst *ReqSetName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetName.Merge(dst, src)
}
func (m *ReqSetName) XXX_Size() int {
	return xxx_messageInfo_ReqSetName.Size(m)
}
func (m *ReqSetName) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetName.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetName proto.InternalMessageInfo

func (m *ReqSetName) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqSetName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqSetName) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetName) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// swagger:parameters reqConnectWifi
type ReqConnectWifi struct {
	// 指令码
	// 连接 wifi == 1015
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 连接或者断开连接  0：断开连接 1：连接
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	// 无线名称
	WifiName string `protobuf:"bytes,3,opt,name=WifiName,proto3" json:"WifiName"`
	// 无线密码
	Password             string   `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password"`
	GatewayId            string   `protobuf:"bytes,5,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqConnectWifi) Reset()         { *m = ReqConnectWifi{} }
func (m *ReqConnectWifi) String() string { return proto.CompactTextString(m) }
func (*ReqConnectWifi) ProtoMessage()    {}
func (*ReqConnectWifi) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{18}
}
func (m *ReqConnectWifi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqConnectWifi.Unmarshal(m, b)
}
func (m *ReqConnectWifi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqConnectWifi.Marshal(b, m, deterministic)
}
func (dst *ReqConnectWifi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqConnectWifi.Merge(dst, src)
}
func (m *ReqConnectWifi) XXX_Size() int {
	return xxx_messageInfo_ReqConnectWifi.Size(m)
}
func (m *ReqConnectWifi) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqConnectWifi.DiscardUnknown(m)
}

var xxx_messageInfo_ReqConnectWifi proto.InternalMessageInfo

func (m *ReqConnectWifi) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqConnectWifi) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqConnectWifi) GetWifiName() string {
	if m != nil {
		return m.WifiName
	}
	return ""
}

func (m *ReqConnectWifi) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqConnectWifi) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqConnectWifi) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqConnectUsbWifi struct {
	// 指令码
	// 连接 wifi == 1015
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 连接或者断开连接  0：断开连接 1：连接
	Switch int32 `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	UsbId  int32 `protobuf:"varint,5,opt,name=UsbId,proto3" json:"UsbId"`
	// 无线名称
	WifiName string `protobuf:"bytes,3,opt,name=WifiName,proto3" json:"WifiName"`
	// 无线密码
	Password             string   `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password"`
	GatewayId            string   `protobuf:"bytes,6,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqConnectUsbWifi) Reset()         { *m = ReqConnectUsbWifi{} }
func (m *ReqConnectUsbWifi) String() string { return proto.CompactTextString(m) }
func (*ReqConnectUsbWifi) ProtoMessage()    {}
func (*ReqConnectUsbWifi) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{19}
}
func (m *ReqConnectUsbWifi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqConnectUsbWifi.Unmarshal(m, b)
}
func (m *ReqConnectUsbWifi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqConnectUsbWifi.Marshal(b, m, deterministic)
}
func (dst *ReqConnectUsbWifi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqConnectUsbWifi.Merge(dst, src)
}
func (m *ReqConnectUsbWifi) XXX_Size() int {
	return xxx_messageInfo_ReqConnectUsbWifi.Size(m)
}
func (m *ReqConnectUsbWifi) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqConnectUsbWifi.DiscardUnknown(m)
}

var xxx_messageInfo_ReqConnectUsbWifi proto.InternalMessageInfo

func (m *ReqConnectUsbWifi) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqConnectUsbWifi) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqConnectUsbWifi) GetUsbId() int32 {
	if m != nil {
		return m.UsbId
	}
	return 0
}

func (m *ReqConnectUsbWifi) GetWifiName() string {
	if m != nil {
		return m.WifiName
	}
	return ""
}

func (m *ReqConnectUsbWifi) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqConnectUsbWifi) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqConnectUsbWifi) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ReqUsbSwitch struct {
	Instruction int32 `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	// 连接或者断开连接  0：断开连接 1：连接
	Switch               int32    `protobuf:"varint,2,opt,name=Switch,proto3" json:"Switch"`
	UsbId                int32    `protobuf:"varint,3,opt,name=UsbId,proto3" json:"UsbId"`
	GatewayId            string   `protobuf:"bytes,4,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUsbSwitch) Reset()         { *m = ReqUsbSwitch{} }
func (m *ReqUsbSwitch) String() string { return proto.CompactTextString(m) }
func (*ReqUsbSwitch) ProtoMessage()    {}
func (*ReqUsbSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{20}
}
func (m *ReqUsbSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUsbSwitch.Unmarshal(m, b)
}
func (m *ReqUsbSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUsbSwitch.Marshal(b, m, deterministic)
}
func (dst *ReqUsbSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUsbSwitch.Merge(dst, src)
}
func (m *ReqUsbSwitch) XXX_Size() int {
	return xxx_messageInfo_ReqUsbSwitch.Size(m)
}
func (m *ReqUsbSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUsbSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUsbSwitch proto.InternalMessageInfo

func (m *ReqUsbSwitch) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqUsbSwitch) GetSwitch() int32 {
	if m != nil {
		return m.Switch
	}
	return 0
}

func (m *ReqUsbSwitch) GetUsbId() int32 {
	if m != nil {
		return m.UsbId
	}
	return 0
}

func (m *ReqUsbSwitch) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqUsbSwitch) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 设置第三方云平台信息
type ReqIOTServer struct {
	Instruction          int32    `protobuf:"varint,1,opt,name=Instruction,proto3" json:"Instruction"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId"`
	IOTId                int32    `protobuf:"varint,4,opt,name=IOTId,proto3" json:"IOTId"`
	ClientID             string   `protobuf:"bytes,5,opt,name=ClientID,proto3" json:"ClientID"`
	HostName             string   `protobuf:"bytes,6,opt,name=HostName,proto3" json:"HostName"`
	Port                 int32    `protobuf:"varint,7,opt,name=Port,proto3" json:"Port"`
	UserName             string   `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName"`
	Password             string   `protobuf:"bytes,9,opt,name=Password,proto3" json:"Password"`
	RootCertificate      string   `protobuf:"bytes,10,opt,name=RootCertificate,proto3" json:"RootCertificate"`
	ClientCertificate    string   `protobuf:"bytes,11,opt,name=ClientCertificate,proto3" json:"ClientCertificate"`
	ClientKey            string   `protobuf:"bytes,12,opt,name=ClientKey,proto3" json:"ClientKey"`
	GWMac                string   `protobuf:"bytes,13,opt,name=GWMac,proto3" json:"GWMac"`
	IotNum               int32    `protobuf:"varint,14,opt,name=IotNum,proto3" json:"IotNum"`
	ProductKey           string   `protobuf:"bytes,15,opt,name=ProductKey,proto3" json:"ProductKey"`
	DeviceName           string   `protobuf:"bytes,16,opt,name=DeviceName,proto3" json:"DeviceName"`
	DeviceKey            string   `protobuf:"bytes,17,opt,name=DeviceKey,proto3" json:"DeviceKey"`
	NodeKey              string   `protobuf:"bytes,18,opt,name=NodeKey,proto3" json:"NodeKey"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqIOTServer) Reset()         { *m = ReqIOTServer{} }
func (m *ReqIOTServer) String() string { return proto.CompactTextString(m) }
func (*ReqIOTServer) ProtoMessage()    {}
func (*ReqIOTServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{21}
}
func (m *ReqIOTServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqIOTServer.Unmarshal(m, b)
}
func (m *ReqIOTServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqIOTServer.Marshal(b, m, deterministic)
}
func (dst *ReqIOTServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqIOTServer.Merge(dst, src)
}
func (m *ReqIOTServer) XXX_Size() int {
	return xxx_messageInfo_ReqIOTServer.Size(m)
}
func (m *ReqIOTServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqIOTServer.DiscardUnknown(m)
}

var xxx_messageInfo_ReqIOTServer proto.InternalMessageInfo

func (m *ReqIOTServer) GetInstruction() int32 {
	if m != nil {
		return m.Instruction
	}
	return 0
}

func (m *ReqIOTServer) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqIOTServer) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqIOTServer) GetIOTId() int32 {
	if m != nil {
		return m.IOTId
	}
	return 0
}

func (m *ReqIOTServer) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *ReqIOTServer) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ReqIOTServer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ReqIOTServer) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ReqIOTServer) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqIOTServer) GetRootCertificate() string {
	if m != nil {
		return m.RootCertificate
	}
	return ""
}

func (m *ReqIOTServer) GetClientCertificate() string {
	if m != nil {
		return m.ClientCertificate
	}
	return ""
}

func (m *ReqIOTServer) GetClientKey() string {
	if m != nil {
		return m.ClientKey
	}
	return ""
}

func (m *ReqIOTServer) GetGWMac() string {
	if m != nil {
		return m.GWMac
	}
	return ""
}

func (m *ReqIOTServer) GetIotNum() int32 {
	if m != nil {
		return m.IotNum
	}
	return 0
}

func (m *ReqIOTServer) GetProductKey() string {
	if m != nil {
		return m.ProductKey
	}
	return ""
}

func (m *ReqIOTServer) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *ReqIOTServer) GetDeviceKey() string {
	if m != nil {
		return m.DeviceKey
	}
	return ""
}

func (m *ReqIOTServer) GetNodeKey() string {
	if m != nil {
		return m.NodeKey
	}
	return ""
}

// 手动拍照
type PhotoCode struct {
	ConflictTime         int32    `protobuf:"varint,1,opt,name=ConflictTime,proto3" json:"ConflictTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhotoCode) Reset()         { *m = PhotoCode{} }
func (m *PhotoCode) String() string { return proto.CompactTextString(m) }
func (*PhotoCode) ProtoMessage()    {}
func (*PhotoCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{22}
}
func (m *PhotoCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhotoCode.Unmarshal(m, b)
}
func (m *PhotoCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhotoCode.Marshal(b, m, deterministic)
}
func (dst *PhotoCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoCode.Merge(dst, src)
}
func (m *PhotoCode) XXX_Size() int {
	return xxx_messageInfo_PhotoCode.Size(m)
}
func (m *PhotoCode) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoCode.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoCode proto.InternalMessageInfo

func (m *PhotoCode) GetConflictTime() int32 {
	if m != nil {
		return m.ConflictTime
	}
	return 0
}

type ResPhotoCode struct {
	PhotoCode            *PhotoCode `protobuf:"bytes,1,opt,name=PhotoCode,proto3" json:"PhotoCode"`
	ErrCode              int32      `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ResPhotoCode) Reset()         { *m = ResPhotoCode{} }
func (m *ResPhotoCode) String() string { return proto.CompactTextString(m) }
func (*ResPhotoCode) ProtoMessage()    {}
func (*ResPhotoCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{23}
}
func (m *ResPhotoCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResPhotoCode.Unmarshal(m, b)
}
func (m *ResPhotoCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResPhotoCode.Marshal(b, m, deterministic)
}
func (dst *ResPhotoCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResPhotoCode.Merge(dst, src)
}
func (m *ResPhotoCode) XXX_Size() int {
	return xxx_messageInfo_ResPhotoCode.Size(m)
}
func (m *ResPhotoCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResPhotoCode.DiscardUnknown(m)
}

var xxx_messageInfo_ResPhotoCode proto.InternalMessageInfo

func (m *ResPhotoCode) GetPhotoCode() *PhotoCode {
	if m != nil {
		return m.PhotoCode
	}
	return nil
}

func (m *ResPhotoCode) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 手动摄像
type VideoCode struct {
	ConflictTime         int32    `protobuf:"varint,1,opt,name=ConflictTime,proto3" json:"ConflictTime"`
	TotalTime            int32    `protobuf:"varint,2,opt,name=TotalTime,proto3" json:"TotalTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoCode) Reset()         { *m = VideoCode{} }
func (m *VideoCode) String() string { return proto.CompactTextString(m) }
func (*VideoCode) ProtoMessage()    {}
func (*VideoCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{24}
}
func (m *VideoCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoCode.Unmarshal(m, b)
}
func (m *VideoCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoCode.Marshal(b, m, deterministic)
}
func (dst *VideoCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoCode.Merge(dst, src)
}
func (m *VideoCode) XXX_Size() int {
	return xxx_messageInfo_VideoCode.Size(m)
}
func (m *VideoCode) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoCode.DiscardUnknown(m)
}

var xxx_messageInfo_VideoCode proto.InternalMessageInfo

func (m *VideoCode) GetConflictTime() int32 {
	if m != nil {
		return m.ConflictTime
	}
	return 0
}

func (m *VideoCode) GetTotalTime() int32 {
	if m != nil {
		return m.TotalTime
	}
	return 0
}

type ResVideoCode struct {
	VideoCode            *VideoCode `protobuf:"bytes,1,opt,name=VideoCode,proto3" json:"VideoCode"`
	ErrCode              int32      `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ResVideoCode) Reset()         { *m = ResVideoCode{} }
func (m *ResVideoCode) String() string { return proto.CompactTextString(m) }
func (*ResVideoCode) ProtoMessage()    {}
func (*ResVideoCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{25}
}
func (m *ResVideoCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResVideoCode.Unmarshal(m, b)
}
func (m *ResVideoCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResVideoCode.Marshal(b, m, deterministic)
}
func (dst *ResVideoCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResVideoCode.Merge(dst, src)
}
func (m *ResVideoCode) XXX_Size() int {
	return xxx_messageInfo_ResVideoCode.Size(m)
}
func (m *ResVideoCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResVideoCode.DiscardUnknown(m)
}

var xxx_messageInfo_ResVideoCode proto.InternalMessageInfo

func (m *ResVideoCode) GetVideoCode() *VideoCode {
	if m != nil {
		return m.VideoCode
	}
	return nil
}

func (m *ResVideoCode) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type InstructionState struct {
	State                int32    `protobuf:"varint,1,opt,name=State,proto3" json:"State"`
	ConflictTime         int32    `protobuf:"varint,2,opt,name=ConflictTime,proto3" json:"ConflictTime"`
	TotalTime            int32    `protobuf:"varint,3,opt,name=TotalTime,proto3" json:"TotalTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstructionState) Reset()         { *m = InstructionState{} }
func (m *InstructionState) String() string { return proto.CompactTextString(m) }
func (*InstructionState) ProtoMessage()    {}
func (*InstructionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{26}
}
func (m *InstructionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstructionState.Unmarshal(m, b)
}
func (m *InstructionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstructionState.Marshal(b, m, deterministic)
}
func (dst *InstructionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstructionState.Merge(dst, src)
}
func (m *InstructionState) XXX_Size() int {
	return xxx_messageInfo_InstructionState.Size(m)
}
func (m *InstructionState) XXX_DiscardUnknown() {
	xxx_messageInfo_InstructionState.DiscardUnknown(m)
}

var xxx_messageInfo_InstructionState proto.InternalMessageInfo

func (m *InstructionState) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *InstructionState) GetConflictTime() int32 {
	if m != nil {
		return m.ConflictTime
	}
	return 0
}

func (m *InstructionState) GetTotalTime() int32 {
	if m != nil {
		return m.TotalTime
	}
	return 0
}

type GetInstructionStateRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	Instruction          string   `protobuf:"bytes,3,opt,name=Instruction,proto3" json:"Instruction"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInstructionStateRequest) Reset()         { *m = GetInstructionStateRequest{} }
func (m *GetInstructionStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetInstructionStateRequest) ProtoMessage()    {}
func (*GetInstructionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{27}
}
func (m *GetInstructionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstructionStateRequest.Unmarshal(m, b)
}
func (m *GetInstructionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstructionStateRequest.Marshal(b, m, deterministic)
}
func (dst *GetInstructionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstructionStateRequest.Merge(dst, src)
}
func (m *GetInstructionStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetInstructionStateRequest.Size(m)
}
func (m *GetInstructionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstructionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstructionStateRequest proto.InternalMessageInfo

func (m *GetInstructionStateRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetInstructionStateRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetInstructionStateRequest) GetInstruction() string {
	if m != nil {
		return m.Instruction
	}
	return ""
}

type GetInstructionStateResponse struct {
	InstructionState     *InstructionState `protobuf:"bytes,1,opt,name=InstructionState,proto3" json:"InstructionState"`
	ErrCode              int32             `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetInstructionStateResponse) Reset()         { *m = GetInstructionStateResponse{} }
func (m *GetInstructionStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetInstructionStateResponse) ProtoMessage()    {}
func (*GetInstructionStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_set_fa6736d808bf4bcd, []int{28}
}
func (m *GetInstructionStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstructionStateResponse.Unmarshal(m, b)
}
func (m *GetInstructionStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstructionStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetInstructionStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstructionStateResponse.Merge(dst, src)
}
func (m *GetInstructionStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetInstructionStateResponse.Size(m)
}
func (m *GetInstructionStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstructionStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstructionStateResponse proto.InternalMessageInfo

func (m *GetInstructionStateResponse) GetInstructionState() *InstructionState {
	if m != nil {
		return m.InstructionState
	}
	return nil
}

func (m *GetInstructionStateResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func init() {
	proto.RegisterType((*ResCode)(nil), "pb.ResCode")
	proto.RegisterType((*ReqSwitch)(nil), "pb.ReqSwitch")
	proto.RegisterType((*ReqInstruction)(nil), "pb.ReqInstruction")
	proto.RegisterType((*ReqGwPower)(nil), "pb.ReqGwPower")
	proto.RegisterType((*ReqLora)(nil), "pb.ReqLora")
	proto.RegisterType((*ReqVideo)(nil), "pb.ReqVideo")
	proto.RegisterType((*ReqPhoto)(nil), "pb.ReqPhoto")
	proto.RegisterType((*ReqMusic)(nil), "pb.ReqMusic")
	proto.RegisterType((*ReqDeletFile)(nil), "pb.ReqDeletFile")
	proto.RegisterType((*ReqUpLog)(nil), "pb.ReqUpLog")
	proto.RegisterType((*ReqSetIP)(nil), "pb.ReqSetIP")
	proto.RegisterType((*ReqSetUsbIP)(nil), "pb.ReqSetUsbIP")
	proto.RegisterType((*DNS)(nil), "pb.DNS")
	proto.RegisterType((*ReqSetDNS)(nil), "pb.ReqSetDNS")
	proto.RegisterType((*ReqSetUsbDNS)(nil), "pb.ReqSetUsbDNS")
	proto.RegisterType((*ReqSetHotSpot)(nil), "pb.ReqSetHotSpot")
	proto.RegisterType((*ReqSetUsbHotSpot)(nil), "pb.ReqSetUsbHotSpot")
	proto.RegisterType((*ReqSetName)(nil), "pb.ReqSetName")
	proto.RegisterType((*ReqConnectWifi)(nil), "pb.ReqConnectWifi")
	proto.RegisterType((*ReqConnectUsbWifi)(nil), "pb.ReqConnectUsbWifi")
	proto.RegisterType((*ReqUsbSwitch)(nil), "pb.ReqUsbSwitch")
	proto.RegisterType((*ReqIOTServer)(nil), "pb.ReqIOTServer")
	proto.RegisterType((*PhotoCode)(nil), "pb.PhotoCode")
	proto.RegisterType((*ResPhotoCode)(nil), "pb.ResPhotoCode")
	proto.RegisterType((*VideoCode)(nil), "pb.VideoCode")
	proto.RegisterType((*ResVideoCode)(nil), "pb.ResVideoCode")
	proto.RegisterType((*InstructionState)(nil), "pb.InstructionState")
	proto.RegisterType((*GetInstructionStateRequest)(nil), "pb.GetInstructionStateRequest")
	proto.RegisterType((*GetInstructionStateResponse)(nil), "pb.GetInstructionStateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewatSetClient is the client API for GatewatSet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewatSetClient interface {
	SendInstruction(ctx context.Context, in *ReqInstruction, opts ...grpc.CallOption) (*ResCode, error)
	SendSwitch(ctx context.Context, in *ReqSwitch, opts ...grpc.CallOption) (*ResCode, error)
	SendSetPower(ctx context.Context, in *ReqGwPower, opts ...grpc.CallOption) (*ResCode, error)
	SendLora(ctx context.Context, in *ReqLora, opts ...grpc.CallOption) (*ResCode, error)
	SendVideo(ctx context.Context, in *ReqVideo, opts ...grpc.CallOption) (*ResCode, error)
	SendPhoto(ctx context.Context, in *ReqPhoto, opts ...grpc.CallOption) (*ResCode, error)
	SendMusic(ctx context.Context, in *ReqMusic, opts ...grpc.CallOption) (*ResCode, error)
	SendDeletFile(ctx context.Context, in *ReqDeletFile, opts ...grpc.CallOption) (*ResCode, error)
	SendUpLog(ctx context.Context, in *ReqUpLog, opts ...grpc.CallOption) (*ResCode, error)
	SendSetIp(ctx context.Context, in *ReqSetIP, opts ...grpc.CallOption) (*ResCode, error)
	SendSetDNS(ctx context.Context, in *ReqSetDNS, opts ...grpc.CallOption) (*ResCode, error)
	SendSetHotSpot(ctx context.Context, in *ReqSetHotSpot, opts ...grpc.CallOption) (*ResCode, error)
	SendSetUsbHotSpot(ctx context.Context, in *ReqSetUsbHotSpot, opts ...grpc.CallOption) (*ResCode, error)
	SendSetName(ctx context.Context, in *ReqSetName, opts ...grpc.CallOption) (*ResCode, error)
	SendSetUsbIp(ctx context.Context, in *ReqSetUsbIP, opts ...grpc.CallOption) (*ResCode, error)
	SendSetUsbDNS(ctx context.Context, in *ReqSetUsbDNS, opts ...grpc.CallOption) (*ResCode, error)
	SendConnectWifi(ctx context.Context, in *ReqConnectWifi, opts ...grpc.CallOption) (*ResCode, error)
	SendUsbConnectWifi(ctx context.Context, in *ReqConnectUsbWifi, opts ...grpc.CallOption) (*ResCode, error)
	SendUsbSwitch(ctx context.Context, in *ReqUsbSwitch, opts ...grpc.CallOption) (*ResCode, error)
	SetIOTServer(ctx context.Context, in *ReqIOTServer, opts ...grpc.CallOption) (*ResCode, error)
	// 手动拍照
	SetGatewayPhoto(ctx context.Context, in *ReqInstruction, opts ...grpc.CallOption) (*ResPhotoCode, error)
	// 手动摄像
	SetGatewayVideo(ctx context.Context, in *ReqSwitch, opts ...grpc.CallOption) (*ResVideoCode, error)
	GetInstructionState(ctx context.Context, in *GetInstructionStateRequest, opts ...grpc.CallOption) (*GetInstructionStateResponse, error)
}

type gatewatSetClient struct {
	cc *grpc.ClientConn
}

func NewGatewatSetClient(cc *grpc.ClientConn) GatewatSetClient {
	return &gatewatSetClient{cc}
}

func (c *gatewatSetClient) SendInstruction(ctx context.Context, in *ReqInstruction, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendInstruction", in, out, c.cc,opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSwitch(ctx context.Context, in *ReqSwitch, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSwitch", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetPower(ctx context.Context, in *ReqGwPower, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetPower", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendLora(ctx context.Context, in *ReqLora, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendLora", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendVideo(ctx context.Context, in *ReqVideo, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendVideo", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendPhoto(ctx context.Context, in *ReqPhoto, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendPhoto", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendMusic(ctx context.Context, in *ReqMusic, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendMusic", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendDeletFile(ctx context.Context, in *ReqDeletFile, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendDeletFile", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendUpLog(ctx context.Context, in *ReqUpLog, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendUpLog", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetIp(ctx context.Context, in *ReqSetIP, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetIp", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetDNS(ctx context.Context, in *ReqSetDNS, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetDNS", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetHotSpot(ctx context.Context, in *ReqSetHotSpot, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetHotSpot", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetUsbHotSpot(ctx context.Context, in *ReqSetUsbHotSpot, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetUsbHotSpot", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetName(ctx context.Context, in *ReqSetName, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetName", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetUsbIp(ctx context.Context, in *ReqSetUsbIP, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetUsbIp", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendSetUsbDNS(ctx context.Context, in *ReqSetUsbDNS, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendSetUsbDNS", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendConnectWifi(ctx context.Context, in *ReqConnectWifi, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendConnectWifi", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendUsbConnectWifi(ctx context.Context, in *ReqConnectUsbWifi, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendUsbConnectWifi", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SendUsbSwitch(ctx context.Context, in *ReqUsbSwitch, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SendUsbSwitch", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SetIOTServer(ctx context.Context, in *ReqIOTServer, opts ...grpc.CallOption) (*ResCode, error) {
	out := new(ResCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SetIOTServer", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SetGatewayPhoto(ctx context.Context, in *ReqInstruction, opts ...grpc.CallOption) (*ResPhotoCode, error) {
	out := new(ResPhotoCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SetGatewayPhoto", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) SetGatewayVideo(ctx context.Context, in *ReqSwitch, opts ...grpc.CallOption) (*ResVideoCode, error) {
	out := new(ResVideoCode)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/SetGatewayVideo", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewatSetClient) GetInstructionState(ctx context.Context, in *GetInstructionStateRequest, opts ...grpc.CallOption) (*GetInstructionStateResponse, error) {
	out := new(GetInstructionStateResponse)
	err := grpc.Invoke(ctx, "/pb.GatewatSet/GetInstructionState", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GatewatSetServer is the server API for GatewatSet service.
type GatewatSetServer interface {
	SendInstruction(context.Context, *ReqInstruction) (*ResCode, error)
	SendSwitch(context.Context, *ReqSwitch) (*ResCode, error)
	SendSetPower(context.Context, *ReqGwPower) (*ResCode, error)
	SendLora(context.Context, *ReqLora) (*ResCode, error)
	SendVideo(context.Context, *ReqVideo) (*ResCode, error)
	SendPhoto(context.Context, *ReqPhoto) (*ResCode, error)
	SendMusic(context.Context, *ReqMusic) (*ResCode, error)
	SendDeletFile(context.Context, *ReqDeletFile) (*ResCode, error)
	SendUpLog(context.Context, *ReqUpLog) (*ResCode, error)
	SendSetIp(context.Context, *ReqSetIP) (*ResCode, error)
	SendSetDNS(context.Context, *ReqSetDNS) (*ResCode, error)
	SendSetHotSpot(context.Context, *ReqSetHotSpot) (*ResCode, error)
	SendSetUsbHotSpot(context.Context, *ReqSetUsbHotSpot) (*ResCode, error)
	SendSetName(context.Context, *ReqSetName) (*ResCode, error)
	SendSetUsbIp(context.Context, *ReqSetUsbIP) (*ResCode, error)
	SendSetUsbDNS(context.Context, *ReqSetUsbDNS) (*ResCode, error)
	SendConnectWifi(context.Context, *ReqConnectWifi) (*ResCode, error)
	SendUsbConnectWifi(context.Context, *ReqConnectUsbWifi) (*ResCode, error)
	SendUsbSwitch(context.Context, *ReqUsbSwitch) (*ResCode, error)
	SetIOTServer(context.Context, *ReqIOTServer) (*ResCode, error)
	// 手动拍照
	SetGatewayPhoto(context.Context, *ReqInstruction) (*ResPhotoCode, error)
	// 手动摄像
	SetGatewayVideo(context.Context, *ReqSwitch) (*ResVideoCode, error)
	GetInstructionState(context.Context, *GetInstructionStateRequest) (*GetInstructionStateResponse, error)
}

func RegisterGatewatSetServer(s *grpc.Server, srv GatewatSetServer) {
	s.RegisterService(&_GatewatSet_serviceDesc, srv)
}

func _GatewatSet_SendInstruction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqInstruction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendInstruction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendInstruction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendInstruction(ctx, req.(*ReqInstruction))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSwitch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSwitch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSwitch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSwitch(ctx, req.(*ReqSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetPower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGwPower)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetPower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetPower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetPower(ctx, req.(*ReqGwPower))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendLora_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqLora)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendLora(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendLora",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendLora(ctx, req.(*ReqLora))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqVideo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendVideo(ctx, req.(*ReqVideo))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendPhoto(ctx, req.(*ReqPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendMusic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqMusic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendMusic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendMusic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendMusic(ctx, req.(*ReqMusic))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendDeletFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeletFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendDeletFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendDeletFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendDeletFile(ctx, req.(*ReqDeletFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendUpLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUpLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendUpLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendUpLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendUpLog(ctx, req.(*ReqUpLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetIp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetIP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetIp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetIp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetIp(ctx, req.(*ReqSetIP))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetDNS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetDNS(ctx, req.(*ReqSetDNS))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetHotSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetHotSpot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetHotSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetHotSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetHotSpot(ctx, req.(*ReqSetHotSpot))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetUsbHotSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetUsbHotSpot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetUsbHotSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetUsbHotSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetUsbHotSpot(ctx, req.(*ReqSetUsbHotSpot))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetName(ctx, req.(*ReqSetName))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetUsbIp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetUsbIP)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetUsbIp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetUsbIp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetUsbIp(ctx, req.(*ReqSetUsbIP))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendSetUsbDNS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetUsbDNS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendSetUsbDNS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendSetUsbDNS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendSetUsbDNS(ctx, req.(*ReqSetUsbDNS))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendConnectWifi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqConnectWifi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendConnectWifi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendConnectWifi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendConnectWifi(ctx, req.(*ReqConnectWifi))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendUsbConnectWifi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqConnectUsbWifi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendUsbConnectWifi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendUsbConnectWifi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendUsbConnectWifi(ctx, req.(*ReqConnectUsbWifi))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SendUsbSwitch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqUsbSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SendUsbSwitch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SendUsbSwitch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SendUsbSwitch(ctx, req.(*ReqUsbSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SetIOTServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqIOTServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SetIOTServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SetIOTServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SetIOTServer(ctx, req.(*ReqIOTServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SetGatewayPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqInstruction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SetGatewayPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SetGatewayPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SetGatewayPhoto(ctx, req.(*ReqInstruction))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_SetGatewayVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).SetGatewayVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/SetGatewayVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).SetGatewayVideo(ctx, req.(*ReqSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewatSet_GetInstructionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstructionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewatSetServer).GetInstructionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GatewatSet/GetInstructionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewatSetServer).GetInstructionState(ctx, req.(*GetInstructionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewatSet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GatewatSet",
	HandlerType: (*GatewatSetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendInstruction",
			Handler:    _GatewatSet_SendInstruction_Handler,
		},
		{
			MethodName: "SendSwitch",
			Handler:    _GatewatSet_SendSwitch_Handler,
		},
		{
			MethodName: "SendSetPower",
			Handler:    _GatewatSet_SendSetPower_Handler,
		},
		{
			MethodName: "SendLora",
			Handler:    _GatewatSet_SendLora_Handler,
		},
		{
			MethodName: "SendVideo",
			Handler:    _GatewatSet_SendVideo_Handler,
		},
		{
			MethodName: "SendPhoto",
			Handler:    _GatewatSet_SendPhoto_Handler,
		},
		{
			MethodName: "SendMusic",
			Handler:    _GatewatSet_SendMusic_Handler,
		},
		{
			MethodName: "SendDeletFile",
			Handler:    _GatewatSet_SendDeletFile_Handler,
		},
		{
			MethodName: "SendUpLog",
			Handler:    _GatewatSet_SendUpLog_Handler,
		},
		{
			MethodName: "SendSetIp",
			Handler:    _GatewatSet_SendSetIp_Handler,
		},
		{
			MethodName: "SendSetDNS",
			Handler:    _GatewatSet_SendSetDNS_Handler,
		},
		{
			MethodName: "SendSetHotSpot",
			Handler:    _GatewatSet_SendSetHotSpot_Handler,
		},
		{
			MethodName: "SendSetUsbHotSpot",
			Handler:    _GatewatSet_SendSetUsbHotSpot_Handler,
		},
		{
			MethodName: "SendSetName",
			Handler:    _GatewatSet_SendSetName_Handler,
		},
		{
			MethodName: "SendSetUsbIp",
			Handler:    _GatewatSet_SendSetUsbIp_Handler,
		},
		{
			MethodName: "SendSetUsbDNS",
			Handler:    _GatewatSet_SendSetUsbDNS_Handler,
		},
		{
			MethodName: "SendConnectWifi",
			Handler:    _GatewatSet_SendConnectWifi_Handler,
		},
		{
			MethodName: "SendUsbConnectWifi",
			Handler:    _GatewatSet_SendUsbConnectWifi_Handler,
		},
		{
			MethodName: "SendUsbSwitch",
			Handler:    _GatewatSet_SendUsbSwitch_Handler,
		},
		{
			MethodName: "SetIOTServer",
			Handler:    _GatewatSet_SetIOTServer_Handler,
		},
		{
			MethodName: "SetGatewayPhoto",
			Handler:    _GatewatSet_SetGatewayPhoto_Handler,
		},
		{
			MethodName: "SetGatewayVideo",
			Handler:    _GatewatSet_SetGatewayVideo_Handler,
		},
		{
			MethodName: "GetInstructionState",
			Handler:    _GatewatSet_GetInstructionState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway_set.proto",
}

func init() { proto.RegisterFile("gateway_set.proto", fileDescriptor_gateway_set_fa6736d808bf4bcd) }

var fileDescriptor_gateway_set_fa6736d808bf4bcd = []byte{
	// 1457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x6e, 0x1c, 0xc5,
	0x13, 0xcf, 0x7e, 0x79, 0xbd, 0xb5, 0xeb, 0xaf, 0xf9, 0xfb, 0x0f, 0x23, 0x07, 0x05, 0x6b, 0x90,
	0x90, 0x45, 0x82, 0x93, 0x18, 0x0e, 0xc0, 0x09, 0xf0, 0x62, 0x67, 0xe5, 0x78, 0x63, 0xcd, 0xd8,
	0x84, 0x1b, 0x9a, 0xdd, 0xed, 0xc4, 0x03, 0xce, 0xce, 0xec, 0x4c, 0x3b, 0xc6, 0xe2, 0x31, 0xe0,
	0x84, 0x78, 0x00, 0xb8, 0x03, 0x42, 0x88, 0x13, 0x6f, 0xc0, 0x81, 0xf7, 0x41, 0x55, 0xd5, 0xd3,
	0xd3, 0x33, 0xf6, 0x28, 0xcb, 0x2e, 0x20, 0x6e, 0x5d, 0xbf, 0xae, 0xea, 0xfe, 0x55, 0x75, 0x77,
	0x75, 0x75, 0xc3, 0xda, 0x53, 0x5f, 0x8a, 0x0b, 0xff, 0xf2, 0xd3, 0x44, 0xc8, 0xed, 0x28, 0x0e,
	0x65, 0x68, 0x55, 0xa3, 0x81, 0xf3, 0x1a, 0x34, 0x5d, 0x91, 0xec, 0x86, 0x23, 0x61, 0xd9, 0xd0,
	0xfc, 0x28, 0x8e, 0xb1, 0x69, 0x57, 0x36, 0x2b, 0x5b, 0x0d, 0x37, 0x15, 0x9d, 0x2f, 0xa1, 0xe5,
	0x8a, 0x89, 0x77, 0x11, 0xc8, 0xe1, 0xa9, 0xb5, 0x09, 0xed, 0xde, 0x38, 0x91, 0xf1, 0xf9, 0x50,
	0x06, 0xe1, 0x58, 0xa9, 0x9a, 0x90, 0xf5, 0x12, 0x2c, 0xb0, 0xae, 0x5d, 0xa5, 0x4e, 0x25, 0x59,
	0xaf, 0x40, 0x6b, 0x9f, 0x49, 0xf4, 0x46, 0x76, 0x6d, 0xb3, 0xb2, 0xd5, 0x72, 0x33, 0x00, 0xad,
	0x4e, 0x12, 0x11, 0xf7, 0x46, 0x76, 0x9d, 0xad, 0x58, 0x72, 0x4e, 0x61, 0xd9, 0x15, 0x13, 0x73,
	0xfc, 0x17, 0x33, 0xc8, 0xcd, 0x54, 0x2d, 0x9f, 0xa9, 0x96, 0x9b, 0xe9, 0x87, 0x0a, 0x80, 0x2b,
	0x26, 0xfb, 0x17, 0x47, 0xe1, 0x85, 0x88, 0xe7, 0x73, 0xd4, 0x93, 0x7e, 0x2c, 0x8f, 0x83, 0x67,
	0x22, 0x75, 0x54, 0x03, 0x14, 0xe7, 0xf1, 0x88, 0xfa, 0xea, 0xd4, 0x97, 0x8a, 0x79, 0xda, 0x8d,
	0x72, 0xda, 0x0b, 0x39, 0xda, 0x3f, 0x56, 0x71, 0x0d, 0x27, 0x0f, 0xc3, 0xd8, 0x9f, 0x82, 0xf3,
	0x3a, 0x34, 0xf6, 0x62, 0x31, 0xb9, 0xa7, 0x28, 0xb3, 0x90, 0xa2, 0xf7, 0x55, 0x44, 0x58, 0x40,
	0x3e, 0x5d, 0x5f, 0xfa, 0xae, 0x2f, 0xc5, 0x3d, 0xb5, 0x2a, 0x19, 0x60, 0xf6, 0xde, 0x27, 0xb6,
	0x46, 0xef, 0xfd, 0xbc, 0x2f, 0x0b, 0xe5, 0xbe, 0x34, 0x4d, 0x5f, 0xac, 0x55, 0xa8, 0x79, 0xc7,
	0x5d, 0x7b, 0x91, 0x40, 0x6c, 0x22, 0xb2, 0xe7, 0x1d, 0xd8, 0x2d, 0x46, 0xf6, 0xbc, 0x03, 0xf4,
	0x31, 0x9d, 0x06, 0x75, 0x81, 0x7d, 0x34, 0x20, 0xb4, 0x39, 0x10, 0x97, 0x76, 0x9b, 0x6d, 0x0e,
	0xc4, 0xa5, 0x65, 0x41, 0xfd, 0x43, 0x7f, 0x3c, 0xb2, 0x3b, 0x04, 0x51, 0xdb, 0xf9, 0xb5, 0x02,
	0x8b, 0xae, 0x98, 0x7c, 0x1c, 0x8c, 0x44, 0x38, 0xc7, 0x62, 0x3b, 0xd0, 0xa1, 0x21, 0xbc, 0xc8,
	0x1f, 0x06, 0xe3, 0xa7, 0x2a, 0x82, 0x39, 0x0c, 0x83, 0x41, 0xb2, 0x5e, 0xf4, 0x86, 0x9b, 0x01,
	0x33, 0x2e, 0xbb, 0xa2, 0x7f, 0x74, 0x8a, 0x47, 0x79, 0x2e, 0xfa, 0x34, 0x44, 0x81, 0xbe, 0x89,
	0x21, 0x41, 0x92, 0x4d, 0xfa, 0x1a, 0x98, 0x8f, 0xfe, 0xe1, 0x79, 0x12, 0x0c, 0xe7, 0xa3, 0x4f,
	0x43, 0x14, 0xe8, 0x9b, 0x18, 0x12, 0x24, 0xd9, 0xa4, 0xaf, 0x81, 0x19, 0xe9, 0xff, 0x54, 0x81,
	0x8e, 0x2b, 0x26, 0x5d, 0x71, 0x26, 0xe4, 0x5e, 0x70, 0x26, 0xe6, 0x70, 0x61, 0x03, 0x16, 0x71,
	0x84, 0xe3, 0xcb, 0x48, 0x28, 0xfa, 0x5a, 0x4e, 0xfb, 0xfa, 0xbe, 0x4e, 0x16, 0x5a, 0x9e, 0x9a,
	0x78, 0xee, 0x84, 0x39, 0xdf, 0x71, 0xdc, 0x4f, 0xa2, 0x87, 0xe1, 0xd3, 0x39, 0x48, 0xdb, 0xd0,
	0xfc, 0x60, 0x34, 0x8a, 0x45, 0x92, 0xa8, 0x04, 0x97, 0x8a, 0x78, 0xd4, 0xa2, 0x30, 0x96, 0x2a,
	0xd0, 0xd4, 0x9e, 0x9a, 0xea, 0x62, 0x8e, 0xea, 0x2f, 0x4c, 0xd5, 0x13, 0xb2, 0x77, 0x34, 0x05,
	0x55, 0x1b, 0x9a, 0x7d, 0x21, 0x29, 0x8c, 0xbc, 0x56, 0xa9, 0x68, 0x2d, 0x43, 0xb5, 0x17, 0x29,
	0x9e, 0xd5, 0x5e, 0x84, 0x9a, 0x6a, 0xf6, 0x34, 0x03, 0x2b, 0x11, 0xc9, 0x1f, 0xfa, 0xc9, 0xe7,
	0x8a, 0x23, 0xb5, 0xf3, 0xe4, 0x9b, 0xd3, 0x92, 0xff, 0xa3, 0x02, 0x6d, 0x26, 0x7f, 0x92, 0x0c,
	0xa6, 0xe2, 0x4f, 0x23, 0x0d, 0xfa, 0xe7, 0xcf, 0xd2, 0x50, 0xb3, 0xf4, 0xef, 0xf8, 0xb5, 0x58,
	0xee, 0x57, 0x2b, 0xe7, 0xd7, 0xcb, 0x50, 0xeb, 0xf6, 0x3d, 0x4c, 0xb1, 0xdd, 0xbe, 0x47, 0x6e,
	0xb4, 0x5c, 0x6c, 0x3a, 0xdf, 0x54, 0xb8, 0x4a, 0x10, 0x12, 0xfb, 0xff, 0xd2, 0x72, 0xd5, 0xf3,
	0x6e, 0xdd, 0x84, 0x7a, 0xb7, 0xef, 0x79, 0x76, 0x6d, 0xb3, 0xb6, 0xd5, 0xde, 0x69, 0x6e, 0x47,
	0x83, 0xed, 0x6e, 0xdf, 0x73, 0x09, 0x9c, 0xf5, 0x8e, 0xe4, 0xe3, 0xca, 0xab, 0x31, 0x1d, 0xbf,
	0x29, 0x96, 0xe3, 0x9f, 0xe7, 0xfd, 0x7d, 0x05, 0x96, 0x98, 0xf7, 0x83, 0x50, 0x7a, 0x51, 0x28,
	0xa7, 0x20, 0x6e, 0x41, 0x9d, 0xf2, 0x05, 0xd7, 0x3d, 0xd4, 0xc6, 0x3c, 0x72, 0xe4, 0x27, 0xc9,
	0x45, 0x18, 0xa7, 0x95, 0x97, 0x96, 0xd3, 0xdb, 0xb2, 0x9e, 0xdd, 0x96, 0xb3, 0x71, 0xfd, 0xad,
	0x02, 0xab, 0x3a, 0xc6, 0xff, 0x79, 0xba, 0x58, 0xf2, 0xe0, 0xc9, 0x4c, 0xf3, 0x23, 0x0b, 0xce,
	0x17, 0x54, 0x02, 0x7a, 0x42, 0x12, 0x8f, 0xd9, 0xd8, 0xcf, 0x56, 0xe7, 0xfe, 0x5c, 0xa1, 0x42,
	0x77, 0x37, 0x1c, 0x8f, 0xc5, 0x50, 0x3e, 0x0e, 0x9e, 0x04, 0xf3, 0xdd, 0x29, 0x38, 0x02, 0x51,
	0x53, 0x01, 0x4c, 0xe5, 0x5c, 0x70, 0xeb, 0x85, 0xe0, 0xce, 0xb6, 0xf2, 0xbf, 0x57, 0x60, 0x2d,
	0xa3, 0x7e, 0x92, 0x0c, 0xe6, 0x64, 0xaf, 0x97, 0xa6, 0x61, 0x2c, 0xcd, 0xdf, 0xe3, 0xd3, 0xb4,
	0x95, 0xa8, 0xf3, 0x35, 0x67, 0x8c, 0x93, 0x64, 0x30, 0xf7, 0xbb, 0x47, 0xbb, 0x53, 0x33, 0xdd,
	0xc9, 0xd1, 0xaa, 0x97, 0xd3, 0x6a, 0xe4, 0x68, 0x7d, 0x5b, 0x27, 0x5a, 0xbd, 0x47, 0xc7, 0x9e,
	0x88, 0x9f, 0x4f, 0xf5, 0x4a, 0x99, 0xe9, 0x31, 0x84, 0xa4, 0x7b, 0x8f, 0x8e, 0xf5, 0x2e, 0x65,
	0x01, 0xe3, 0xbc, 0x7b, 0x16, 0x88, 0xb1, 0xec, 0x75, 0xd5, 0xf6, 0xd0, 0x32, 0xf6, 0x3d, 0x08,
	0x13, 0x3a, 0x38, 0x2a, 0xcc, 0x5a, 0xc6, 0x63, 0x72, 0x84, 0x45, 0x01, 0xc7, 0x98, 0xda, 0xa8,
	0x8f, 0x73, 0x91, 0x3e, 0x5f, 0x3f, 0x5a, 0xce, 0xad, 0x67, 0xab, 0xb0, 0x9e, 0x5b, 0xb0, 0xe2,
	0x86, 0xa1, 0xdc, 0x15, 0xb1, 0x0c, 0x9e, 0x04, 0x43, 0x5f, 0x0a, 0x7a, 0x03, 0xb4, 0xdc, 0x22,
	0x6c, 0xdd, 0x81, 0x35, 0x66, 0x67, 0xea, 0xb6, 0x49, 0xf7, 0x6a, 0x07, 0xc6, 0x89, 0x41, 0x4c,
	0x2f, 0x1d, 0x8e, 0x93, 0x06, 0x30, 0x1e, 0xfb, 0x8f, 0x0f, 0xfd, 0xa1, 0xbd, 0x44, 0x3d, 0x2c,
	0x60, 0xf4, 0x7a, 0xa1, 0xc4, 0x4b, 0x62, 0x99, 0xa3, 0xc7, 0x92, 0x75, 0x0b, 0xe0, 0x28, 0x0e,
	0x47, 0xe7, 0x43, 0x1a, 0x6c, 0x85, 0x4c, 0x0c, 0x04, 0xfb, 0xbb, 0xe2, 0x79, 0x30, 0xe4, 0xca,
	0x6e, 0x95, 0xfb, 0x33, 0x84, 0xde, 0x56, 0x24, 0xa1, 0xf9, 0x1a, 0x73, 0xd1, 0x00, 0x5d, 0x41,
	0xe1, 0x88, 0xfa, 0x2c, 0xbe, 0xe7, 0x95, 0xe8, 0xdc, 0x55, 0x95, 0x3a, 0x3d, 0xe8, 0x1d, 0xe8,
	0xec, 0x86, 0xe3, 0x27, 0x67, 0xc1, 0x90, 0x5f, 0xa2, 0xbc, 0x37, 0x72, 0x98, 0x73, 0x82, 0xdb,
	0x29, 0xc9, 0x6c, 0x6e, 0x1b, 0x03, 0x90, 0x41, 0x7b, 0x67, 0x09, 0x2f, 0x32, 0x0d, 0xba, 0xc6,
	0x04, 0xc6, 0x8f, 0x41, 0x35, 0xff, 0x63, 0x70, 0xa8, 0x1e, 0x3c, 0xd3, 0xf2, 0x40, 0x87, 0x8f,
	0x43, 0xe9, 0x9f, 0x91, 0x02, 0x0f, 0x96, 0x01, 0x8a, 0x65, 0x36, 0xe2, 0x6d, 0x63, 0x78, 0x93,
	0xa5, 0x06, 0x5d, 0x63, 0xfa, 0x72, 0x96, 0x9f, 0xc1, 0xaa, 0x71, 0x50, 0x3c, 0x89, 0xbb, 0x60,
	0x1d, 0x1a, 0xd4, 0x50, 0x2c, 0x59, 0xb8, 0xe2, 0x42, 0xf5, 0x45, 0x2e, 0xd4, 0x8a, 0x2e, 0x48,
	0xd8, 0xd8, 0x17, 0xb2, 0x38, 0x9d, 0x2b, 0x26, 0xe7, 0x22, 0x29, 0x14, 0xc8, 0x95, 0xf2, 0x33,
	0x5a, 0xcd, 0x9d, 0xd1, 0xc2, 0xd9, 0xe7, 0xa4, 0x68, 0x42, 0xce, 0x25, 0xdc, 0xbc, 0x76, 0xd6,
	0x24, 0x0a, 0xc7, 0x89, 0xb0, 0xde, 0xbf, 0x1a, 0x00, 0x15, 0xce, 0x75, 0x0c, 0xe7, 0x15, 0xbb,
	0xab, 0xe1, 0xb2, 0xa1, 0x29, 0xf2, 0xc1, 0x55, 0xe2, 0xce, 0x57, 0x2d, 0x00, 0x76, 0x41, 0x7a,
	0x42, 0x5a, 0x6f, 0xc3, 0x8a, 0x27, 0xc6, 0xa3, 0xdc, 0xdd, 0x89, 0x73, 0xe4, 0xff, 0x76, 0x36,
	0xda, 0x8c, 0xd1, 0x8f, 0x94, 0x73, 0xc3, 0x7a, 0x03, 0x00, 0xad, 0x54, 0x22, 0x5d, 0x52, 0x06,
	0x2c, 0x16, 0x75, 0xdf, 0x84, 0x0e, 0xe9, 0x0a, 0xc9, 0xff, 0x37, 0xcb, 0x4a, 0x5b, 0xfd, 0xe7,
	0x14, 0xd5, 0x5f, 0x87, 0x45, 0x54, 0xa7, 0x6f, 0x13, 0xd5, 0x45, 0x7f, 0x28, 0x45, 0xbd, 0x2d,
	0x68, 0xa1, 0x1e, 0x7f, 0x13, 0x74, 0x94, 0x22, 0x49, 0x25, 0x9a, 0xfc, 0x22, 0x4f, 0x35, 0x49,
	0x2a, 0xd1, 0xe4, 0xc7, 0x6f, 0xaa, 0x49, 0x52, 0x51, 0xf3, 0x1e, 0x2c, 0xa1, 0x66, 0xf6, 0xce,
	0x5c, 0x55, 0xda, 0x1a, 0x29, 0x19, 0x9b, 0x1f, 0x78, 0xe9, 0xd8, 0x24, 0x95, 0x68, 0xe2, 0xfb,
	0x2a, 0xd2, 0x9a, 0xf4, 0xda, 0x2a, 0x5b, 0x06, 0xae, 0xed, 0x97, 0x32, 0xd5, 0x6e, 0xdf, 0x2b,
	0xea, 0xee, 0xc0, 0xb2, 0xd2, 0x4d, 0x6b, 0xc0, 0xb5, 0x4c, 0x5f, 0x41, 0x45, 0x9b, 0x77, 0x60,
	0x4d, 0xd9, 0x18, 0xa5, 0xe3, 0x7a, 0x66, 0x96, 0xa1, 0x45, 0xcb, 0x3b, 0xd0, 0x56, 0x96, 0x94,
	0x37, 0x97, 0x33, 0x1b, 0x94, 0x8b, 0xda, 0xdb, 0x7a, 0x8b, 0xe0, 0x1d, 0x1c, 0x59, 0x2b, 0xb9,
	0x29, 0xae, 0xfa, 0xad, 0xa2, 0x9f, 0x3d, 0x1b, 0x56, 0x73, 0x06, 0xd7, 0x78, 0xaf, 0xb6, 0xb9,
	0x59, 0xc5, 0xa5, 0xdb, 0xdc, 0xc0, 0x8a, 0x56, 0xef, 0x81, 0x45, 0x6b, 0x96, 0x0c, 0x4c, 0xc3,
	0xff, 0xe7, 0x0d, 0x55, 0x5d, 0x55, 0xc2, 0x31, 0x2b, 0x54, 0x52, 0x8e, 0x1a, 0x29, 0x5a, 0xdc,
	0xc5, 0x28, 0xc8, 0xac, 0x84, 0x48, 0x0d, 0x34, 0x52, 0x34, 0x78, 0x17, 0x9d, 0x92, 0x2a, 0x1f,
	0xf1, 0xf6, 0xbe, 0xee, 0xec, 0xaa, 0x71, 0xb2, 0xdb, 0x24, 0x8d, 0x47, 0x6a, 0xca, 0x67, 0xa8,
	0x70, 0x8a, 0x53, 0x2b, 0x9d, 0xb0, 0x9d, 0x1b, 0xd6, 0x27, 0xf0, 0xbf, 0x6b, 0xd2, 0x96, 0x75,
	0x0b, 0x55, 0xcb, 0xb3, 0xe8, 0xc6, 0xab, 0xa5, 0xfd, 0x9c, 0xef, 0x9c, 0x1b, 0x83, 0x05, 0xfa,
	0xfa, 0x7e, 0xeb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x39, 0xdc, 0x6c, 0x0f, 0x17, 0x00,
	0x00,
}
