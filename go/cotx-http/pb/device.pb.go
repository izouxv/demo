// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Accelerometer defines the accelerometer data.
type Accelerometer struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=X,proto3" json:"X"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y"`
	Z                    float64  `protobuf:"fixed64,3,opt,name=Z,proto3" json:"Z"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Accelerometer) Reset()         { *m = Accelerometer{} }
func (m *Accelerometer) String() string { return proto.CompactTextString(m) }
func (*Accelerometer) ProtoMessage()    {}
func (*Accelerometer) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{0}
}
func (m *Accelerometer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Accelerometer.Unmarshal(m, b)
}
func (m *Accelerometer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Accelerometer.Marshal(b, m, deterministic)
}
func (dst *Accelerometer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Accelerometer.Merge(dst, src)
}
func (m *Accelerometer) XXX_Size() int {
	return xxx_messageInfo_Accelerometer.Size(m)
}
func (m *Accelerometer) XXX_DiscardUnknown() {
	xxx_messageInfo_Accelerometer.DiscardUnknown(m)
}

var xxx_messageInfo_Accelerometer proto.InternalMessageInfo

func (m *Accelerometer) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Accelerometer) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Accelerometer) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

// Gyrometer defines the gyrometer data.
type Gyrometer struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=X,proto3" json:"X"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y"`
	Z                    float64  `protobuf:"fixed64,3,opt,name=Z,proto3" json:"Z"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gyrometer) Reset()         { *m = Gyrometer{} }
func (m *Gyrometer) String() string { return proto.CompactTextString(m) }
func (*Gyrometer) ProtoMessage()    {}
func (*Gyrometer) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{1}
}
func (m *Gyrometer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gyrometer.Unmarshal(m, b)
}
func (m *Gyrometer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gyrometer.Marshal(b, m, deterministic)
}
func (dst *Gyrometer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gyrometer.Merge(dst, src)
}
func (m *Gyrometer) XXX_Size() int {
	return xxx_messageInfo_Gyrometer.Size(m)
}
func (m *Gyrometer) XXX_DiscardUnknown() {
	xxx_messageInfo_Gyrometer.DiscardUnknown(m)
}

var xxx_messageInfo_Gyrometer proto.InternalMessageInfo

func (m *Gyrometer) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Gyrometer) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Gyrometer) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

// GPSLocation defines the GPS location data.
type GPSLocation struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=Latitude,proto3" json:"Latitude"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude"`
	Altitude             float64  `protobuf:"fixed64,3,opt,name=Altitude,proto3" json:"Altitude"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPSLocation) Reset()         { *m = GPSLocation{} }
func (m *GPSLocation) String() string { return proto.CompactTextString(m) }
func (*GPSLocation) ProtoMessage()    {}
func (*GPSLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{2}
}
func (m *GPSLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPSLocation.Unmarshal(m, b)
}
func (m *GPSLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPSLocation.Marshal(b, m, deterministic)
}
func (dst *GPSLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPSLocation.Merge(dst, src)
}
func (m *GPSLocation) XXX_Size() int {
	return xxx_messageInfo_GPSLocation.Size(m)
}
func (m *GPSLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GPSLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GPSLocation proto.InternalMessageInfo

func (m *GPSLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GPSLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GPSLocation) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type DataUp struct {
	Accelerometer        *Accelerometer `protobuf:"bytes,4,opt,name=Accelerometer,proto3" json:"Accelerometer"`
	Gyrometer            *Gyrometer     `protobuf:"bytes,5,opt,name=Gyrometer,proto3" json:"Gyrometer"`
	GPSLocation          *GPSLocation   `protobuf:"bytes,6,opt,name=GPSLocation,proto3" json:"GPSLocation"`
	Data                 float64        `protobuf:"fixed64,1,opt,name=Data,proto3" json:"Data"`
	Describe             string         `protobuf:"bytes,2,opt,name=Describe,proto3" json:"Describe"`
	Channel              int32          `protobuf:"varint,3,opt,name=Channel,proto3" json:"Channel"`
	Timetamp             int64          `protobuf:"varint,7,opt,name=Timetamp,proto3" json:"Timetamp"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DataUp) Reset()         { *m = DataUp{} }
func (m *DataUp) String() string { return proto.CompactTextString(m) }
func (*DataUp) ProtoMessage()    {}
func (*DataUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{3}
}
func (m *DataUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataUp.Unmarshal(m, b)
}
func (m *DataUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataUp.Marshal(b, m, deterministic)
}
func (dst *DataUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataUp.Merge(dst, src)
}
func (m *DataUp) XXX_Size() int {
	return xxx_messageInfo_DataUp.Size(m)
}
func (m *DataUp) XXX_DiscardUnknown() {
	xxx_messageInfo_DataUp.DiscardUnknown(m)
}

var xxx_messageInfo_DataUp proto.InternalMessageInfo

func (m *DataUp) GetAccelerometer() *Accelerometer {
	if m != nil {
		return m.Accelerometer
	}
	return nil
}

func (m *DataUp) GetGyrometer() *Gyrometer {
	if m != nil {
		return m.Gyrometer
	}
	return nil
}

func (m *DataUp) GetGPSLocation() *GPSLocation {
	if m != nil {
		return m.GPSLocation
	}
	return nil
}

func (m *DataUp) GetData() float64 {
	if m != nil {
		return m.Data
	}
	return 0
}

func (m *DataUp) GetDescribe() string {
	if m != nil {
		return m.Describe
	}
	return ""
}

func (m *DataUp) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *DataUp) GetTimetamp() int64 {
	if m != nil {
		return m.Timetamp
	}
	return 0
}

type ResNodeDateUp struct {
	Data                 []*DataUp `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data"`
	ErrCode              int32     `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResNodeDateUp) Reset()         { *m = ResNodeDateUp{} }
func (m *ResNodeDateUp) String() string { return proto.CompactTextString(m) }
func (*ResNodeDateUp) ProtoMessage()    {}
func (*ResNodeDateUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{4}
}
func (m *ResNodeDateUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResNodeDateUp.Unmarshal(m, b)
}
func (m *ResNodeDateUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResNodeDateUp.Marshal(b, m, deterministic)
}
func (dst *ResNodeDateUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResNodeDateUp.Merge(dst, src)
}
func (m *ResNodeDateUp) XXX_Size() int {
	return xxx_messageInfo_ResNodeDateUp.Size(m)
}
func (m *ResNodeDateUp) XXX_DiscardUnknown() {
	xxx_messageInfo_ResNodeDateUp.DiscardUnknown(m)
}

var xxx_messageInfo_ResNodeDateUp proto.InternalMessageInfo

func (m *ResNodeDateUp) GetData() []*DataUp {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ResNodeDateUp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type ReqNodeMessageByNid struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId"`
	UserId               int32    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	NodeType             string   `protobuf:"bytes,3,opt,name=NodeType,proto3" json:"NodeType"`
	GatewayId            string   `protobuf:"bytes,4,opt,name=GatewayId,proto3" json:"GatewayId"`
	Type                 int32    `protobuf:"varint,5,opt,name=Type,proto3" json:"Type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqNodeMessageByNid) Reset()         { *m = ReqNodeMessageByNid{} }
func (m *ReqNodeMessageByNid) String() string { return proto.CompactTextString(m) }
func (*ReqNodeMessageByNid) ProtoMessage()    {}
func (*ReqNodeMessageByNid) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{5}
}
func (m *ReqNodeMessageByNid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqNodeMessageByNid.Unmarshal(m, b)
}
func (m *ReqNodeMessageByNid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqNodeMessageByNid.Marshal(b, m, deterministic)
}
func (dst *ReqNodeMessageByNid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqNodeMessageByNid.Merge(dst, src)
}
func (m *ReqNodeMessageByNid) XXX_Size() int {
	return xxx_messageInfo_ReqNodeMessageByNid.Size(m)
}
func (m *ReqNodeMessageByNid) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqNodeMessageByNid.DiscardUnknown(m)
}

var xxx_messageInfo_ReqNodeMessageByNid proto.InternalMessageInfo

func (m *ReqNodeMessageByNid) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReqNodeMessageByNid) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqNodeMessageByNid) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *ReqNodeMessageByNid) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqNodeMessageByNid) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type ResGetDeviceScan struct {
	DevEuis              []*DeviceEui `protobuf:"bytes,1,rep,name=DevEuis,proto3" json:"DevEuis"`
	ErrCode              int32        `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResGetDeviceScan) Reset()         { *m = ResGetDeviceScan{} }
func (m *ResGetDeviceScan) String() string { return proto.CompactTextString(m) }
func (*ResGetDeviceScan) ProtoMessage()    {}
func (*ResGetDeviceScan) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{6}
}
func (m *ResGetDeviceScan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResGetDeviceScan.Unmarshal(m, b)
}
func (m *ResGetDeviceScan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResGetDeviceScan.Marshal(b, m, deterministic)
}
func (dst *ResGetDeviceScan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResGetDeviceScan.Merge(dst, src)
}
func (m *ResGetDeviceScan) XXX_Size() int {
	return xxx_messageInfo_ResGetDeviceScan.Size(m)
}
func (m *ResGetDeviceScan) XXX_DiscardUnknown() {
	xxx_messageInfo_ResGetDeviceScan.DiscardUnknown(m)
}

var xxx_messageInfo_ResGetDeviceScan proto.InternalMessageInfo

func (m *ResGetDeviceScan) GetDevEuis() []*DeviceEui {
	if m != nil {
		return m.DevEuis
	}
	return nil
}

func (m *ResGetDeviceScan) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type DeviceEuis struct {
	DevEuis              string   `protobuf:"bytes,1,opt,name=DevEuis,proto3" json:"DevEuis"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceEuis) Reset()         { *m = DeviceEuis{} }
func (m *DeviceEuis) String() string { return proto.CompactTextString(m) }
func (*DeviceEuis) ProtoMessage()    {}
func (*DeviceEuis) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{7}
}
func (m *DeviceEuis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceEuis.Unmarshal(m, b)
}
func (m *DeviceEuis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceEuis.Marshal(b, m, deterministic)
}
func (dst *DeviceEuis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceEuis.Merge(dst, src)
}
func (m *DeviceEuis) XXX_Size() int {
	return xxx_messageInfo_DeviceEuis.Size(m)
}
func (m *DeviceEuis) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceEuis.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceEuis proto.InternalMessageInfo

func (m *DeviceEuis) GetDevEuis() string {
	if m != nil {
		return m.DevEuis
	}
	return ""
}

type ReqregistDevice struct {
	DevEuis              []*DeviceEuis `protobuf:"bytes,1,rep,name=DevEuis,proto3" json:"DevEuis"`
	UserId               int32         `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	GatewayId            string        `protobuf:"bytes,3,opt,name=GatewayId,proto3" json:"GatewayId"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqregistDevice) Reset()         { *m = ReqregistDevice{} }
func (m *ReqregistDevice) String() string { return proto.CompactTextString(m) }
func (*ReqregistDevice) ProtoMessage()    {}
func (*ReqregistDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{8}
}
func (m *ReqregistDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqregistDevice.Unmarshal(m, b)
}
func (m *ReqregistDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqregistDevice.Marshal(b, m, deterministic)
}
func (dst *ReqregistDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqregistDevice.Merge(dst, src)
}
func (m *ReqregistDevice) XXX_Size() int {
	return xxx_messageInfo_ReqregistDevice.Size(m)
}
func (m *ReqregistDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqregistDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqregistDevice proto.InternalMessageInfo

func (m *ReqregistDevice) GetDevEuis() []*DeviceEuis {
	if m != nil {
		return m.DevEuis
	}
	return nil
}

func (m *ReqregistDevice) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqregistDevice) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type DeviceEui struct {
	DevEui               string   `protobuf:"bytes,1,opt,name=DevEui,proto3" json:"DevEui"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceEui) Reset()         { *m = DeviceEui{} }
func (m *DeviceEui) String() string { return proto.CompactTextString(m) }
func (*DeviceEui) ProtoMessage()    {}
func (*DeviceEui) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{9}
}
func (m *DeviceEui) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceEui.Unmarshal(m, b)
}
func (m *DeviceEui) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceEui.Marshal(b, m, deterministic)
}
func (dst *DeviceEui) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceEui.Merge(dst, src)
}
func (m *DeviceEui) XXX_Size() int {
	return xxx_messageInfo_DeviceEui.Size(m)
}
func (m *DeviceEui) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceEui.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceEui proto.InternalMessageInfo

func (m *DeviceEui) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type ResRegistDevice struct {
	DevEuis              []*DeviceEui `protobuf:"bytes,2,rep,name=DevEuis,proto3" json:"DevEuis"`
	ErrCode              int32        `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResRegistDevice) Reset()         { *m = ResRegistDevice{} }
func (m *ResRegistDevice) String() string { return proto.CompactTextString(m) }
func (*ResRegistDevice) ProtoMessage()    {}
func (*ResRegistDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{10}
}
func (m *ResRegistDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResRegistDevice.Unmarshal(m, b)
}
func (m *ResRegistDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResRegistDevice.Marshal(b, m, deterministic)
}
func (dst *ResRegistDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResRegistDevice.Merge(dst, src)
}
func (m *ResRegistDevice) XXX_Size() int {
	return xxx_messageInfo_ResRegistDevice.Size(m)
}
func (m *ResRegistDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ResRegistDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ResRegistDevice proto.InternalMessageInfo

func (m *ResRegistDevice) GetDevEuis() []*DeviceEui {
	if m != nil {
		return m.DevEuis
	}
	return nil
}

func (m *ResRegistDevice) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type ReqRegistNode struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	DevEui               string   `protobuf:"bytes,2,opt,name=DevEui,proto3" json:"DevEui"`
	UserId               int32    `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRegistNode) Reset()         { *m = ReqRegistNode{} }
func (m *ReqRegistNode) String() string { return proto.CompactTextString(m) }
func (*ReqRegistNode) ProtoMessage()    {}
func (*ReqRegistNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{11}
}
func (m *ReqRegistNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRegistNode.Unmarshal(m, b)
}
func (m *ReqRegistNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRegistNode.Marshal(b, m, deterministic)
}
func (dst *ReqRegistNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRegistNode.Merge(dst, src)
}
func (m *ReqRegistNode) XXX_Size() int {
	return xxx_messageInfo_ReqRegistNode.Size(m)
}
func (m *ReqRegistNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRegistNode.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRegistNode proto.InternalMessageInfo

func (m *ReqRegistNode) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqRegistNode) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *ReqRegistNode) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ResRegistNode struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResRegistNode) Reset()         { *m = ResRegistNode{} }
func (m *ResRegistNode) String() string { return proto.CompactTextString(m) }
func (*ResRegistNode) ProtoMessage()    {}
func (*ResRegistNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{12}
}
func (m *ResRegistNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResRegistNode.Unmarshal(m, b)
}
func (m *ResRegistNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResRegistNode.Marshal(b, m, deterministic)
}
func (dst *ResRegistNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResRegistNode.Merge(dst, src)
}
func (m *ResRegistNode) XXX_Size() int {
	return xxx_messageInfo_ResRegistNode.Size(m)
}
func (m *ResRegistNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResRegistNode.DiscardUnknown(m)
}

var xxx_messageInfo_ResRegistNode proto.InternalMessageInfo

func (m *ResRegistNode) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type LoraDevice struct {
	Id                   int64    `protobuf:"varint,3,opt,name=Id,proto3" json:"Id"`
	Type                 int32    `protobuf:"varint,16,opt,name=Type,proto3" json:"Type"`
	Adr_Interval         int32    `protobuf:"varint,4,opt,name=Adr_Interval,json=AdrInterval,proto3" json:"Adr_Interval"`
	RelaxF_Cnt           bool     `protobuf:"varint,7,opt,name=Relax_f_Cnt,json=RelaxFCnt,proto3" json:"Relax_f_Cnt"`
	Deveui               string   `protobuf:"bytes,1,opt,name=Deveui,proto3" json:"Deveui"`
	Appeui               string   `protobuf:"bytes,2,opt,name=Appeui,proto3" json:"Appeui"`
	Is_ABP               bool     `protobuf:"varint,5,opt,name=Is_ABP,json=IsABP,proto3" json:"Is_ABP"`
	Appkey               string   `protobuf:"bytes,6,opt,name=Appkey,proto3" json:"Appkey"`
	Is_Classc            bool     `protobuf:"varint,8,opt,name=Is_Classc,json=IsClassc,proto3" json:"Is_Classc"`
	Apps_Key             string   `protobuf:"bytes,9,opt,name=Apps_Key,json=AppsKey,proto3" json:"Apps_Key"`
	Nwks_Key             string   `protobuf:"bytes,10,opt,name=Nwks_Key,json=NwksKey,proto3" json:"Nwks_Key"`
	Dev_Addr             string   `protobuf:"bytes,11,opt,name=Dev_Addr,json=DevAddr,proto3" json:"Dev_Addr"`
	Rx_Delay             int32    `protobuf:"varint,12,opt,name=Rx_Delay,json=RxDelay,proto3" json:"Rx_Delay"`
	Rx1_DR_Offset        int32    `protobuf:"varint,13,opt,name=Rx1_DR_Offset,json=Rx1DROffset,proto3" json:"Rx1_DR_Offset"`
	Rx_Window            int32    `protobuf:"varint,14,opt,name=Rx_Window,json=RxWindow,proto3" json:"Rx_Window"`
	Rx2_DR               int32    `protobuf:"varint,15,opt,name=Rx2_DR,json=Rx2DR,proto3" json:"Rx2_DR"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoraDevice) Reset()         { *m = LoraDevice{} }
func (m *LoraDevice) String() string { return proto.CompactTextString(m) }
func (*LoraDevice) ProtoMessage()    {}
func (*LoraDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{13}
}
func (m *LoraDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraDevice.Unmarshal(m, b)
}
func (m *LoraDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraDevice.Marshal(b, m, deterministic)
}
func (dst *LoraDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraDevice.Merge(dst, src)
}
func (m *LoraDevice) XXX_Size() int {
	return xxx_messageInfo_LoraDevice.Size(m)
}
func (m *LoraDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraDevice.DiscardUnknown(m)
}

var xxx_messageInfo_LoraDevice proto.InternalMessageInfo

func (m *LoraDevice) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoraDevice) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LoraDevice) GetAdr_Interval() int32 {
	if m != nil {
		return m.Adr_Interval
	}
	return 0
}

func (m *LoraDevice) GetRelaxF_Cnt() bool {
	if m != nil {
		return m.RelaxF_Cnt
	}
	return false
}

func (m *LoraDevice) GetDeveui() string {
	if m != nil {
		return m.Deveui
	}
	return ""
}

func (m *LoraDevice) GetAppeui() string {
	if m != nil {
		return m.Appeui
	}
	return ""
}

func (m *LoraDevice) GetIs_ABP() bool {
	if m != nil {
		return m.Is_ABP
	}
	return false
}

func (m *LoraDevice) GetAppkey() string {
	if m != nil {
		return m.Appkey
	}
	return ""
}

func (m *LoraDevice) GetIs_Classc() bool {
	if m != nil {
		return m.Is_Classc
	}
	return false
}

func (m *LoraDevice) GetApps_Key() string {
	if m != nil {
		return m.Apps_Key
	}
	return ""
}

func (m *LoraDevice) GetNwks_Key() string {
	if m != nil {
		return m.Nwks_Key
	}
	return ""
}

func (m *LoraDevice) GetDev_Addr() string {
	if m != nil {
		return m.Dev_Addr
	}
	return ""
}

func (m *LoraDevice) GetRx_Delay() int32 {
	if m != nil {
		return m.Rx_Delay
	}
	return 0
}

func (m *LoraDevice) GetRx1_DR_Offset() int32 {
	if m != nil {
		return m.Rx1_DR_Offset
	}
	return 0
}

func (m *LoraDevice) GetRx_Window() int32 {
	if m != nil {
		return m.Rx_Window
	}
	return 0
}

func (m *LoraDevice) GetRx2_DR() int32 {
	if m != nil {
		return m.Rx2_DR
	}
	return 0
}

// 添加第三方终端
type PutDeviceRequest struct {
	GatewayId            string      `protobuf:"bytes,2,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32       `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId"`
	Device               *LoraDevice `protobuf:"bytes,1,opt,name=Device,proto3" json:"Device"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PutDeviceRequest) Reset()         { *m = PutDeviceRequest{} }
func (m *PutDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*PutDeviceRequest) ProtoMessage()    {}
func (*PutDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{14}
}
func (m *PutDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDeviceRequest.Unmarshal(m, b)
}
func (m *PutDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *PutDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDeviceRequest.Merge(dst, src)
}
func (m *PutDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_PutDeviceRequest.Size(m)
}
func (m *PutDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutDeviceRequest proto.InternalMessageInfo

func (m *PutDeviceRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *PutDeviceRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PutDeviceRequest) GetDevice() *LoraDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

type PutDeviceResponse struct {
	ErrCode              int32       `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	Device               *LoraDevice `protobuf:"bytes,2,opt,name=Device,proto3" json:"Device"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PutDeviceResponse) Reset()         { *m = PutDeviceResponse{} }
func (m *PutDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*PutDeviceResponse) ProtoMessage()    {}
func (*PutDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{15}
}
func (m *PutDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutDeviceResponse.Unmarshal(m, b)
}
func (m *PutDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *PutDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDeviceResponse.Merge(dst, src)
}
func (m *PutDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_PutDeviceResponse.Size(m)
}
func (m *PutDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutDeviceResponse proto.InternalMessageInfo

func (m *PutDeviceResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *PutDeviceResponse) GetDevice() *LoraDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

type PostDeviceRequest struct {
	GatewayId            string      `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32       `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	Device               *LoraDevice `protobuf:"bytes,3,opt,name=Device,proto3" json:"Device"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PostDeviceRequest) Reset()         { *m = PostDeviceRequest{} }
func (m *PostDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*PostDeviceRequest) ProtoMessage()    {}
func (*PostDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{16}
}
func (m *PostDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostDeviceRequest.Unmarshal(m, b)
}
func (m *PostDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *PostDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostDeviceRequest.Merge(dst, src)
}
func (m *PostDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_PostDeviceRequest.Size(m)
}
func (m *PostDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostDeviceRequest proto.InternalMessageInfo

func (m *PostDeviceRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *PostDeviceRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PostDeviceRequest) GetDevice() *LoraDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

type PostDeviceResponse struct {
	ErrCode              int32       `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	Device               *LoraDevice `protobuf:"bytes,2,opt,name=Device,proto3" json:"Device"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PostDeviceResponse) Reset()         { *m = PostDeviceResponse{} }
func (m *PostDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*PostDeviceResponse) ProtoMessage()    {}
func (*PostDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{17}
}
func (m *PostDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostDeviceResponse.Unmarshal(m, b)
}
func (m *PostDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *PostDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostDeviceResponse.Merge(dst, src)
}
func (m *PostDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_PostDeviceResponse.Size(m)
}
func (m *PostDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostDeviceResponse proto.InternalMessageInfo

func (m *PostDeviceResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *PostDeviceResponse) GetDevice() *LoraDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	Deveui               string   `protobuf:"bytes,3,opt,name=Deveui,proto3" json:"Deveui"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{18}
}
func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(dst, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetDeviceRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetDeviceRequest) GetDeveui() string {
	if m != nil {
		return m.Deveui
	}
	return ""
}

type GetDeviceResponse struct {
	ErrCode              int32       `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	Device               *LoraDevice `protobuf:"bytes,2,opt,name=Device,proto3" json:"Device"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{19}
}
func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(dst, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetDeviceResponse) GetDevice() *LoraDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceListRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	Deveuis              []string `protobuf:"bytes,3,rep,name=Deveuis,proto3" json:"Deveuis"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceListRequest) Reset()         { *m = GetDeviceListRequest{} }
func (m *GetDeviceListRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListRequest) ProtoMessage()    {}
func (*GetDeviceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{20}
}
func (m *GetDeviceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListRequest.Unmarshal(m, b)
}
func (m *GetDeviceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListRequest.Merge(dst, src)
}
func (m *GetDeviceListRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListRequest.Size(m)
}
func (m *GetDeviceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListRequest proto.InternalMessageInfo

func (m *GetDeviceListRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetDeviceListRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetDeviceListRequest) GetDeveuis() []string {
	if m != nil {
		return m.Deveuis
	}
	return nil
}

type GetDeviceListResponse struct {
	ErrCode              int32         `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	Devices              []*LoraDevice `protobuf:"bytes,2,rep,name=Devices,proto3" json:"Devices"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDeviceListResponse) Reset()         { *m = GetDeviceListResponse{} }
func (m *GetDeviceListResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListResponse) ProtoMessage()    {}
func (*GetDeviceListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{21}
}
func (m *GetDeviceListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListResponse.Unmarshal(m, b)
}
func (m *GetDeviceListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListResponse.Merge(dst, src)
}
func (m *GetDeviceListResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListResponse.Size(m)
}
func (m *GetDeviceListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListResponse proto.InternalMessageInfo

func (m *GetDeviceListResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetDeviceListResponse) GetDevices() []*LoraDevice {
	if m != nil {
		return m.Devices
	}
	return nil
}

type AddDevicesRequest struct {
	UserId               int32         `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId"`
	GatewayId            string        `protobuf:"bytes,2,opt,name=GatewayId,proto3" json:"GatewayId"`
	Devices              []*LoraDevice `protobuf:"bytes,3,rep,name=Devices,proto3" json:"Devices"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddDevicesRequest) Reset()         { *m = AddDevicesRequest{} }
func (m *AddDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*AddDevicesRequest) ProtoMessage()    {}
func (*AddDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{22}
}
func (m *AddDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDevicesRequest.Unmarshal(m, b)
}
func (m *AddDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDevicesRequest.Marshal(b, m, deterministic)
}
func (dst *AddDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDevicesRequest.Merge(dst, src)
}
func (m *AddDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_AddDevicesRequest.Size(m)
}
func (m *AddDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDevicesRequest proto.InternalMessageInfo

func (m *AddDevicesRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddDevicesRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *AddDevicesRequest) GetDevices() []*LoraDevice {
	if m != nil {
		return m.Devices
	}
	return nil
}

type AddDevicesResponse struct {
	Devices              []*LoraDevice `protobuf:"bytes,2,rep,name=Devices,proto3" json:"Devices"`
	ErrCode              int32         `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddDevicesResponse) Reset()         { *m = AddDevicesResponse{} }
func (m *AddDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*AddDevicesResponse) ProtoMessage()    {}
func (*AddDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{23}
}
func (m *AddDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDevicesResponse.Unmarshal(m, b)
}
func (m *AddDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDevicesResponse.Marshal(b, m, deterministic)
}
func (dst *AddDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDevicesResponse.Merge(dst, src)
}
func (m *AddDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_AddDevicesResponse.Size(m)
}
func (m *AddDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddDevicesResponse proto.InternalMessageInfo

func (m *AddDevicesResponse) GetDevices() []*LoraDevice {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *AddDevicesResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type DeleteDeviceRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=GatewayId,proto3" json:"GatewayId"`
	Deveui               string   `protobuf:"bytes,3,opt,name=Deveui,proto3" json:"Deveui"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{24}
}
func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(dst, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeleteDeviceRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *DeleteDeviceRequest) GetDeveui() string {
	if m != nil {
		return m.Deveui
	}
	return ""
}

type DeleteDeviceResponse struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceResponse) Reset()         { *m = DeleteDeviceResponse{} }
func (m *DeleteDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceResponse) ProtoMessage()    {}
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{25}
}
func (m *DeleteDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceResponse.Unmarshal(m, b)
}
func (m *DeleteDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceResponse.Merge(dst, src)
}
func (m *DeleteDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceResponse.Size(m)
}
func (m *DeleteDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceResponse proto.InternalMessageInfo

func (m *DeleteDeviceResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 设置终端名称
type ReqSetDeviceName struct {
	UserId               int32    `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId"`
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	NodeId               string   `protobuf:"bytes,2,opt,name=NodeId,proto3" json:"NodeId"`
	NodeName             string   `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSetDeviceName) Reset()         { *m = ReqSetDeviceName{} }
func (m *ReqSetDeviceName) String() string { return proto.CompactTextString(m) }
func (*ReqSetDeviceName) ProtoMessage()    {}
func (*ReqSetDeviceName) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{26}
}
func (m *ReqSetDeviceName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSetDeviceName.Unmarshal(m, b)
}
func (m *ReqSetDeviceName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSetDeviceName.Marshal(b, m, deterministic)
}
func (dst *ReqSetDeviceName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSetDeviceName.Merge(dst, src)
}
func (m *ReqSetDeviceName) XXX_Size() int {
	return xxx_messageInfo_ReqSetDeviceName.Size(m)
}
func (m *ReqSetDeviceName) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSetDeviceName.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSetDeviceName proto.InternalMessageInfo

func (m *ReqSetDeviceName) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqSetDeviceName) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqSetDeviceName) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ReqSetDeviceName) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type NodeMessage struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=NodeId,proto3" json:"NodeId"`
	NodeName             string   `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName"`
	NodeType             string   `protobuf:"bytes,3,opt,name=NodeType,proto3" json:"NodeType"`
	NodeDEveui           string   `protobuf:"bytes,4,opt,name=NodeDEveui,proto3" json:"NodeDEveui"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeMessage) Reset()         { *m = NodeMessage{} }
func (m *NodeMessage) String() string { return proto.CompactTextString(m) }
func (*NodeMessage) ProtoMessage()    {}
func (*NodeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{27}
}
func (m *NodeMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMessage.Unmarshal(m, b)
}
func (m *NodeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMessage.Marshal(b, m, deterministic)
}
func (dst *NodeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMessage.Merge(dst, src)
}
func (m *NodeMessage) XXX_Size() int {
	return xxx_messageInfo_NodeMessage.Size(m)
}
func (m *NodeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMessage proto.InternalMessageInfo

func (m *NodeMessage) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeMessage) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeMessage) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *NodeMessage) GetNodeDEveui() string {
	if m != nil {
		return m.NodeDEveui
	}
	return ""
}

type ResSetDeviceName struct {
	NodeMessage          *NodeMessage `protobuf:"bytes,1,opt,name=NodeMessage,proto3" json:"NodeMessage"`
	ErrCode              int32        `protobuf:"varint,2,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResSetDeviceName) Reset()         { *m = ResSetDeviceName{} }
func (m *ResSetDeviceName) String() string { return proto.CompactTextString(m) }
func (*ResSetDeviceName) ProtoMessage()    {}
func (*ResSetDeviceName) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{28}
}
func (m *ResSetDeviceName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResSetDeviceName.Unmarshal(m, b)
}
func (m *ResSetDeviceName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResSetDeviceName.Marshal(b, m, deterministic)
}
func (dst *ResSetDeviceName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResSetDeviceName.Merge(dst, src)
}
func (m *ResSetDeviceName) XXX_Size() int {
	return xxx_messageInfo_ResSetDeviceName.Size(m)
}
func (m *ResSetDeviceName) XXX_DiscardUnknown() {
	xxx_messageInfo_ResSetDeviceName.DiscardUnknown(m)
}

var xxx_messageInfo_ResSetDeviceName proto.InternalMessageInfo

func (m *ResSetDeviceName) GetNodeMessage() *NodeMessage {
	if m != nil {
		return m.NodeMessage
	}
	return nil
}

func (m *ResSetDeviceName) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 解除终端账户绑定
type ReqDeleteDevice struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=GatewayId,proto3" json:"GatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId"`
	NodeId               string   `protobuf:"bytes,3,opt,name=NodeId,proto3" json:"NodeId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteDevice) Reset()         { *m = ReqDeleteDevice{} }
func (m *ReqDeleteDevice) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteDevice) ProtoMessage()    {}
func (*ReqDeleteDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{29}
}
func (m *ReqDeleteDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteDevice.Unmarshal(m, b)
}
func (m *ReqDeleteDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteDevice.Marshal(b, m, deterministic)
}
func (dst *ReqDeleteDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteDevice.Merge(dst, src)
}
func (m *ReqDeleteDevice) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteDevice.Size(m)
}
func (m *ReqDeleteDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteDevice proto.InternalMessageInfo

func (m *ReqDeleteDevice) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ReqDeleteDevice) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReqDeleteDevice) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type ResDeleteDevice struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResDeleteDevice) Reset()         { *m = ResDeleteDevice{} }
func (m *ResDeleteDevice) String() string { return proto.CompactTextString(m) }
func (*ResDeleteDevice) ProtoMessage()    {}
func (*ResDeleteDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{30}
}
func (m *ResDeleteDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResDeleteDevice.Unmarshal(m, b)
}
func (m *ResDeleteDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResDeleteDevice.Marshal(b, m, deterministic)
}
func (dst *ResDeleteDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResDeleteDevice.Merge(dst, src)
}
func (m *ResDeleteDevice) XXX_Size() int {
	return xxx_messageInfo_ResDeleteDevice.Size(m)
}
func (m *ResDeleteDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_ResDeleteDevice.DiscardUnknown(m)
}

var xxx_messageInfo_ResDeleteDevice proto.InternalMessageInfo

func (m *ResDeleteDevice) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 基于网关id分页获取终端信息
type GetNodeListByGatewayIdToPage struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id"`
	NodeName             string   `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name"`
	NodeState            int32    `protobuf:"varint,3,opt,name=node_state,json=nodeState,proto3" json:"node_state"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeListByGatewayIdToPage) Reset()         { *m = GetNodeListByGatewayIdToPage{} }
func (m *GetNodeListByGatewayIdToPage) String() string { return proto.CompactTextString(m) }
func (*GetNodeListByGatewayIdToPage) ProtoMessage()    {}
func (*GetNodeListByGatewayIdToPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{31}
}
func (m *GetNodeListByGatewayIdToPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeListByGatewayIdToPage.Unmarshal(m, b)
}
func (m *GetNodeListByGatewayIdToPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeListByGatewayIdToPage.Marshal(b, m, deterministic)
}
func (dst *GetNodeListByGatewayIdToPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeListByGatewayIdToPage.Merge(dst, src)
}
func (m *GetNodeListByGatewayIdToPage) XXX_Size() int {
	return xxx_messageInfo_GetNodeListByGatewayIdToPage.Size(m)
}
func (m *GetNodeListByGatewayIdToPage) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeListByGatewayIdToPage.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeListByGatewayIdToPage proto.InternalMessageInfo

func (m *GetNodeListByGatewayIdToPage) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *GetNodeListByGatewayIdToPage) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *GetNodeListByGatewayIdToPage) GetNodeState() int32 {
	if m != nil {
		return m.NodeState
	}
	return 0
}

type GetNodeListByGatewayIdToPageRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id"`
	Page                 int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	OrdeyBy              string   `protobuf:"bytes,4,opt,name=ordey_by,json=ordeyBy,proto3" json:"ordey_by"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeListByGatewayIdToPageRequest) Reset()         { *m = GetNodeListByGatewayIdToPageRequest{} }
func (m *GetNodeListByGatewayIdToPageRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeListByGatewayIdToPageRequest) ProtoMessage()    {}
func (*GetNodeListByGatewayIdToPageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{32}
}
func (m *GetNodeListByGatewayIdToPageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageRequest.Unmarshal(m, b)
}
func (m *GetNodeListByGatewayIdToPageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeListByGatewayIdToPageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeListByGatewayIdToPageRequest.Merge(dst, src)
}
func (m *GetNodeListByGatewayIdToPageRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageRequest.Size(m)
}
func (m *GetNodeListByGatewayIdToPageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeListByGatewayIdToPageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeListByGatewayIdToPageRequest proto.InternalMessageInfo

func (m *GetNodeListByGatewayIdToPageRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetNodeListByGatewayIdToPageRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetNodeListByGatewayIdToPageRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetNodeListByGatewayIdToPageRequest) GetOrdeyBy() string {
	if m != nil {
		return m.OrdeyBy
	}
	return ""
}

type GetNodeListByGatewayIdToPageResponse struct {
	Nodes                []*GetNodeListByGatewayIdToPage `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes"`
	Total                int32                           `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	ErrCode              int32                           `protobuf:"varint,3,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GetNodeListByGatewayIdToPageResponse) Reset()         { *m = GetNodeListByGatewayIdToPageResponse{} }
func (m *GetNodeListByGatewayIdToPageResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeListByGatewayIdToPageResponse) ProtoMessage()    {}
func (*GetNodeListByGatewayIdToPageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{33}
}
func (m *GetNodeListByGatewayIdToPageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageResponse.Unmarshal(m, b)
}
func (m *GetNodeListByGatewayIdToPageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeListByGatewayIdToPageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeListByGatewayIdToPageResponse.Merge(dst, src)
}
func (m *GetNodeListByGatewayIdToPageResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeListByGatewayIdToPageResponse.Size(m)
}
func (m *GetNodeListByGatewayIdToPageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeListByGatewayIdToPageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeListByGatewayIdToPageResponse proto.InternalMessageInfo

func (m *GetNodeListByGatewayIdToPageResponse) GetNodes() []*GetNodeListByGatewayIdToPage {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *GetNodeListByGatewayIdToPageResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetNodeListByGatewayIdToPageResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 基于网关id分页获取终端类型统计
type Nodetype struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodetype) Reset()         { *m = Nodetype{} }
func (m *Nodetype) String() string { return proto.CompactTextString(m) }
func (*Nodetype) ProtoMessage()    {}
func (*Nodetype) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{34}
}
func (m *Nodetype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodetype.Unmarshal(m, b)
}
func (m *Nodetype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodetype.Marshal(b, m, deterministic)
}
func (dst *Nodetype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodetype.Merge(dst, src)
}
func (m *Nodetype) XXX_Size() int {
	return xxx_messageInfo_Nodetype.Size(m)
}
func (m *Nodetype) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodetype.DiscardUnknown(m)
}

var xxx_messageInfo_Nodetype proto.InternalMessageInfo

func (m *Nodetype) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GetNodeTypeByGatewayIdRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=gatewayId,proto3" json:"gatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeTypeByGatewayIdRequest) Reset()         { *m = GetNodeTypeByGatewayIdRequest{} }
func (m *GetNodeTypeByGatewayIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeTypeByGatewayIdRequest) ProtoMessage()    {}
func (*GetNodeTypeByGatewayIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{35}
}
func (m *GetNodeTypeByGatewayIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeTypeByGatewayIdRequest.Unmarshal(m, b)
}
func (m *GetNodeTypeByGatewayIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeTypeByGatewayIdRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeTypeByGatewayIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeTypeByGatewayIdRequest.Merge(dst, src)
}
func (m *GetNodeTypeByGatewayIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeTypeByGatewayIdRequest.Size(m)
}
func (m *GetNodeTypeByGatewayIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeTypeByGatewayIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeTypeByGatewayIdRequest proto.InternalMessageInfo

func (m *GetNodeTypeByGatewayIdRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetNodeTypeByGatewayIdRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetNodeTypeByGatewayIdResponse struct {
	NodeType             []*Nodetype `protobuf:"bytes,1,rep,name=node_type,json=nodeType,proto3" json:"node_type"`
	ErrCode              int32       `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetNodeTypeByGatewayIdResponse) Reset()         { *m = GetNodeTypeByGatewayIdResponse{} }
func (m *GetNodeTypeByGatewayIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeTypeByGatewayIdResponse) ProtoMessage()    {}
func (*GetNodeTypeByGatewayIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{36}
}
func (m *GetNodeTypeByGatewayIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeTypeByGatewayIdResponse.Unmarshal(m, b)
}
func (m *GetNodeTypeByGatewayIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeTypeByGatewayIdResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeTypeByGatewayIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeTypeByGatewayIdResponse.Merge(dst, src)
}
func (m *GetNodeTypeByGatewayIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeTypeByGatewayIdResponse.Size(m)
}
func (m *GetNodeTypeByGatewayIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeTypeByGatewayIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeTypeByGatewayIdResponse proto.InternalMessageInfo

func (m *GetNodeTypeByGatewayIdResponse) GetNodeType() []*Nodetype {
	if m != nil {
		return m.NodeType
	}
	return nil
}

func (m *GetNodeTypeByGatewayIdResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

// 基于终端类型获取终端在线状态统计
type NodeState struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	ConnectNum           int32    `protobuf:"varint,2,opt,name=connect_num,json=connectNum,proto3" json:"connect_num"`
	UnconnectNum         int32    `protobuf:"varint,3,opt,name=unconnect_num,json=unconnectNum,proto3" json:"unconnect_num"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeState) Reset()         { *m = NodeState{} }
func (m *NodeState) String() string { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()    {}
func (*NodeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{37}
}
func (m *NodeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeState.Unmarshal(m, b)
}
func (m *NodeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeState.Marshal(b, m, deterministic)
}
func (dst *NodeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeState.Merge(dst, src)
}
func (m *NodeState) XXX_Size() int {
	return xxx_messageInfo_NodeState.Size(m)
}
func (m *NodeState) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeState.DiscardUnknown(m)
}

var xxx_messageInfo_NodeState proto.InternalMessageInfo

func (m *NodeState) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *NodeState) GetConnectNum() int32 {
	if m != nil {
		return m.ConnectNum
	}
	return 0
}

func (m *NodeState) GetUnconnectNum() int32 {
	if m != nil {
		return m.UnconnectNum
	}
	return 0
}

type GetNodeStateByGatewayIdAndTypeRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=gatewayId,proto3" json:"gatewayId"`
	UserId               int32    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	NodeType             string   `protobuf:"bytes,3,opt,name=node_type,json=nodeType,proto3" json:"node_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeStateByGatewayIdAndTypeRequest) Reset()         { *m = GetNodeStateByGatewayIdAndTypeRequest{} }
func (m *GetNodeStateByGatewayIdAndTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeStateByGatewayIdAndTypeRequest) ProtoMessage()    {}
func (*GetNodeStateByGatewayIdAndTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{38}
}
func (m *GetNodeStateByGatewayIdAndTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest.Unmarshal(m, b)
}
func (m *GetNodeStateByGatewayIdAndTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeStateByGatewayIdAndTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest.Merge(dst, src)
}
func (m *GetNodeStateByGatewayIdAndTypeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest.Size(m)
}
func (m *GetNodeStateByGatewayIdAndTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStateByGatewayIdAndTypeRequest proto.InternalMessageInfo

func (m *GetNodeStateByGatewayIdAndTypeRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetNodeStateByGatewayIdAndTypeRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetNodeStateByGatewayIdAndTypeRequest) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

type GetNodeStateByGatewayIdAndTypeResponse struct {
	NodeState            *NodeState `protobuf:"bytes,1,opt,name=node_state,json=nodeState,proto3" json:"node_state"`
	ErrCode              int32      `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetNodeStateByGatewayIdAndTypeResponse) Reset() {
	*m = GetNodeStateByGatewayIdAndTypeResponse{}
}
func (m *GetNodeStateByGatewayIdAndTypeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeStateByGatewayIdAndTypeResponse) ProtoMessage()    {}
func (*GetNodeStateByGatewayIdAndTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{39}
}
func (m *GetNodeStateByGatewayIdAndTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse.Unmarshal(m, b)
}
func (m *GetNodeStateByGatewayIdAndTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeStateByGatewayIdAndTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse.Merge(dst, src)
}
func (m *GetNodeStateByGatewayIdAndTypeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse.Size(m)
}
func (m *GetNodeStateByGatewayIdAndTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStateByGatewayIdAndTypeResponse proto.InternalMessageInfo

func (m *GetNodeStateByGatewayIdAndTypeResponse) GetNodeState() *NodeState {
	if m != nil {
		return m.NodeState
	}
	return nil
}

func (m *GetNodeStateByGatewayIdAndTypeResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

//
// 基于网关id以及终端的在线状态获取终端的统计信息
type NodeStat struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id"`
	NodeName             string   `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name"`
	ConnectTime          int64    `protobuf:"varint,3,opt,name=connect_time,json=connectTime,proto3" json:"connect_time"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStat) Reset()         { *m = NodeStat{} }
func (m *NodeStat) String() string { return proto.CompactTextString(m) }
func (*NodeStat) ProtoMessage()    {}
func (*NodeStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{40}
}
func (m *NodeStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStat.Unmarshal(m, b)
}
func (m *NodeStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStat.Marshal(b, m, deterministic)
}
func (dst *NodeStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStat.Merge(dst, src)
}
func (m *NodeStat) XXX_Size() int {
	return xxx_messageInfo_NodeStat.Size(m)
}
func (m *NodeStat) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStat.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStat proto.InternalMessageInfo

func (m *NodeStat) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeStat) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeStat) GetConnectTime() int64 {
	if m != nil {
		return m.ConnectTime
	}
	return 0
}

type GetNodeStatListByGatewayIdAndConnectStateRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=gatewayId,proto3" json:"gatewayId"`
	ConnectState         int32    `protobuf:"varint,3,opt,name=connect_state,json=connectState,proto3" json:"connect_state"`
	NodeType             string   `protobuf:"bytes,4,opt,name=node_type,json=nodeType,proto3" json:"node_type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) Reset() {
	*m = GetNodeStatListByGatewayIdAndConnectStateRequest{}
}
func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetNodeStatListByGatewayIdAndConnectStateRequest) ProtoMessage() {}
func (*GetNodeStatListByGatewayIdAndConnectStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{41}
}
func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest.Unmarshal(m, b)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeStatListByGatewayIdAndConnectStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest.Merge(dst, src)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest.Size(m)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateRequest proto.InternalMessageInfo

func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) GetConnectState() int32 {
	if m != nil {
		return m.ConnectState
	}
	return 0
}

func (m *GetNodeStatListByGatewayIdAndConnectStateRequest) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

type GetNodeStatListByGatewayIdAndConnectStateResponse struct {
	NodeStats            []*NodeStat `protobuf:"bytes,1,rep,name=node_stats,json=nodeStats,proto3" json:"node_stats"`
	ErrCode              int32       `protobuf:"varint,2,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) Reset() {
	*m = GetNodeStatListByGatewayIdAndConnectStateResponse{}
}
func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetNodeStatListByGatewayIdAndConnectStateResponse) ProtoMessage() {}
func (*GetNodeStatListByGatewayIdAndConnectStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{42}
}
func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse.Unmarshal(m, b)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeStatListByGatewayIdAndConnectStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse.Merge(dst, src)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse.Size(m)
}
func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStatListByGatewayIdAndConnectStateResponse proto.InternalMessageInfo

func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) GetNodeStats() []*NodeStat {
	if m != nil {
		return m.NodeStats
	}
	return nil
}

func (m *GetNodeStatListByGatewayIdAndConnectStateResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type GetNodeStateByGatewayIdRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=gatewayId,proto3" json:"gatewayId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeStateByGatewayIdRequest) Reset()         { *m = GetNodeStateByGatewayIdRequest{} }
func (m *GetNodeStateByGatewayIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeStateByGatewayIdRequest) ProtoMessage()    {}
func (*GetNodeStateByGatewayIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{43}
}
func (m *GetNodeStateByGatewayIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStateByGatewayIdRequest.Unmarshal(m, b)
}
func (m *GetNodeStateByGatewayIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStateByGatewayIdRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeStateByGatewayIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStateByGatewayIdRequest.Merge(dst, src)
}
func (m *GetNodeStateByGatewayIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeStateByGatewayIdRequest.Size(m)
}
func (m *GetNodeStateByGatewayIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStateByGatewayIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStateByGatewayIdRequest proto.InternalMessageInfo

func (m *GetNodeStateByGatewayIdRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetNodeStateByGatewayIdRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type GetNodeStateByGatewayIdResponse struct {
	NodeNum              int32    `protobuf:"varint,1,opt,name=NodeNum,proto3" json:"NodeNum"`
	ConnectNode          int32    `protobuf:"varint,2,opt,name=ConnectNode,proto3" json:"ConnectNode"`
	UnConnectNode        int32    `protobuf:"varint,3,opt,name=UnConnectNode,proto3" json:"UnConnectNode"`
	ErrCode              int32    `protobuf:"varint,4,opt,name=errCode,proto3" json:"errCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeStateByGatewayIdResponse) Reset()         { *m = GetNodeStateByGatewayIdResponse{} }
func (m *GetNodeStateByGatewayIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeStateByGatewayIdResponse) ProtoMessage()    {}
func (*GetNodeStateByGatewayIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_84fc5e3275a8b9a4, []int{44}
}
func (m *GetNodeStateByGatewayIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeStateByGatewayIdResponse.Unmarshal(m, b)
}
func (m *GetNodeStateByGatewayIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeStateByGatewayIdResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeStateByGatewayIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeStateByGatewayIdResponse.Merge(dst, src)
}
func (m *GetNodeStateByGatewayIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeStateByGatewayIdResponse.Size(m)
}
func (m *GetNodeStateByGatewayIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeStateByGatewayIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeStateByGatewayIdResponse proto.InternalMessageInfo

func (m *GetNodeStateByGatewayIdResponse) GetNodeNum() int32 {
	if m != nil {
		return m.NodeNum
	}
	return 0
}

func (m *GetNodeStateByGatewayIdResponse) GetConnectNode() int32 {
	if m != nil {
		return m.ConnectNode
	}
	return 0
}

func (m *GetNodeStateByGatewayIdResponse) GetUnConnectNode() int32 {
	if m != nil {
		return m.UnConnectNode
	}
	return 0
}

func (m *GetNodeStateByGatewayIdResponse) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func init() {
	proto.RegisterType((*Accelerometer)(nil), "pb.Accelerometer")
	proto.RegisterType((*Gyrometer)(nil), "pb.Gyrometer")
	proto.RegisterType((*GPSLocation)(nil), "pb.GPSLocation")
	proto.RegisterType((*DataUp)(nil), "pb.DataUp")
	proto.RegisterType((*ResNodeDateUp)(nil), "pb.ResNodeDateUp")
	proto.RegisterType((*ReqNodeMessageByNid)(nil), "pb.ReqNodeMessageByNid")
	proto.RegisterType((*ResGetDeviceScan)(nil), "pb.ResGetDeviceScan")
	proto.RegisterType((*DeviceEuis)(nil), "pb.DeviceEuis")
	proto.RegisterType((*ReqregistDevice)(nil), "pb.ReqregistDevice")
	proto.RegisterType((*DeviceEui)(nil), "pb.DeviceEui")
	proto.RegisterType((*ResRegistDevice)(nil), "pb.ResRegistDevice")
	proto.RegisterType((*ReqRegistNode)(nil), "pb.ReqRegistNode")
	proto.RegisterType((*ResRegistNode)(nil), "pb.ResRegistNode")
	proto.RegisterType((*LoraDevice)(nil), "pb.LoraDevice")
	proto.RegisterType((*PutDeviceRequest)(nil), "pb.PutDeviceRequest")
	proto.RegisterType((*PutDeviceResponse)(nil), "pb.PutDeviceResponse")
	proto.RegisterType((*PostDeviceRequest)(nil), "pb.PostDeviceRequest")
	proto.RegisterType((*PostDeviceResponse)(nil), "pb.PostDeviceResponse")
	proto.RegisterType((*GetDeviceRequest)(nil), "pb.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "pb.GetDeviceResponse")
	proto.RegisterType((*GetDeviceListRequest)(nil), "pb.GetDeviceListRequest")
	proto.RegisterType((*GetDeviceListResponse)(nil), "pb.GetDeviceListResponse")
	proto.RegisterType((*AddDevicesRequest)(nil), "pb.AddDevicesRequest")
	proto.RegisterType((*AddDevicesResponse)(nil), "pb.AddDevicesResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "pb.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceResponse)(nil), "pb.DeleteDeviceResponse")
	proto.RegisterType((*ReqSetDeviceName)(nil), "pb.ReqSetDeviceName")
	proto.RegisterType((*NodeMessage)(nil), "pb.NodeMessage")
	proto.RegisterType((*ResSetDeviceName)(nil), "pb.ResSetDeviceName")
	proto.RegisterType((*ReqDeleteDevice)(nil), "pb.ReqDeleteDevice")
	proto.RegisterType((*ResDeleteDevice)(nil), "pb.ResDeleteDevice")
	proto.RegisterType((*GetNodeListByGatewayIdToPage)(nil), "pb.GetNodeListByGatewayIdToPage")
	proto.RegisterType((*GetNodeListByGatewayIdToPageRequest)(nil), "pb.GetNodeListByGatewayIdToPageRequest")
	proto.RegisterType((*GetNodeListByGatewayIdToPageResponse)(nil), "pb.GetNodeListByGatewayIdToPageResponse")
	proto.RegisterType((*Nodetype)(nil), "pb.Nodetype")
	proto.RegisterType((*GetNodeTypeByGatewayIdRequest)(nil), "pb.GetNodeTypeByGatewayIdRequest")
	proto.RegisterType((*GetNodeTypeByGatewayIdResponse)(nil), "pb.GetNodeTypeByGatewayIdResponse")
	proto.RegisterType((*NodeState)(nil), "pb.NodeState")
	proto.RegisterType((*GetNodeStateByGatewayIdAndTypeRequest)(nil), "pb.GetNodeStateByGatewayIdAndTypeRequest")
	proto.RegisterType((*GetNodeStateByGatewayIdAndTypeResponse)(nil), "pb.GetNodeStateByGatewayIdAndTypeResponse")
	proto.RegisterType((*NodeStat)(nil), "pb.NodeStat")
	proto.RegisterType((*GetNodeStatListByGatewayIdAndConnectStateRequest)(nil), "pb.GetNodeStatListByGatewayIdAndConnectStateRequest")
	proto.RegisterType((*GetNodeStatListByGatewayIdAndConnectStateResponse)(nil), "pb.GetNodeStatListByGatewayIdAndConnectStateResponse")
	proto.RegisterType((*GetNodeStateByGatewayIdRequest)(nil), "pb.GetNodeStateByGatewayIdRequest")
	proto.RegisterType((*GetNodeStateByGatewayIdResponse)(nil), "pb.GetNodeStateByGatewayIdResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceClient is the client API for Device service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceClient interface {
	GetNodeDateUpByNid(ctx context.Context, in *ReqNodeMessageByNid, opts ...grpc.CallOption) (*ResNodeDateUp, error)
	GetDeviceEuis(ctx context.Context, in *ReqNodeMessageByNid, opts ...grpc.CallOption) (*ResGetDeviceScan, error)
	RegistDevices(ctx context.Context, in *ReqregistDevice, opts ...grpc.CallOption) (*ResRegistDevice, error)
	RegistNode(ctx context.Context, in *ReqRegistNode, opts ...grpc.CallOption) (*ResRegistNode, error)
	// 添加第三方终端
	AddDevice(ctx context.Context, in *PutDeviceRequest, opts ...grpc.CallOption) (*PutDeviceResponse, error)
	// 基于deveui获取终端详细信息
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	// 基于deveui修改终端参数
	UpdateDevice(ctx context.Context, in *PostDeviceRequest, opts ...grpc.CallOption) (*PostDeviceResponse, error)
	// 基于deveui批量获取终端信息
	GetDeviceListByDeveuis(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error)
	// 批量添加第三方终端
	AddDevices(ctx context.Context, in *AddDevicesRequest, opts ...grpc.CallOption) (*AddDevicesResponse, error)
	// 基于deveui 删除终端
	DeleteDeviceByDeveui(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error)
	// 修改终端名称
	UpdateDeviceName(ctx context.Context, in *ReqSetDeviceName, opts ...grpc.CallOption) (*ResSetDeviceName, error)
	// 解除终端与网关的绑定关系
	DeleteDevice(ctx context.Context, in *ReqDeleteDevice, opts ...grpc.CallOption) (*ResDeleteDevice, error)
	// 基于网关id分页获取终端统计
	GetNodeListByGatewayIdToPage(ctx context.Context, in *GetNodeListByGatewayIdToPageRequest, opts ...grpc.CallOption) (*GetNodeListByGatewayIdToPageResponse, error)
	// 基于网关id获取网关下终端的类型
	GetNodeTypeByGatewayId(ctx context.Context, in *GetNodeTypeByGatewayIdRequest, opts ...grpc.CallOption) (*GetNodeTypeByGatewayIdResponse, error)
	// 基于网关id和终端类型获取终端的在线率状态统计
	GetNodeStateByGatewayIdAndNodeType(ctx context.Context, in *GetNodeStateByGatewayIdAndTypeRequest, opts ...grpc.CallOption) (*GetNodeStateByGatewayIdAndTypeResponse, error)
	// 基于网关的id和终端的连接状态
	GetNodeStatsByGatewayIdAndConnectState(ctx context.Context, in *GetNodeStatListByGatewayIdAndConnectStateRequest, opts ...grpc.CallOption) (*GetNodeStatListByGatewayIdAndConnectStateResponse, error)
	// 统计网关下所有终端的在线情况
	GetNodeStateByGatewayId(ctx context.Context, in *GetNodeStateByGatewayIdRequest, opts ...grpc.CallOption) (*GetNodeStateByGatewayIdResponse, error)
}

type deviceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceClient(cc *grpc.ClientConn) DeviceClient {
	return &deviceClient{cc}
}

func (c *deviceClient) GetNodeDateUpByNid(ctx context.Context, in *ReqNodeMessageByNid, opts ...grpc.CallOption) (*ResNodeDateUp, error) {
	out := new(ResNodeDateUp)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeDateUpByNid", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetDeviceEuis(ctx context.Context, in *ReqNodeMessageByNid, opts ...grpc.CallOption) (*ResGetDeviceScan, error) {
	out := new(ResGetDeviceScan)
	err := grpc.Invoke(ctx, "/pb.Device/GetDeviceEuis", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) RegistDevices(ctx context.Context, in *ReqregistDevice, opts ...grpc.CallOption) (*ResRegistDevice, error) {
	out := new(ResRegistDevice)
	err := grpc.Invoke(ctx, "/pb.Device/RegistDevices", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) RegistNode(ctx context.Context, in *ReqRegistNode, opts ...grpc.CallOption) (*ResRegistNode, error) {
	out := new(ResRegistNode)
	err := grpc.Invoke(ctx, "/pb.Device/RegistNode", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) AddDevice(ctx context.Context, in *PutDeviceRequest, opts ...grpc.CallOption) (*PutDeviceResponse, error) {
	out := new(PutDeviceResponse)
	err := grpc.Invoke(ctx, "/pb.Device/AddDevice", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetDevice", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateDevice(ctx context.Context, in *PostDeviceRequest, opts ...grpc.CallOption) (*PostDeviceResponse, error) {
	out := new(PostDeviceResponse)
	err := grpc.Invoke(ctx, "/pb.Device/UpdateDevice", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetDeviceListByDeveuis(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error) {
	out := new(GetDeviceListResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetDeviceListByDeveuis", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) AddDevices(ctx context.Context, in *AddDevicesRequest, opts ...grpc.CallOption) (*AddDevicesResponse, error) {
	out := new(AddDevicesResponse)
	err := grpc.Invoke(ctx, "/pb.Device/AddDevices", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteDeviceByDeveui(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*DeleteDeviceResponse, error) {
	out := new(DeleteDeviceResponse)
	err := grpc.Invoke(ctx, "/pb.Device/DeleteDeviceByDeveui", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpdateDeviceName(ctx context.Context, in *ReqSetDeviceName, opts ...grpc.CallOption) (*ResSetDeviceName, error) {
	out := new(ResSetDeviceName)
	err := grpc.Invoke(ctx, "/pb.Device/UpdateDeviceName", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteDevice(ctx context.Context, in *ReqDeleteDevice, opts ...grpc.CallOption) (*ResDeleteDevice, error) {
	out := new(ResDeleteDevice)
	err := grpc.Invoke(ctx, "/pb.Device/DeleteDevice", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetNodeListByGatewayIdToPage(ctx context.Context, in *GetNodeListByGatewayIdToPageRequest, opts ...grpc.CallOption) (*GetNodeListByGatewayIdToPageResponse, error) {
	out := new(GetNodeListByGatewayIdToPageResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeListByGatewayIdToPage", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetNodeTypeByGatewayId(ctx context.Context, in *GetNodeTypeByGatewayIdRequest, opts ...grpc.CallOption) (*GetNodeTypeByGatewayIdResponse, error) {
	out := new(GetNodeTypeByGatewayIdResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeTypeByGatewayId", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetNodeStateByGatewayIdAndNodeType(ctx context.Context, in *GetNodeStateByGatewayIdAndTypeRequest, opts ...grpc.CallOption) (*GetNodeStateByGatewayIdAndTypeResponse, error) {
	out := new(GetNodeStateByGatewayIdAndTypeResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeStateByGatewayIdAndNodeType", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetNodeStatsByGatewayIdAndConnectState(ctx context.Context, in *GetNodeStatListByGatewayIdAndConnectStateRequest, opts ...grpc.CallOption) (*GetNodeStatListByGatewayIdAndConnectStateResponse, error) {
	out := new(GetNodeStatListByGatewayIdAndConnectStateResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeStatsByGatewayIdAndConnectState", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetNodeStateByGatewayId(ctx context.Context, in *GetNodeStateByGatewayIdRequest, opts ...grpc.CallOption) (*GetNodeStateByGatewayIdResponse, error) {
	out := new(GetNodeStateByGatewayIdResponse)
	err := grpc.Invoke(ctx, "/pb.Device/GetNodeStateByGatewayId", in, out,c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServer is the server API for Device service.
type DeviceServer interface {
	GetNodeDateUpByNid(context.Context, *ReqNodeMessageByNid) (*ResNodeDateUp, error)
	GetDeviceEuis(context.Context, *ReqNodeMessageByNid) (*ResGetDeviceScan, error)
	RegistDevices(context.Context, *ReqregistDevice) (*ResRegistDevice, error)
	RegistNode(context.Context, *ReqRegistNode) (*ResRegistNode, error)
	// 添加第三方终端
	AddDevice(context.Context, *PutDeviceRequest) (*PutDeviceResponse, error)
	// 基于deveui获取终端详细信息
	GetDevice(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	// 基于deveui修改终端参数
	UpdateDevice(context.Context, *PostDeviceRequest) (*PostDeviceResponse, error)
	// 基于deveui批量获取终端信息
	GetDeviceListByDeveuis(context.Context, *GetDeviceListRequest) (*GetDeviceListResponse, error)
	// 批量添加第三方终端
	AddDevices(context.Context, *AddDevicesRequest) (*AddDevicesResponse, error)
	// 基于deveui 删除终端
	DeleteDeviceByDeveui(context.Context, *DeleteDeviceRequest) (*DeleteDeviceResponse, error)
	// 修改终端名称
	UpdateDeviceName(context.Context, *ReqSetDeviceName) (*ResSetDeviceName, error)
	// 解除终端与网关的绑定关系
	DeleteDevice(context.Context, *ReqDeleteDevice) (*ResDeleteDevice, error)
	// 基于网关id分页获取终端统计
	GetNodeListByGatewayIdToPage(context.Context, *GetNodeListByGatewayIdToPageRequest) (*GetNodeListByGatewayIdToPageResponse, error)
	// 基于网关id获取网关下终端的类型
	GetNodeTypeByGatewayId(context.Context, *GetNodeTypeByGatewayIdRequest) (*GetNodeTypeByGatewayIdResponse, error)
	// 基于网关id和终端类型获取终端的在线率状态统计
	GetNodeStateByGatewayIdAndNodeType(context.Context, *GetNodeStateByGatewayIdAndTypeRequest) (*GetNodeStateByGatewayIdAndTypeResponse, error)
	// 基于网关的id和终端的连接状态
	GetNodeStatsByGatewayIdAndConnectState(context.Context, *GetNodeStatListByGatewayIdAndConnectStateRequest) (*GetNodeStatListByGatewayIdAndConnectStateResponse, error)
	// 统计网关下所有终端的在线情况
	GetNodeStateByGatewayId(context.Context, *GetNodeStateByGatewayIdRequest) (*GetNodeStateByGatewayIdResponse, error)
}

func RegisterDeviceServer(s *grpc.Server, srv DeviceServer) {
	s.RegisterService(&_Device_serviceDesc, srv)
}

func _Device_GetNodeDateUpByNid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqNodeMessageByNid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeDateUpByNid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeDateUpByNid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeDateUpByNid(ctx, req.(*ReqNodeMessageByNid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetDeviceEuis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqNodeMessageByNid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetDeviceEuis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetDeviceEuis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetDeviceEuis(ctx, req.(*ReqNodeMessageByNid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_RegistDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqregistDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).RegistDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/RegistDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).RegistDevices(ctx, req.(*ReqregistDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_RegistNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqRegistNode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).RegistNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/RegistNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).RegistNode(ctx, req.(*ReqRegistNode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_AddDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).AddDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/AddDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).AddDevice(ctx, req.(*PutDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UpdateDevice(ctx, req.(*PostDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetDeviceListByDeveuis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetDeviceListByDeveuis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetDeviceListByDeveuis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetDeviceListByDeveuis(ctx, req.(*GetDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_AddDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).AddDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/AddDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).AddDevices(ctx, req.(*AddDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_DeleteDeviceByDeveui_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).DeleteDeviceByDeveui(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/DeleteDeviceByDeveui",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).DeleteDeviceByDeveui(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UpdateDeviceName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetDeviceName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UpdateDeviceName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/UpdateDeviceName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UpdateDeviceName(ctx, req.(*ReqSetDeviceName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_DeleteDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqDeleteDevice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).DeleteDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/DeleteDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).DeleteDevice(ctx, req.(*ReqDeleteDevice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetNodeListByGatewayIdToPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeListByGatewayIdToPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeListByGatewayIdToPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeListByGatewayIdToPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeListByGatewayIdToPage(ctx, req.(*GetNodeListByGatewayIdToPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetNodeTypeByGatewayId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeTypeByGatewayIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeTypeByGatewayId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeTypeByGatewayId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeTypeByGatewayId(ctx, req.(*GetNodeTypeByGatewayIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetNodeStateByGatewayIdAndNodeType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeStateByGatewayIdAndTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeStateByGatewayIdAndNodeType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeStateByGatewayIdAndNodeType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeStateByGatewayIdAndNodeType(ctx, req.(*GetNodeStateByGatewayIdAndTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetNodeStatsByGatewayIdAndConnectState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeStatListByGatewayIdAndConnectStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeStatsByGatewayIdAndConnectState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeStatsByGatewayIdAndConnectState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeStatsByGatewayIdAndConnectState(ctx, req.(*GetNodeStatListByGatewayIdAndConnectStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetNodeStateByGatewayId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeStateByGatewayIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetNodeStateByGatewayId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Device/GetNodeStateByGatewayId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetNodeStateByGatewayId(ctx, req.(*GetNodeStateByGatewayIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Device_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Device",
	HandlerType: (*DeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodeDateUpByNid",
			Handler:    _Device_GetNodeDateUpByNid_Handler,
		},
		{
			MethodName: "GetDeviceEuis",
			Handler:    _Device_GetDeviceEuis_Handler,
		},
		{
			MethodName: "RegistDevices",
			Handler:    _Device_RegistDevices_Handler,
		},
		{
			MethodName: "RegistNode",
			Handler:    _Device_RegistNode_Handler,
		},
		{
			MethodName: "AddDevice",
			Handler:    _Device_AddDevice_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _Device_GetDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _Device_UpdateDevice_Handler,
		},
		{
			MethodName: "GetDeviceListByDeveuis",
			Handler:    _Device_GetDeviceListByDeveuis_Handler,
		},
		{
			MethodName: "AddDevices",
			Handler:    _Device_AddDevices_Handler,
		},
		{
			MethodName: "DeleteDeviceByDeveui",
			Handler:    _Device_DeleteDeviceByDeveui_Handler,
		},
		{
			MethodName: "UpdateDeviceName",
			Handler:    _Device_UpdateDeviceName_Handler,
		},
		{
			MethodName: "DeleteDevice",
			Handler:    _Device_DeleteDevice_Handler,
		},
		{
			MethodName: "GetNodeListByGatewayIdToPage",
			Handler:    _Device_GetNodeListByGatewayIdToPage_Handler,
		},
		{
			MethodName: "GetNodeTypeByGatewayId",
			Handler:    _Device_GetNodeTypeByGatewayId_Handler,
		},
		{
			MethodName: "GetNodeStateByGatewayIdAndNodeType",
			Handler:    _Device_GetNodeStateByGatewayIdAndNodeType_Handler,
		},
		{
			MethodName: "GetNodeStatsByGatewayIdAndConnectState",
			Handler:    _Device_GetNodeStatsByGatewayIdAndConnectState_Handler,
		},
		{
			MethodName: "GetNodeStateByGatewayId",
			Handler:    _Device_GetNodeStateByGatewayId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "device.proto",
}

func init() { proto.RegisterFile("device.proto", fileDescriptor_device_84fc5e3275a8b9a4) }

var fileDescriptor_device_84fc5e3275a8b9a4 = []byte{
	// 1838 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x5f, 0x73, 0xdb, 0xc6,
	0x11, 0x17, 0x48, 0x51, 0x12, 0x97, 0xa4, 0x2d, 0x9d, 0xff, 0x21, 0x4c, 0xac, 0xc8, 0xa7, 0xd4,
	0x91, 0xeb, 0x8e, 0x27, 0x52, 0x93, 0x76, 0xda, 0x4e, 0xa7, 0xa1, 0x44, 0x57, 0xc3, 0xb1, 0xca,
	0x68, 0x4e, 0x62, 0xea, 0xa4, 0xd3, 0x41, 0x21, 0xe2, 0xc4, 0x72, 0x4c, 0x02, 0x10, 0x01, 0xca,
	0x64, 0xa6, 0x79, 0xee, 0xf4, 0xa5, 0x2f, 0x7d, 0xe8, 0x53, 0xbf, 0x40, 0x5f, 0xfb, 0xb5, 0xfa,
	0x21, 0x32, 0xf7, 0x07, 0x87, 0x3b, 0x88, 0x80, 0x64, 0x2b, 0x4f, 0xe2, 0xee, 0xdd, 0xed, 0xfe,
	0x7e, 0xbb, 0x7b, 0x77, 0x7b, 0x10, 0xd4, 0x3d, 0x7a, 0x39, 0xec, 0xd3, 0x17, 0xe1, 0x24, 0x88,
	0x03, 0x54, 0x0a, 0xcf, 0xf0, 0xaf, 0xa0, 0xd1, 0xea, 0xf7, 0xe9, 0x88, 0x4e, 0x82, 0x31, 0x8d,
	0xe9, 0x04, 0xd5, 0xc1, 0x7a, 0x6d, 0x5b, 0x5b, 0xd6, 0x8e, 0x45, 0xac, 0xd7, 0x4c, 0xfa, 0xc6,
	0x2e, 0x09, 0xe9, 0x1b, 0x26, 0x7d, 0x6b, 0x97, 0x85, 0xf4, 0x2d, 0xfe, 0x02, 0xaa, 0x87, 0xf3,
	0x77, 0x5f, 0xd6, 0x87, 0xda, 0xe1, 0xf1, 0xc9, 0x51, 0xd0, 0x77, 0xe3, 0x61, 0xe0, 0xa3, 0x26,
	0xac, 0x1d, 0xb9, 0xf1, 0x30, 0x9e, 0x7a, 0x54, 0xae, 0x57, 0x32, 0xfa, 0x08, 0xaa, 0x47, 0x81,
	0x3f, 0x10, 0x83, 0xc2, 0x5c, 0xaa, 0x60, 0x2b, 0x5b, 0x23, 0xb9, 0x52, 0x58, 0x57, 0x32, 0xfe,
	0x7b, 0x09, 0x56, 0xda, 0x6e, 0xec, 0xf6, 0x42, 0xf4, 0xcb, 0x0c, 0x43, 0x7b, 0x79, 0xcb, 0xda,
	0xa9, 0xed, 0x6d, 0xbc, 0x08, 0xcf, 0x5e, 0x18, 0x03, 0x24, 0x13, 0x89, 0xe7, 0x1a, 0x3f, 0xbb,
	0xc2, 0x17, 0x35, 0xd8, 0x22, 0xa5, 0x24, 0x1a, 0xff, 0x5d, 0x83, 0x95, 0xbd, 0xc2, 0xa7, 0xdf,
	0xe5, 0xd3, 0x53, 0x35, 0x31, 0x98, 0x23, 0x58, 0x66, 0x10, 0x25, 0x6b, 0xfe, 0x9b, 0x71, 0x6a,
	0xd3, 0xa8, 0x3f, 0x19, 0x9e, 0x09, 0xc2, 0x55, 0xa2, 0x64, 0x64, 0xc3, 0xea, 0xc1, 0x5f, 0x5d,
	0xdf, 0xa7, 0x23, 0x4e, 0xb7, 0x42, 0x12, 0x91, 0xad, 0x3a, 0x1d, 0x8e, 0x69, 0xec, 0x8e, 0x43,
	0x7b, 0x75, 0xcb, 0xda, 0x29, 0x13, 0x25, 0xe3, 0x0e, 0x34, 0x08, 0x8d, 0xba, 0x81, 0x47, 0xdb,
	0x6e, 0x4c, 0x7b, 0x21, 0xda, 0x54, 0x6e, 0xcb, 0x3b, 0xb5, 0x3d, 0x60, 0x10, 0x45, 0xa4, 0x24,
	0x04, 0x1b, 0x56, 0x5f, 0x4e, 0x26, 0x07, 0x81, 0x0c, 0x79, 0x85, 0x24, 0x22, 0xfe, 0x97, 0x05,
	0xf7, 0x08, 0xbd, 0x60, 0xb6, 0xfe, 0x40, 0xa3, 0xc8, 0x1d, 0xd0, 0xfd, 0x79, 0x77, 0xe8, 0xa1,
	0x87, 0xb0, 0xc2, 0x74, 0x1d, 0x8f, 0x53, 0xa9, 0x12, 0x29, 0x31, 0x7d, 0x2f, 0xa2, 0x93, 0x8e,
	0x27, 0x0d, 0x49, 0x89, 0xc1, 0x65, 0x33, 0x4e, 0xe7, 0xa1, 0x48, 0x5c, 0x95, 0x28, 0x99, 0xa5,
	0xfc, 0xd0, 0x8d, 0xe9, 0x5b, 0x77, 0xde, 0xf1, 0x78, 0xa6, 0xaa, 0x24, 0x55, 0xb0, 0x90, 0xf1,
	0x55, 0x15, 0x6e, 0x8f, 0xff, 0xc6, 0x3d, 0x58, 0x27, 0x34, 0x3a, 0xa4, 0x71, 0x9b, 0xd7, 0xf6,
	0x49, 0xdf, 0xf5, 0xd1, 0xa7, 0xb0, 0xda, 0xa6, 0x97, 0x2f, 0xa7, 0xc3, 0x48, 0xd2, 0xe4, 0x89,
	0x13, 0x13, 0x5e, 0x4e, 0x87, 0x24, 0x19, 0x2d, 0x20, 0xfb, 0x14, 0x40, 0xcd, 0xe7, 0xf3, 0x52,
	0x83, 0x0c, 0x54, 0x22, 0xe2, 0x0b, 0xb8, 0x4b, 0xe8, 0xc5, 0x84, 0x0e, 0x86, 0x91, 0x44, 0x80,
	0x76, 0xb2, 0xde, 0xef, 0x18, 0xde, 0xa3, 0xd4, 0x7d, 0x5e, 0x84, 0x8c, 0x28, 0x94, 0x33, 0x51,
	0xc0, 0xdb, 0x50, 0x55, 0xc6, 0x98, 0x09, 0x61, 0x2d, 0x09, 0xbe, 0x90, 0xf0, 0x29, 0xc3, 0x15,
	0x11, 0x1d, 0x97, 0x16, 0x95, 0xd2, 0x4d, 0xa3, 0x62, 0x99, 0x51, 0xf9, 0x33, 0xab, 0xa6, 0x0b,
	0x61, 0x95, 0xe5, 0xcc, 0x44, 0x6a, 0x65, 0xf3, 0x95, 0x82, 0x2b, 0xe9, 0xe0, 0x34, 0xde, 0x65,
	0x9d, 0x37, 0x7e, 0xc6, 0x8b, 0x55, 0x33, 0x9f, 0x8f, 0xe4, 0x7f, 0x65, 0x80, 0xa3, 0x60, 0xe2,
	0x4a, 0x6e, 0x77, 0xa0, 0x24, 0xad, 0x95, 0x49, 0x49, 0xab, 0x94, 0xf5, 0xb4, 0x52, 0xd0, 0x13,
	0xa8, 0xb7, 0xbc, 0x89, 0xd3, 0xf1, 0x63, 0x3a, 0xb9, 0x74, 0x47, 0xbc, 0xbc, 0x2a, 0xa4, 0xd6,
	0xf2, 0x26, 0x89, 0x0a, 0x6d, 0x42, 0x8d, 0xd0, 0x91, 0x3b, 0x73, 0xce, 0x9d, 0x03, 0x3f, 0xe6,
	0x9b, 0x69, 0x8d, 0x54, 0xb9, 0xea, 0xf7, 0x07, 0x7e, 0x2c, 0x09, 0x51, 0x23, 0xda, 0x54, 0x10,
	0x6a, 0x85, 0x21, 0x4d, 0x89, 0x0a, 0x09, 0x3d, 0x80, 0x95, 0x4e, 0xe4, 0xb4, 0xf6, 0x8f, 0x79,
	0xc9, 0xae, 0x91, 0x4a, 0x27, 0x6a, 0xed, 0x1f, 0xcb, 0xe9, 0x6f, 0xe8, 0x9c, 0x1f, 0x14, 0x62,
	0xfa, 0x1b, 0x3a, 0x47, 0x1f, 0x42, 0xb5, 0x13, 0x39, 0x07, 0x23, 0x37, 0x8a, 0xfa, 0xf6, 0x1a,
	0x5f, 0xb1, 0xd6, 0x89, 0x84, 0x8c, 0x3e, 0x80, 0xb5, 0x56, 0x18, 0x46, 0xce, 0x2b, 0x3a, 0xb7,
	0xab, 0xa2, 0x08, 0x99, 0xfc, 0x8a, 0xce, 0xd9, 0x50, 0xf7, 0xed, 0x1b, 0x31, 0x04, 0x62, 0x88,
	0xc9, 0x72, 0xa8, 0x4d, 0x2f, 0x9d, 0x96, 0xe7, 0x4d, 0xec, 0x9a, 0x2a, 0x5d, 0x26, 0xb2, 0x21,
	0x32, 0x73, 0xda, 0x74, 0xe4, 0xce, 0xed, 0xba, 0x88, 0x2e, 0x99, 0x71, 0x11, 0x61, 0x68, 0x90,
	0xd9, 0xae, 0xd3, 0x26, 0xce, 0x57, 0xe7, 0xe7, 0x11, 0x8d, 0xed, 0x86, 0x88, 0x15, 0x99, 0xed,
	0xb6, 0x89, 0x50, 0x31, 0xb0, 0x64, 0xe6, 0xfc, 0x71, 0xe8, 0x7b, 0xc1, 0x5b, 0xfb, 0x0e, 0x1f,
	0x5f, 0x23, 0x33, 0x21, 0x33, 0xe2, 0x64, 0xb6, 0xe7, 0xb4, 0x89, 0x7d, 0x97, 0x8f, 0x54, 0xc8,
	0x6c, 0xaf, 0x4d, 0x70, 0x08, 0xeb, 0xc7, 0x53, 0x59, 0x8f, 0x84, 0x5e, 0x4c, 0x69, 0x14, 0x9b,
	0x25, 0x54, 0x5a, 0x50, 0x42, 0x8b, 0x4a, 0x05, 0x3d, 0xe5, 0x99, 0x18, 0xf6, 0x45, 0x61, 0xc8,
	0x3d, 0x96, 0x16, 0x04, 0x91, 0xa3, 0xb8, 0x07, 0x1b, 0x9a, 0xc7, 0x28, 0x0c, 0xfc, 0xa8, 0xa0,
	0xac, 0x34, 0xb3, 0xa5, 0x42, 0xb3, 0x17, 0xb0, 0x71, 0x1c, 0x44, 0x45, 0x4c, 0xac, 0x7c, 0x26,
	0xa5, 0x1c, 0x26, 0xe5, 0x42, 0x97, 0x5f, 0x03, 0xd2, 0x5d, 0xfe, 0x68, 0x54, 0xfe, 0x02, 0xeb,
	0xea, 0xf4, 0xbc, 0x1d, 0x93, 0x74, 0x77, 0x94, 0xf5, 0xdd, 0xc1, 0x72, 0xa0, 0x79, 0xf8, 0xd1,
	0x80, 0x9f, 0xc3, 0x7d, 0x65, 0xf6, 0x68, 0x18, 0xc5, 0xb7, 0x03, 0x2f, 0x8e, 0x78, 0xca, 0x4e,
	0xc7, 0xf2, 0x56, 0x59, 0xee, 0x13, 0x26, 0xe2, 0x3f, 0xc1, 0x83, 0x8c, 0x9f, 0x6b, 0x29, 0x88,
	0x2b, 0x60, 0xd8, 0xa7, 0xc9, 0x51, 0x9b, 0xe5, 0x90, 0x0c, 0xe3, 0x08, 0x36, 0x5a, 0x9e, 0x27,
	0xa5, 0x84, 0x41, 0x8a, 0xd1, 0xca, 0xbf, 0x17, 0xae, 0x6c, 0x15, 0xcd, 0x69, 0xb9, 0xd8, 0xe9,
	0x6b, 0x40, 0xba, 0x53, 0x49, 0xe7, 0xc6, 0xa0, 0x0b, 0x8e, 0xe5, 0x3e, 0xdc, 0x6b, 0xd3, 0x11,
	0x8d, 0xa9, 0x59, 0x4f, 0xef, 0x47, 0x28, 0xaf, 0x9e, 0x3e, 0x83, 0xfb, 0xa6, 0x93, 0xeb, 0xf2,
	0x81, 0xff, 0xc6, 0x9a, 0x84, 0x8b, 0x93, 0x24, 0x8b, 0x5d, 0x77, 0x4c, 0x35, 0x4c, 0xcb, 0xf9,
	0x98, 0x16, 0x95, 0x8f, 0x6c, 0x76, 0x4a, 0x46, 0xb3, 0x23, 0x9b, 0x1a, 0x66, 0x59, 0x6f, 0x6a,
	0x98, 0x8c, 0xbf, 0x87, 0x9a, 0xd6, 0x34, 0xe5, 0xf6, 0x4b, 0xba, 0x89, 0x92, 0x69, 0xa2, 0xb0,
	0x67, 0xda, 0x04, 0xe0, 0xfd, 0xdd, 0x4b, 0x1e, 0x2a, 0xd1, 0x34, 0x69, 0x1a, 0xec, 0xf0, 0x0e,
	0xc9, 0x24, 0xbf, 0x6b, 0x40, 0x92, 0x67, 0x28, 0xef, 0x57, 0x35, 0x35, 0x31, 0x60, 0xe7, 0xf7,
	0x4a, 0x0e, 0xef, 0x81, 0xf4, 0x94, 0xbc, 0xff, 0x01, 0x22, 0x23, 0x53, 0xd6, 0x23, 0x83, 0x9f,
	0xf3, 0x66, 0xc6, 0x70, 0x90, 0x9f, 0xeb, 0x08, 0x3e, 0x3a, 0xa4, 0xbc, 0x7d, 0x60, 0x9b, 0x75,
	0x7f, 0xae, 0xdc, 0x9e, 0x06, 0xc7, 0x8c, 0xc7, 0x23, 0x58, 0xf5, 0x03, 0x8f, 0x3a, 0x43, 0x15,
	0x7f, 0x5f, 0xc4, 0xff, 0x43, 0xa8, 0xf2, 0x01, 0x5f, 0x4b, 0x80, 0x9f, 0x24, 0xe0, 0x31, 0x00,
	0x1f, 0x8c, 0x62, 0x37, 0xa6, 0xf2, 0x2e, 0xe2, 0xd3, 0x4f, 0x98, 0x02, 0xff, 0xc3, 0x82, 0xed,
	0x22, 0xaf, 0xc9, 0x46, 0x78, 0x0c, 0x30, 0x10, 0x23, 0xa9, 0xff, 0xea, 0x40, 0x6f, 0x70, 0x43,
	0x96, 0x0f, 0x11, 0x16, 0xfe, 0x1b, 0xdd, 0x87, 0x4a, 0x3f, 0x98, 0xfa, 0xb1, 0x74, 0x2a, 0x04,
	0x76, 0x79, 0x07, 0x13, 0x8f, 0xce, 0x9d, 0xb3, 0xb9, 0x4c, 0xf9, 0x2a, 0x97, 0xf7, 0xe7, 0xf8,
	0x9f, 0x16, 0x7c, 0x52, 0x8c, 0x45, 0xee, 0x97, 0x5f, 0x40, 0x85, 0x31, 0x48, 0xda, 0xd4, 0x2d,
	0xfe, 0x5c, 0x29, 0x5a, 0x28, 0xa6, 0x33, 0x44, 0x71, 0x10, 0xbb, 0x23, 0x09, 0x53, 0x08, 0x2c,
	0x23, 0x54, 0x66, 0x44, 0xbe, 0x4f, 0xa4, 0x88, 0x37, 0x45, 0xf1, 0xc6, 0xac, 0x58, 0x11, 0x2c,
	0xb3, 0xbf, 0x92, 0x3a, 0xff, 0x8d, 0x7b, 0xf0, 0x58, 0xba, 0x65, 0xf5, 0xac, 0xb9, 0xd5, 0x4e,
	0xf4, 0x41, 0xb6, 0x9a, 0x06, 0x7a, 0x35, 0x4d, 0x8d, 0x6a, 0x12, 0x12, 0xa6, 0xb0, 0x99, 0x67,
	0x56, 0x06, 0xe0, 0x99, 0xcc, 0xb8, 0x44, 0xc4, 0x82, 0x50, 0x4f, 0xf6, 0x00, 0xd3, 0x89, 0xfc,
	0xf3, 0x4d, 0xa6, 0xb1, 0x2b, 0x99, 0xec, 0x06, 0x50, 0xed, 0x26, 0x75, 0x90, 0x86, 0xc6, 0xd2,
	0x43, 0xf3, 0x31, 0xd4, 0xfa, 0x81, 0xef, 0xd3, 0x7e, 0xec, 0xf8, 0xd3, 0xb1, 0x34, 0x00, 0x52,
	0xd5, 0x9d, 0x8e, 0xd1, 0x36, 0x34, 0xa6, 0xbe, 0x3e, 0x45, 0x44, 0xb0, 0xae, 0x94, 0xdd, 0xe9,
	0x18, 0x7f, 0x07, 0x3f, 0x91, 0x7c, 0xb8, 0x2f, 0x8d, 0x50, 0xcb, 0xf7, 0x18, 0xc8, 0x5b, 0x85,
	0x4b, 0x95, 0x7f, 0xac, 0x9d, 0x31, 0x09, 0x7d, 0x1c, 0xc2, 0xd3, 0xeb, 0x7c, 0xcb, 0x98, 0xfe,
	0xcc, 0xd8, 0x28, 0x56, 0xfa, 0x6e, 0x56, 0x8b, 0xb5, 0x7d, 0x53, 0x10, 0xd6, 0xbe, 0x28, 0x1a,
	0x36, 0xed, 0x3d, 0xb7, 0xec, 0x13, 0xa8, 0x27, 0x21, 0x8d, 0x87, 0xf2, 0x58, 0x2e, 0x93, 0x24,
	0x13, 0xec, 0x85, 0x8c, 0xff, 0x6b, 0xc1, 0x67, 0x1a, 0xaf, 0x4c, 0xd5, 0xb7, 0x7c, 0xef, 0x40,
	0x4c, 0x16, 0xb8, 0xd3, 0xcb, 0x6c, 0x6a, 0x5c, 0x66, 0x53, 0x75, 0x71, 0x0c, 0xb2, 0x97, 0x59,
	0x1a, 0xf6, 0x6d, 0x68, 0x24, 0x68, 0xf4, 0x33, 0x24, 0x81, 0x28, 0xc2, 0x61, 0xe4, 0x60, 0x39,
	0x93, 0x83, 0xef, 0x60, 0xf7, 0x1d, 0xb0, 0xca, 0x74, 0x3c, 0xd7, 0xd2, 0x11, 0x65, 0x6b, 0x9c,
	0x4d, 0x4d, 0xb3, 0x11, 0x15, 0x64, 0xe3, 0x6b, 0xb5, 0x97, 0xb2, 0xf9, 0xbf, 0x55, 0x54, 0xf0,
	0x7f, 0x2c, 0xf8, 0x38, 0xd7, 0x70, 0x7a, 0xad, 0xf3, 0x7b, 0x70, 0x3a, 0x4e, 0x8e, 0x7a, 0x29,
	0xa2, 0x2d, 0xa8, 0x49, 0xd2, 0xdd, 0x14, 0xb3, 0xae, 0x42, 0x9f, 0x40, 0xa3, 0xe7, 0xeb, 0x73,
	0x44, 0xd4, 0x4d, 0xa5, 0xce, 0x7b, 0xd9, 0xe0, 0xbd, 0xf7, 0x7f, 0x48, 0x9a, 0x51, 0xb4, 0x0f,
	0x48, 0x22, 0x15, 0x5f, 0x52, 0xc4, 0xc7, 0x8f, 0x47, 0x2c, 0x96, 0x0b, 0xbe, 0x8a, 0x34, 0x37,
	0xc4, 0x80, 0xf6, 0xe9, 0x05, 0x2f, 0xa1, 0x2f, 0xa1, 0xa1, 0x5a, 0x49, 0xfe, 0xd4, 0xce, 0x5d,
	0x7e, 0x5f, 0x2e, 0x37, 0x3e, 0x6c, 0xe0, 0x25, 0xf4, 0x1b, 0xf6, 0x44, 0x4e, 0x1f, 0xf5, 0x11,
	0xba, 0x27, 0x2d, 0xe8, 0x9f, 0x20, 0x9a, 0x52, 0x69, 0xbc, 0xff, 0xf1, 0x12, 0xfa, 0x1c, 0x40,
	0x7b, 0x5c, 0x4b, 0x84, 0xda, 0x73, 0x5e, 0x81, 0x4e, 0x55, 0x78, 0x09, 0xfd, 0x1a, 0xaa, 0xaa,
	0x5b, 0x44, 0x1c, 0x57, 0xf6, 0x0d, 0xd7, 0x7c, 0x90, 0xd1, 0x8a, 0xcc, 0x89, 0xb5, 0x8a, 0x81,
	0x58, 0x9b, 0x7d, 0x6b, 0x88, 0xb5, 0x57, 0xde, 0x07, 0x78, 0x09, 0xfd, 0x0e, 0xea, 0xbd, 0xd0,
	0x73, 0xd5, 0x95, 0x2f, 0x9c, 0x64, 0x5f, 0x5d, 0xcd, 0x87, 0x59, 0xb5, 0x32, 0xf0, 0x15, 0x3c,
	0x34, 0x1a, 0xf7, 0xfd, 0xb9, 0x6c, 0xe9, 0x91, 0x6d, 0xf8, 0xd4, 0x1e, 0x0f, 0xcd, 0x0f, 0x16,
	0x8c, 0x28, 0x83, 0xbf, 0x05, 0x48, 0xfb, 0x66, 0x81, 0xe7, 0x4a, 0xf3, 0x2e, 0xf0, 0x5c, 0x6d,
	0xaf, 0xf1, 0x12, 0x7a, 0x65, 0xf6, 0xad, 0x09, 0x1c, 0x51, 0x04, 0x0b, 0xda, 0xe6, 0xa6, 0x7d,
	0x75, 0x40, 0x19, 0xfb, 0x12, 0xd6, 0xf5, 0xe8, 0xf0, 0x13, 0x4f, 0x16, 0x8d, 0xd9, 0xe8, 0xaa,
	0x52, 0x32, 0xb4, 0x3c, 0x37, 0x75, 0xa3, 0xa5, 0x4a, 0x2a, 0x49, 0x57, 0xaa, 0x4a, 0xd2, 0x95,
	0x78, 0x09, 0x5d, 0xd7, 0x64, 0x7d, 0x7a, 0x6d, 0x2f, 0x21, 0x29, 0xee, 0x5c, 0x3f, 0x51, 0x51,
	0x76, 0x79, 0x3e, 0x17, 0x5c, 0xe8, 0xe8, 0x89, 0x66, 0x65, 0x71, 0x0f, 0xd1, 0xc4, 0x45, 0x53,
	0x94, 0x8b, 0xef, 0x01, 0xe7, 0xdf, 0x73, 0xaa, 0xe3, 0x7e, 0xa6, 0xd9, 0x2a, 0xbe, 0x8b, 0x9b,
	0x3f, 0xbd, 0xc9, 0x54, 0xe5, 0xfe, 0xdf, 0x96, 0x71, 0xcf, 0x46, 0xf9, 0x07, 0x3c, 0xfa, 0x3c,
	0x63, 0xf8, 0x46, 0x77, 0x57, 0xf3, 0x8b, 0x77, 0x5c, 0xa5, 0x90, 0x79, 0xf0, 0x28, 0x87, 0x05,
	0xc2, 0x05, 0x14, 0x13, 0xbf, 0xdb, 0x85, 0x73, 0x12, 0x2f, 0x67, 0x2b, 0xfc, 0x3f, 0x13, 0x3f,
	0xff, 0x21, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xe0, 0x02, 0xde, 0xa9, 0x18, 0x00, 0x00,
}
