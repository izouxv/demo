// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/faqcommon.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FaqCommonRequest struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	NameCn               string   `protobuf:"bytes,3,opt,name=nameCn,proto3" json:"nameCn,omitempty"`
	InfoCn               string   `protobuf:"bytes,4,opt,name=infoCn,proto3" json:"infoCn,omitempty"`
	NameEn               string   `protobuf:"bytes,5,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	InfoEn               string   `protobuf:"bytes,6,opt,name=infoEn,proto3" json:"infoEn,omitempty"`
	Parent               int32    `protobuf:"varint,7,opt,name=parent,proto3" json:"parent,omitempty"`
	Uid                  int32    `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaqCommonRequest) Reset()         { *m = FaqCommonRequest{} }
func (m *FaqCommonRequest) String() string { return proto.CompactTextString(m) }
func (*FaqCommonRequest) ProtoMessage()    {}
func (*FaqCommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_faqcommon_ff70542a98d8fbbc, []int{0}
}
func (m *FaqCommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaqCommonRequest.Unmarshal(m, b)
}
func (m *FaqCommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaqCommonRequest.Marshal(b, m, deterministic)
}
func (dst *FaqCommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaqCommonRequest.Merge(dst, src)
}
func (m *FaqCommonRequest) XXX_Size() int {
	return xxx_messageInfo_FaqCommonRequest.Size(m)
}
func (m *FaqCommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FaqCommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FaqCommonRequest proto.InternalMessageInfo

func (m *FaqCommonRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FaqCommonRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FaqCommonRequest) GetNameCn() string {
	if m != nil {
		return m.NameCn
	}
	return ""
}

func (m *FaqCommonRequest) GetInfoCn() string {
	if m != nil {
		return m.InfoCn
	}
	return ""
}

func (m *FaqCommonRequest) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *FaqCommonRequest) GetInfoEn() string {
	if m != nil {
		return m.InfoEn
	}
	return ""
}

func (m *FaqCommonRequest) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *FaqCommonRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type FaqCommonReply struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	NameCn               string   `protobuf:"bytes,3,opt,name=nameCn,proto3" json:"nameCn,omitempty"`
	InfoCn               string   `protobuf:"bytes,4,opt,name=infoCn,proto3" json:"infoCn,omitempty"`
	NameEn               string   `protobuf:"bytes,5,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	InfoEn               string   `protobuf:"bytes,6,opt,name=infoEn,proto3" json:"infoEn,omitempty"`
	Parent               int32    `protobuf:"varint,7,opt,name=parent,proto3" json:"parent,omitempty"`
	Uid                  int32    `protobuf:"varint,8,opt,name=uid,proto3" json:"uid,omitempty"`
	Code                 int32    `protobuf:"varint,9,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Info                 string   `protobuf:"bytes,11,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaqCommonReply) Reset()         { *m = FaqCommonReply{} }
func (m *FaqCommonReply) String() string { return proto.CompactTextString(m) }
func (*FaqCommonReply) ProtoMessage()    {}
func (*FaqCommonReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_faqcommon_ff70542a98d8fbbc, []int{1}
}
func (m *FaqCommonReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaqCommonReply.Unmarshal(m, b)
}
func (m *FaqCommonReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaqCommonReply.Marshal(b, m, deterministic)
}
func (dst *FaqCommonReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaqCommonReply.Merge(dst, src)
}
func (m *FaqCommonReply) XXX_Size() int {
	return xxx_messageInfo_FaqCommonReply.Size(m)
}
func (m *FaqCommonReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FaqCommonReply.DiscardUnknown(m)
}

var xxx_messageInfo_FaqCommonReply proto.InternalMessageInfo

func (m *FaqCommonReply) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FaqCommonReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FaqCommonReply) GetNameCn() string {
	if m != nil {
		return m.NameCn
	}
	return ""
}

func (m *FaqCommonReply) GetInfoCn() string {
	if m != nil {
		return m.InfoCn
	}
	return ""
}

func (m *FaqCommonReply) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *FaqCommonReply) GetInfoEn() string {
	if m != nil {
		return m.InfoEn
	}
	return ""
}

func (m *FaqCommonReply) GetParent() int32 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *FaqCommonReply) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FaqCommonReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FaqCommonReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FaqCommonReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type FaqCommonsReply struct {
	Faqcs                []*FaqCommonReply `protobuf:"bytes,1,rep,name=faqcs,proto3" json:"faqcs,omitempty"`
	Code                 int32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FaqCommonsReply) Reset()         { *m = FaqCommonsReply{} }
func (m *FaqCommonsReply) String() string { return proto.CompactTextString(m) }
func (*FaqCommonsReply) ProtoMessage()    {}
func (*FaqCommonsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_faqcommon_ff70542a98d8fbbc, []int{2}
}
func (m *FaqCommonsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaqCommonsReply.Unmarshal(m, b)
}
func (m *FaqCommonsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaqCommonsReply.Marshal(b, m, deterministic)
}
func (dst *FaqCommonsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaqCommonsReply.Merge(dst, src)
}
func (m *FaqCommonsReply) XXX_Size() int {
	return xxx_messageInfo_FaqCommonsReply.Size(m)
}
func (m *FaqCommonsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FaqCommonsReply.DiscardUnknown(m)
}

var xxx_messageInfo_FaqCommonsReply proto.InternalMessageInfo

func (m *FaqCommonsReply) GetFaqcs() []*FaqCommonReply {
	if m != nil {
		return m.Faqcs
	}
	return nil
}

func (m *FaqCommonsReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*FaqCommonRequest)(nil), "pb.FaqCommonRequest")
	proto.RegisterType((*FaqCommonReply)(nil), "pb.FaqCommonReply")
	proto.RegisterType((*FaqCommonsReply)(nil), "pb.FaqCommonsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FaqCommonClient is the client API for FaqCommon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaqCommonClient interface {
	GetFaqCommonById(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonReply, error)
	GetFaqCommonByKeyword(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonsReply, error)
	GetFaqCommons(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonsReply, error)
}

type faqCommonClient struct {
	cc *grpc.ClientConn
}

func NewFaqCommonClient(cc *grpc.ClientConn) FaqCommonClient {
	return &faqCommonClient{cc}
}

func (c *faqCommonClient) GetFaqCommonById(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonReply, error) {
	out := new(FaqCommonReply)
	err := c.cc.Invoke(ctx, "/pb.FaqCommon/GetFaqCommonById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faqCommonClient) GetFaqCommonByKeyword(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonsReply, error) {
	out := new(FaqCommonsReply)
	err := c.cc.Invoke(ctx, "/pb.FaqCommon/GetFaqCommonByKeyword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faqCommonClient) GetFaqCommons(ctx context.Context, in *FaqCommonRequest, opts ...grpc.CallOption) (*FaqCommonsReply, error) {
	out := new(FaqCommonsReply)
	err := c.cc.Invoke(ctx, "/pb.FaqCommon/GetFaqCommons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaqCommonServer is the server API for FaqCommon service.
type FaqCommonServer interface {
	GetFaqCommonById(context.Context, *FaqCommonRequest) (*FaqCommonReply, error)
	GetFaqCommonByKeyword(context.Context, *FaqCommonRequest) (*FaqCommonsReply, error)
	GetFaqCommons(context.Context, *FaqCommonRequest) (*FaqCommonsReply, error)
}

func RegisterFaqCommonServer(s *grpc.Server, srv FaqCommonServer) {
	s.RegisterService(&_FaqCommon_serviceDesc, srv)
}

func _FaqCommon_GetFaqCommonById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FaqCommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaqCommonServer).GetFaqCommonById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FaqCommon/GetFaqCommonById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaqCommonServer).GetFaqCommonById(ctx, req.(*FaqCommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaqCommon_GetFaqCommonByKeyword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FaqCommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaqCommonServer).GetFaqCommonByKeyword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FaqCommon/GetFaqCommonByKeyword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaqCommonServer).GetFaqCommonByKeyword(ctx, req.(*FaqCommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaqCommon_GetFaqCommons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FaqCommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaqCommonServer).GetFaqCommons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FaqCommon/GetFaqCommons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaqCommonServer).GetFaqCommons(ctx, req.(*FaqCommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaqCommon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FaqCommon",
	HandlerType: (*FaqCommonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFaqCommonById",
			Handler:    _FaqCommon_GetFaqCommonById_Handler,
		},
		{
			MethodName: "GetFaqCommonByKeyword",
			Handler:    _FaqCommon_GetFaqCommonByKeyword_Handler,
		},
		{
			MethodName: "GetFaqCommons",
			Handler:    _FaqCommon_GetFaqCommons_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/faqcommon.proto",
}

func init() { proto.RegisterFile("pb/faqcommon.proto", fileDescriptor_faqcommon_ff70542a98d8fbbc) }

var fileDescriptor_faqcommon_ff70542a98d8fbbc = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x92, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x4d, 0xe7, 0x47, 0xe7, 0x0e, 0x8e, 0x43, 0xfc, 0xe1, 0xe2, 0x6a, 0xe8, 0xaa, 0xab,
	0x0a, 0xe3, 0x56, 0x5c, 0x58, 0xab, 0x88, 0x0b, 0xa1, 0x6f, 0xd0, 0x9f, 0x0c, 0x14, 0x6c, 0x92,
	0x36, 0x2d, 0xd2, 0xf7, 0x73, 0xef, 0x1b, 0x89, 0x24, 0x99, 0x69, 0xa7, 0xa2, 0x0b, 0x97, 0xee,
	0xee, 0xf9, 0x38, 0x39, 0x87, 0x9b, 0x04, 0xa8, 0x4c, 0xae, 0x36, 0x71, 0x99, 0x8a, 0xa2, 0x10,
	0xdc, 0x97, 0x95, 0xa8, 0x05, 0x75, 0x64, 0xe2, 0xbe, 0x13, 0x58, 0x3e, 0xc4, 0x65, 0x60, 0x78,
	0xc4, 0xca, 0x86, 0xa9, 0x9a, 0x5e, 0xc0, 0x54, 0x89, 0xa6, 0x4a, 0x19, 0x92, 0x15, 0xf1, 0x66,
	0xd1, 0x56, 0xd1, 0x05, 0x38, 0x79, 0x86, 0xce, 0x8a, 0x78, 0x93, 0xc8, 0xc9, 0x33, 0xed, 0xe3,
	0x71, 0xc1, 0x02, 0x8e, 0x23, 0xeb, 0xb3, 0x4a, 0xf3, 0x9c, 0x6f, 0x44, 0xc0, 0x71, 0x6c, 0xb9,
	0x55, 0x3b, 0x7f, 0xc8, 0x71, 0xd2, 0xfb, 0xc3, 0xce, 0x1f, 0x72, 0x9c, 0xf6, 0x7e, 0xcb, 0x65,
	0x5c, 0x31, 0x5e, 0xe3, 0xa1, 0xe9, 0xdc, 0x2a, 0xba, 0x84, 0x51, 0x93, 0x67, 0x78, 0x64, 0xa0,
	0x1e, 0xdd, 0x4f, 0x02, 0x8b, 0xbd, 0x35, 0xe4, 0x6b, 0xfb, 0xff, 0x96, 0xa0, 0x14, 0xc6, 0xa9,
	0xc8, 0x18, 0xce, 0x0c, 0x32, 0xb3, 0x66, 0x3a, 0x1f, 0xc1, 0x64, 0x9a, 0x59, 0x33, 0x9d, 0x8d,
	0x73, 0xcb, 0xf4, 0xec, 0xbe, 0xc0, 0x49, 0xb7, 0xbf, 0xb2, 0x17, 0xe0, 0xc1, 0x44, 0xbf, 0xb8,
	0x42, 0xb2, 0x1a, 0x79, 0xf3, 0x35, 0xf5, 0x65, 0xe2, 0x0f, 0xef, 0x28, 0xb2, 0x86, 0xae, 0xd8,
	0xe9, 0x8b, 0xd7, 0x1f, 0x04, 0x66, 0x9d, 0x9b, 0xde, 0xc2, 0xf2, 0x91, 0xd5, 0x9d, 0xbe, 0x6b,
	0x9f, 0x32, 0x7a, 0xf6, 0x2d, 0xd0, 0xfc, 0x9d, 0xcb, 0x1f, 0x6a, 0xdc, 0x03, 0x7a, 0x0f, 0xe7,
	0xc3, 0xf3, 0xcf, 0xac, 0x7d, 0x13, 0xd5, 0x6f, 0x21, 0xa7, 0x03, 0xaa, 0x76, 0x29, 0x37, 0x70,
	0xbc, 0x9f, 0xa2, 0xfe, 0x74, 0x3a, 0x99, 0x9a, 0x5f, 0x7f, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x42, 0x24, 0x3c, 0x14, 0x0b, 0x03, 0x00, 0x00,
}
