// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/petinfo.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PetPermit int32

const (
	PetPermit_PetPermit0 PetPermit = 0
	PetPermit_PetPermit1 PetPermit = 1
)

var PetPermit_name = map[int32]string{
	0: "PetPermit0",
	1: "PetPermit1",
}
var PetPermit_value = map[string]int32{
	"PetPermit0": 0,
	"PetPermit1": 1,
}

func (x PetPermit) String() string {
	return proto.EnumName(PetPermit_name, int32(x))
}
func (PetPermit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{0}
}

type PetInfoRequest struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Pid                  int32    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname             string   `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Breed                int32    `protobuf:"varint,5,opt,name=breed,proto3" json:"breed,omitempty"`
	Gender               int32    `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthday             int64    `protobuf:"varint,7,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Weight               float32  `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Somatotype           int32    `protobuf:"varint,9,opt,name=somatotype,proto3" json:"somatotype,omitempty"`
	Duration             int32    `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Brightness           int32    `protobuf:"varint,11,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Uid                  int32    `protobuf:"varint,12,opt,name=uid,proto3" json:"uid,omitempty"`
	Pids                 []*Pid   `protobuf:"bytes,13,rep,name=pids,proto3" json:"pids,omitempty"`
	Did                  int32    `protobuf:"varint,14,opt,name=did,proto3" json:"did,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetInfoRequest) Reset()         { *m = PetInfoRequest{} }
func (m *PetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*PetInfoRequest) ProtoMessage()    {}
func (*PetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{0}
}
func (m *PetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetInfoRequest.Unmarshal(m, b)
}
func (m *PetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetInfoRequest.Marshal(b, m, deterministic)
}
func (dst *PetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetInfoRequest.Merge(dst, src)
}
func (m *PetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_PetInfoRequest.Size(m)
}
func (m *PetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetInfoRequest proto.InternalMessageInfo

func (m *PetInfoRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PetInfoRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PetInfoRequest) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *PetInfoRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PetInfoRequest) GetBreed() int32 {
	if m != nil {
		return m.Breed
	}
	return 0
}

func (m *PetInfoRequest) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *PetInfoRequest) GetBirthday() int64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *PetInfoRequest) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *PetInfoRequest) GetSomatotype() int32 {
	if m != nil {
		return m.Somatotype
	}
	return 0
}

func (m *PetInfoRequest) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PetInfoRequest) GetBrightness() int32 {
	if m != nil {
		return m.Brightness
	}
	return 0
}

func (m *PetInfoRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PetInfoRequest) GetPids() []*Pid {
	if m != nil {
		return m.Pids
	}
	return nil
}

func (m *PetInfoRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type Pid struct {
	Pid                  int32    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pid) Reset()         { *m = Pid{} }
func (m *Pid) String() string { return proto.CompactTextString(m) }
func (*Pid) ProtoMessage()    {}
func (*Pid) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{1}
}
func (m *Pid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pid.Unmarshal(m, b)
}
func (m *Pid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pid.Marshal(b, m, deterministic)
}
func (dst *Pid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pid.Merge(dst, src)
}
func (m *Pid) XXX_Size() int {
	return xxx_messageInfo_Pid.Size(m)
}
func (m *Pid) XXX_DiscardUnknown() {
	xxx_messageInfo_Pid.DiscardUnknown(m)
}

var xxx_messageInfo_Pid proto.InternalMessageInfo

func (m *Pid) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type PetInfoReply struct {
	Source               string           `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Pid                  int32            `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Avatar               string           `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Nickname             string           `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Breed                int32            `protobuf:"varint,5,opt,name=breed,proto3" json:"breed,omitempty"`
	Gender               int32            `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthday             int64            `protobuf:"varint,7,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Weight               float32          `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Somatotype           int32            `protobuf:"varint,9,opt,name=somatotype,proto3" json:"somatotype,omitempty"`
	Duration             int32            `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Brightness           int32            `protobuf:"varint,11,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Uid                  int32            `protobuf:"varint,12,opt,name=uid,proto3" json:"uid,omitempty"`
	Pids                 []*Pid           `protobuf:"bytes,13,rep,name=pids,proto3" json:"pids,omitempty"`
	Did                  int32            `protobuf:"varint,14,opt,name=did,proto3" json:"did,omitempty"`
	Permit               PetPermit        `protobuf:"varint,15,opt,name=permit,proto3,enum=pb.PetPermit" json:"permit,omitempty"`
	CreateTime           int64            `protobuf:"varint,16,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Code                 int32            `protobuf:"varint,17,opt,name=code,proto3" json:"code,omitempty"`
	Trains               []*PetTrainReply `protobuf:"bytes,18,rep,name=trains,proto3" json:"trains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PetInfoReply) Reset()         { *m = PetInfoReply{} }
func (m *PetInfoReply) String() string { return proto.CompactTextString(m) }
func (*PetInfoReply) ProtoMessage()    {}
func (*PetInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{2}
}
func (m *PetInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetInfoReply.Unmarshal(m, b)
}
func (m *PetInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetInfoReply.Marshal(b, m, deterministic)
}
func (dst *PetInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetInfoReply.Merge(dst, src)
}
func (m *PetInfoReply) XXX_Size() int {
	return xxx_messageInfo_PetInfoReply.Size(m)
}
func (m *PetInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PetInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_PetInfoReply proto.InternalMessageInfo

func (m *PetInfoReply) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PetInfoReply) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PetInfoReply) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *PetInfoReply) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PetInfoReply) GetBreed() int32 {
	if m != nil {
		return m.Breed
	}
	return 0
}

func (m *PetInfoReply) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *PetInfoReply) GetBirthday() int64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *PetInfoReply) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *PetInfoReply) GetSomatotype() int32 {
	if m != nil {
		return m.Somatotype
	}
	return 0
}

func (m *PetInfoReply) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PetInfoReply) GetBrightness() int32 {
	if m != nil {
		return m.Brightness
	}
	return 0
}

func (m *PetInfoReply) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PetInfoReply) GetPids() []*Pid {
	if m != nil {
		return m.Pids
	}
	return nil
}

func (m *PetInfoReply) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *PetInfoReply) GetPermit() PetPermit {
	if m != nil {
		return m.Permit
	}
	return PetPermit_PetPermit0
}

func (m *PetInfoReply) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *PetInfoReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PetInfoReply) GetTrains() []*PetTrainReply {
	if m != nil {
		return m.Trains
	}
	return nil
}

type PetInfoMapRequest struct {
	Petinfos             map[int32]*PetInfoRequest `protobuf:"bytes,1,rep,name=petinfos,proto3" json:"petinfos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source               string                    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PetInfoMapRequest) Reset()         { *m = PetInfoMapRequest{} }
func (m *PetInfoMapRequest) String() string { return proto.CompactTextString(m) }
func (*PetInfoMapRequest) ProtoMessage()    {}
func (*PetInfoMapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{3}
}
func (m *PetInfoMapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetInfoMapRequest.Unmarshal(m, b)
}
func (m *PetInfoMapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetInfoMapRequest.Marshal(b, m, deterministic)
}
func (dst *PetInfoMapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetInfoMapRequest.Merge(dst, src)
}
func (m *PetInfoMapRequest) XXX_Size() int {
	return xxx_messageInfo_PetInfoMapRequest.Size(m)
}
func (m *PetInfoMapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetInfoMapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetInfoMapRequest proto.InternalMessageInfo

func (m *PetInfoMapRequest) GetPetinfos() map[int32]*PetInfoRequest {
	if m != nil {
		return m.Petinfos
	}
	return nil
}

func (m *PetInfoMapRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type PetInfoMapReply struct {
	Petinfos             map[int32]*PetInfoReply `protobuf:"bytes,1,rep,name=petinfos,proto3" json:"petinfos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code                 int32                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PetInfoMapReply) Reset()         { *m = PetInfoMapReply{} }
func (m *PetInfoMapReply) String() string { return proto.CompactTextString(m) }
func (*PetInfoMapReply) ProtoMessage()    {}
func (*PetInfoMapReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{4}
}
func (m *PetInfoMapReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetInfoMapReply.Unmarshal(m, b)
}
func (m *PetInfoMapReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetInfoMapReply.Marshal(b, m, deterministic)
}
func (dst *PetInfoMapReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetInfoMapReply.Merge(dst, src)
}
func (m *PetInfoMapReply) XXX_Size() int {
	return xxx_messageInfo_PetInfoMapReply.Size(m)
}
func (m *PetInfoMapReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PetInfoMapReply.DiscardUnknown(m)
}

var xxx_messageInfo_PetInfoMapReply proto.InternalMessageInfo

func (m *PetInfoMapReply) GetPetinfos() map[int32]*PetInfoReply {
	if m != nil {
		return m.Petinfos
	}
	return nil
}

func (m *PetInfoMapReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type PetTrainRequest struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Uid                  int32    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid                  int32    `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Id                   int32    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Voice                string   `protobuf:"bytes,6,opt,name=voice,proto3" json:"voice,omitempty"`
	Counter              int32    `protobuf:"varint,7,opt,name=counter,proto3" json:"counter,omitempty"`
	StartTime            int64    `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Num                  int32    `protobuf:"varint,10,opt,name=num,proto3" json:"num,omitempty"`
	DevFID               uint32   `protobuf:"varint,11,opt,name=devFID,proto3" json:"devFID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetTrainRequest) Reset()         { *m = PetTrainRequest{} }
func (m *PetTrainRequest) String() string { return proto.CompactTextString(m) }
func (*PetTrainRequest) ProtoMessage()    {}
func (*PetTrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{5}
}
func (m *PetTrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetTrainRequest.Unmarshal(m, b)
}
func (m *PetTrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetTrainRequest.Marshal(b, m, deterministic)
}
func (dst *PetTrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetTrainRequest.Merge(dst, src)
}
func (m *PetTrainRequest) XXX_Size() int {
	return xxx_messageInfo_PetTrainRequest.Size(m)
}
func (m *PetTrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetTrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetTrainRequest proto.InternalMessageInfo

func (m *PetTrainRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *PetTrainRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PetTrainRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PetTrainRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PetTrainRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PetTrainRequest) GetVoice() string {
	if m != nil {
		return m.Voice
	}
	return ""
}

func (m *PetTrainRequest) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *PetTrainRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *PetTrainRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *PetTrainRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PetTrainRequest) GetDevFID() uint32 {
	if m != nil {
		return m.DevFID
	}
	return 0
}

type PetTrainReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Pid                  int32    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Id                   int32    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Voice                string   `protobuf:"bytes,5,opt,name=voice,proto3" json:"voice,omitempty"`
	Counter              int32    `protobuf:"varint,6,opt,name=counter,proto3" json:"counter,omitempty"`
	Times                int64    `protobuf:"varint,7,opt,name=times,proto3" json:"times,omitempty"`
	Num                  int32    `protobuf:"varint,10,opt,name=num,proto3" json:"num,omitempty"`
	SmallId              uint32   `protobuf:"varint,11,opt,name=smallId,proto3" json:"smallId,omitempty"`
	DevFID               uint32   `protobuf:"varint,12,opt,name=devFID,proto3" json:"devFID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetTrainReply) Reset()         { *m = PetTrainReply{} }
func (m *PetTrainReply) String() string { return proto.CompactTextString(m) }
func (*PetTrainReply) ProtoMessage()    {}
func (*PetTrainReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{6}
}
func (m *PetTrainReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetTrainReply.Unmarshal(m, b)
}
func (m *PetTrainReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetTrainReply.Marshal(b, m, deterministic)
}
func (dst *PetTrainReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetTrainReply.Merge(dst, src)
}
func (m *PetTrainReply) XXX_Size() int {
	return xxx_messageInfo_PetTrainReply.Size(m)
}
func (m *PetTrainReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PetTrainReply.DiscardUnknown(m)
}

var xxx_messageInfo_PetTrainReply proto.InternalMessageInfo

func (m *PetTrainReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PetTrainReply) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *PetTrainReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PetTrainReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PetTrainReply) GetVoice() string {
	if m != nil {
		return m.Voice
	}
	return ""
}

func (m *PetTrainReply) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *PetTrainReply) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *PetTrainReply) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PetTrainReply) GetSmallId() uint32 {
	if m != nil {
		return m.SmallId
	}
	return 0
}

func (m *PetTrainReply) GetDevFID() uint32 {
	if m != nil {
		return m.DevFID
	}
	return 0
}

type PetTrains struct {
	Trains               []*PetTrainReply `protobuf:"bytes,1,rep,name=trains,proto3" json:"trains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PetTrains) Reset()         { *m = PetTrains{} }
func (m *PetTrains) String() string { return proto.CompactTextString(m) }
func (*PetTrains) ProtoMessage()    {}
func (*PetTrains) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{7}
}
func (m *PetTrains) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetTrains.Unmarshal(m, b)
}
func (m *PetTrains) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetTrains.Marshal(b, m, deterministic)
}
func (dst *PetTrains) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetTrains.Merge(dst, src)
}
func (m *PetTrains) XXX_Size() int {
	return xxx_messageInfo_PetTrains.Size(m)
}
func (m *PetTrains) XXX_DiscardUnknown() {
	xxx_messageInfo_PetTrains.DiscardUnknown(m)
}

var xxx_messageInfo_PetTrains proto.InternalMessageInfo

func (m *PetTrains) GetTrains() []*PetTrainReply {
	if m != nil {
		return m.Trains
	}
	return nil
}

type PetSliceTrainsReply struct {
	SliceTrains          []*PetTrains `protobuf:"bytes,1,rep,name=sliceTrains,proto3" json:"sliceTrains,omitempty"`
	Code                 int32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PetSliceTrainsReply) Reset()         { *m = PetSliceTrainsReply{} }
func (m *PetSliceTrainsReply) String() string { return proto.CompactTextString(m) }
func (*PetSliceTrainsReply) ProtoMessage()    {}
func (*PetSliceTrainsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{8}
}
func (m *PetSliceTrainsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetSliceTrainsReply.Unmarshal(m, b)
}
func (m *PetSliceTrainsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetSliceTrainsReply.Marshal(b, m, deterministic)
}
func (dst *PetSliceTrainsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetSliceTrainsReply.Merge(dst, src)
}
func (m *PetSliceTrainsReply) XXX_Size() int {
	return xxx_messageInfo_PetSliceTrainsReply.Size(m)
}
func (m *PetSliceTrainsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PetSliceTrainsReply.DiscardUnknown(m)
}

var xxx_messageInfo_PetSliceTrainsReply proto.InternalMessageInfo

func (m *PetSliceTrainsReply) GetSliceTrains() []*PetTrains {
	if m != nil {
		return m.SliceTrains
	}
	return nil
}

func (m *PetSliceTrainsReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type DeviceTrainRequest struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Uid                  int32    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Did                  int32    `protobuf:"varint,3,opt,name=did,proto3" json:"did,omitempty"`
	Id                   int32    `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Voice                string   `protobuf:"bytes,6,opt,name=voice,proto3" json:"voice,omitempty"`
	Counter              int32    `protobuf:"varint,7,opt,name=counter,proto3" json:"counter,omitempty"`
	StartTime            int64    `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64    `protobuf:"varint,9,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Num                  int32    `protobuf:"varint,10,opt,name=num,proto3" json:"num,omitempty"`
	DevFID               uint32   `protobuf:"varint,11,opt,name=devFID,proto3" json:"devFID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTrainRequest) Reset()         { *m = DeviceTrainRequest{} }
func (m *DeviceTrainRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceTrainRequest) ProtoMessage()    {}
func (*DeviceTrainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{9}
}
func (m *DeviceTrainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTrainRequest.Unmarshal(m, b)
}
func (m *DeviceTrainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTrainRequest.Marshal(b, m, deterministic)
}
func (dst *DeviceTrainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTrainRequest.Merge(dst, src)
}
func (m *DeviceTrainRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceTrainRequest.Size(m)
}
func (m *DeviceTrainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTrainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTrainRequest proto.InternalMessageInfo

func (m *DeviceTrainRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *DeviceTrainRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DeviceTrainRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *DeviceTrainRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeviceTrainRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceTrainRequest) GetVoice() string {
	if m != nil {
		return m.Voice
	}
	return ""
}

func (m *DeviceTrainRequest) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *DeviceTrainRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *DeviceTrainRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *DeviceTrainRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *DeviceTrainRequest) GetDevFID() uint32 {
	if m != nil {
		return m.DevFID
	}
	return 0
}

type DeviceTrainReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Did                  int32    `protobuf:"varint,2,opt,name=did,proto3" json:"did,omitempty"`
	Id                   int32    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Voice                string   `protobuf:"bytes,5,opt,name=voice,proto3" json:"voice,omitempty"`
	Counter              int32    `protobuf:"varint,6,opt,name=counter,proto3" json:"counter,omitempty"`
	Times                int64    `protobuf:"varint,7,opt,name=times,proto3" json:"times,omitempty"`
	Num                  int32    `protobuf:"varint,10,opt,name=num,proto3" json:"num,omitempty"`
	SmallId              uint32   `protobuf:"varint,11,opt,name=smallId,proto3" json:"smallId,omitempty"`
	DevFID               uint32   `protobuf:"varint,12,opt,name=devFID,proto3" json:"devFID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceTrainReply) Reset()         { *m = DeviceTrainReply{} }
func (m *DeviceTrainReply) String() string { return proto.CompactTextString(m) }
func (*DeviceTrainReply) ProtoMessage()    {}
func (*DeviceTrainReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_petinfo_6b98ab09918dc851, []int{10}
}
func (m *DeviceTrainReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTrainReply.Unmarshal(m, b)
}
func (m *DeviceTrainReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTrainReply.Marshal(b, m, deterministic)
}
func (dst *DeviceTrainReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTrainReply.Merge(dst, src)
}
func (m *DeviceTrainReply) XXX_Size() int {
	return xxx_messageInfo_DeviceTrainReply.Size(m)
}
func (m *DeviceTrainReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTrainReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTrainReply proto.InternalMessageInfo

func (m *DeviceTrainReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeviceTrainReply) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *DeviceTrainReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeviceTrainReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceTrainReply) GetVoice() string {
	if m != nil {
		return m.Voice
	}
	return ""
}

func (m *DeviceTrainReply) GetCounter() int32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *DeviceTrainReply) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *DeviceTrainReply) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *DeviceTrainReply) GetSmallId() uint32 {
	if m != nil {
		return m.SmallId
	}
	return 0
}

func (m *DeviceTrainReply) GetDevFID() uint32 {
	if m != nil {
		return m.DevFID
	}
	return 0
}

func init() {
	proto.RegisterType((*PetInfoRequest)(nil), "pb.PetInfoRequest")
	proto.RegisterType((*Pid)(nil), "pb.Pid")
	proto.RegisterType((*PetInfoReply)(nil), "pb.PetInfoReply")
	proto.RegisterType((*PetInfoMapRequest)(nil), "pb.PetInfoMapRequest")
	proto.RegisterMapType((map[int32]*PetInfoRequest)(nil), "pb.PetInfoMapRequest.PetinfosEntry")
	proto.RegisterType((*PetInfoMapReply)(nil), "pb.PetInfoMapReply")
	proto.RegisterMapType((map[int32]*PetInfoReply)(nil), "pb.PetInfoMapReply.PetinfosEntry")
	proto.RegisterType((*PetTrainRequest)(nil), "pb.PetTrainRequest")
	proto.RegisterType((*PetTrainReply)(nil), "pb.PetTrainReply")
	proto.RegisterType((*PetTrains)(nil), "pb.PetTrains")
	proto.RegisterType((*PetSliceTrainsReply)(nil), "pb.PetSliceTrainsReply")
	proto.RegisterType((*DeviceTrainRequest)(nil), "pb.DeviceTrainRequest")
	proto.RegisterType((*DeviceTrainReply)(nil), "pb.DeviceTrainReply")
	proto.RegisterEnum("pb.PetPermit", PetPermit_name, PetPermit_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PetInfoClient is the client API for PetInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PetInfoClient interface {
	// 宠物信息
	SetPetInfo(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	DeletePetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	UpdatePetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	GetPetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	GetPetInfoByUid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoMapReply, error)
	GetPetInfoBydid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	GetPetInfosBydid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoMapReply, error)
	// 关联信息
	SetDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	DeleteDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	GetDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error)
	// 宠物训练信息
	GetPetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetSliceTrainsReply, error)
	UpdatePetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetTrainReply, error)
	CounterPetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetTrainReply, error)
	UpdateDeviceTrainByDid(ctx context.Context, in *DeviceTrainRequest, opts ...grpc.CallOption) (*DeviceTrainReply, error)
}

type petInfoClient struct {
	cc *grpc.ClientConn
}

func NewPetInfoClient(cc *grpc.ClientConn) PetInfoClient {
	return &petInfoClient{cc}
}

func (c *petInfoClient) SetPetInfo(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/SetPetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) DeletePetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/DeletePetInfoByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) UpdatePetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/UpdatePetInfoByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetPetInfoByPid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetPetInfoByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetPetInfoByUid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoMapReply, error) {
	out := new(PetInfoMapReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetPetInfoByUid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetPetInfoBydid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetPetInfoBydid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetPetInfosBydid(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoMapReply, error) {
	out := new(PetInfoMapReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetPetInfosBydid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) SetDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/SetDevicePet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) DeleteDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/DeleteDevicePet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetDevicePet(ctx context.Context, in *PetInfoRequest, opts ...grpc.CallOption) (*PetInfoReply, error) {
	out := new(PetInfoReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetDevicePet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) GetPetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetSliceTrainsReply, error) {
	out := new(PetSliceTrainsReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/GetPetTrainByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) UpdatePetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetTrainReply, error) {
	out := new(PetTrainReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/UpdatePetTrainByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) CounterPetTrainByPid(ctx context.Context, in *PetTrainRequest, opts ...grpc.CallOption) (*PetTrainReply, error) {
	out := new(PetTrainReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/CounterPetTrainByPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petInfoClient) UpdateDeviceTrainByDid(ctx context.Context, in *DeviceTrainRequest, opts ...grpc.CallOption) (*DeviceTrainReply, error) {
	out := new(DeviceTrainReply)
	err := c.cc.Invoke(ctx, "/pb.PetInfo/UpdateDeviceTrainByDid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PetInfoServer is the server API for PetInfo service.
type PetInfoServer interface {
	// 宠物信息
	SetPetInfo(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	DeletePetInfoByPid(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	UpdatePetInfoByPid(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	GetPetInfoByPid(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	GetPetInfoByUid(context.Context, *PetInfoRequest) (*PetInfoMapReply, error)
	GetPetInfoBydid(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	GetPetInfosBydid(context.Context, *PetInfoRequest) (*PetInfoMapReply, error)
	// 关联信息
	SetDevicePet(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	DeleteDevicePet(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	GetDevicePet(context.Context, *PetInfoRequest) (*PetInfoReply, error)
	// 宠物训练信息
	GetPetTrainByPid(context.Context, *PetTrainRequest) (*PetSliceTrainsReply, error)
	UpdatePetTrainByPid(context.Context, *PetTrainRequest) (*PetTrainReply, error)
	CounterPetTrainByPid(context.Context, *PetTrainRequest) (*PetTrainReply, error)
	UpdateDeviceTrainByDid(context.Context, *DeviceTrainRequest) (*DeviceTrainReply, error)
}

func RegisterPetInfoServer(s *grpc.Server, srv PetInfoServer) {
	s.RegisterService(&_PetInfo_serviceDesc, srv)
}

func _PetInfo_SetPetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).SetPetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/SetPetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).SetPetInfo(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_DeletePetInfoByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).DeletePetInfoByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/DeletePetInfoByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).DeletePetInfoByPid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_UpdatePetInfoByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).UpdatePetInfoByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/UpdatePetInfoByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).UpdatePetInfoByPid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetPetInfoByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetPetInfoByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetPetInfoByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetPetInfoByPid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetPetInfoByUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetPetInfoByUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetPetInfoByUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetPetInfoByUid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetPetInfoBydid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetPetInfoBydid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetPetInfoBydid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetPetInfoBydid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetPetInfosBydid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetPetInfosBydid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetPetInfosBydid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetPetInfosBydid(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_SetDevicePet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).SetDevicePet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/SetDevicePet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).SetDevicePet(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_DeleteDevicePet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).DeleteDevicePet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/DeleteDevicePet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).DeleteDevicePet(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetDevicePet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetDevicePet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetDevicePet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetDevicePet(ctx, req.(*PetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_GetPetTrainByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).GetPetTrainByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/GetPetTrainByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).GetPetTrainByPid(ctx, req.(*PetTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_UpdatePetTrainByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).UpdatePetTrainByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/UpdatePetTrainByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).UpdatePetTrainByPid(ctx, req.(*PetTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_CounterPetTrainByPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).CounterPetTrainByPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/CounterPetTrainByPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).CounterPetTrainByPid(ctx, req.(*PetTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetInfo_UpdateDeviceTrainByDid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceTrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetInfoServer).UpdateDeviceTrainByDid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetInfo/UpdateDeviceTrainByDid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetInfoServer).UpdateDeviceTrainByDid(ctx, req.(*DeviceTrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PetInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PetInfo",
	HandlerType: (*PetInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetPetInfo",
			Handler:    _PetInfo_SetPetInfo_Handler,
		},
		{
			MethodName: "DeletePetInfoByPid",
			Handler:    _PetInfo_DeletePetInfoByPid_Handler,
		},
		{
			MethodName: "UpdatePetInfoByPid",
			Handler:    _PetInfo_UpdatePetInfoByPid_Handler,
		},
		{
			MethodName: "GetPetInfoByPid",
			Handler:    _PetInfo_GetPetInfoByPid_Handler,
		},
		{
			MethodName: "GetPetInfoByUid",
			Handler:    _PetInfo_GetPetInfoByUid_Handler,
		},
		{
			MethodName: "GetPetInfoBydid",
			Handler:    _PetInfo_GetPetInfoBydid_Handler,
		},
		{
			MethodName: "GetPetInfosBydid",
			Handler:    _PetInfo_GetPetInfosBydid_Handler,
		},
		{
			MethodName: "SetDevicePet",
			Handler:    _PetInfo_SetDevicePet_Handler,
		},
		{
			MethodName: "DeleteDevicePet",
			Handler:    _PetInfo_DeleteDevicePet_Handler,
		},
		{
			MethodName: "GetDevicePet",
			Handler:    _PetInfo_GetDevicePet_Handler,
		},
		{
			MethodName: "GetPetTrainByPid",
			Handler:    _PetInfo_GetPetTrainByPid_Handler,
		},
		{
			MethodName: "UpdatePetTrainByPid",
			Handler:    _PetInfo_UpdatePetTrainByPid_Handler,
		},
		{
			MethodName: "CounterPetTrainByPid",
			Handler:    _PetInfo_CounterPetTrainByPid_Handler,
		},
		{
			MethodName: "UpdateDeviceTrainByDid",
			Handler:    _PetInfo_UpdateDeviceTrainByDid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/petinfo.proto",
}

func init() { proto.RegisterFile("pb/petinfo.proto", fileDescriptor_petinfo_6b98ab09918dc851) }

var fileDescriptor_petinfo_6b98ab09918dc851 = []byte{
	// 934 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0xce, 0x8c, 0x3d, 0x76, 0x5c, 0xb1, 0x1d, 0xa7, 0x13, 0xed, 0xb6, 0x0c, 0x42, 0x66, 0x10,
	0xc8, 0x80, 0x94, 0x85, 0x80, 0x22, 0x40, 0xac, 0x16, 0x85, 0xc0, 0x92, 0xc3, 0x0a, 0x6b, 0xb2,
	0x7b, 0xe1, 0x36, 0x76, 0xd7, 0xee, 0xb6, 0x62, 0xcf, 0x0c, 0x33, 0x3d, 0x46, 0x73, 0x46, 0xe2,
	0x85, 0x38, 0xf3, 0x34, 0x48, 0x1c, 0x90, 0x38, 0xf0, 0x06, 0xa8, 0x7f, 0xe6, 0x6f, 0xc7, 0x26,
	0x72, 0x24, 0x0e, 0x2b, 0x71, 0x9b, 0xaf, 0xba, 0xbe, 0xea, 0xaa, 0xea, 0xaf, 0x2a, 0x0e, 0x8c,
	0xa2, 0xf9, 0x83, 0x08, 0x05, 0x0f, 0x9e, 0x87, 0xa7, 0x51, 0x1c, 0x8a, 0x90, 0xd8, 0xd1, 0xdc,
	0xfd, 0xcb, 0x86, 0xe1, 0x0c, 0xc5, 0x55, 0xf0, 0x3c, 0xf4, 0xf0, 0xc7, 0x14, 0x13, 0x41, 0xee,
	0x41, 0x27, 0x09, 0xd3, 0x78, 0x81, 0xd4, 0x9a, 0x58, 0xd3, 0x9e, 0x67, 0x10, 0x19, 0x41, 0x2b,
	0xe2, 0x8c, 0xda, 0x13, 0x6b, 0xea, 0x78, 0xf2, 0x53, 0x7a, 0xfa, 0x6b, 0x5f, 0xf8, 0x31, 0x6d,
	0x69, 0x4f, 0x8d, 0xc8, 0x18, 0xf6, 0x03, 0xbe, 0xb8, 0x09, 0xfc, 0x15, 0xd2, 0xb6, 0x3a, 0x29,
	0x30, 0x39, 0x01, 0x67, 0x1e, 0x23, 0x32, 0xea, 0xa8, 0x38, 0x1a, 0xc8, 0x48, 0x2f, 0x30, 0x60,
	0x18, 0xd3, 0x8e, 0x32, 0x1b, 0x24, 0x23, 0xcd, 0x79, 0x2c, 0x5e, 0x32, 0x3f, 0xa3, 0xdd, 0x89,
	0x35, 0x6d, 0x79, 0x05, 0x96, 0x9c, 0x9f, 0x90, 0xbf, 0x78, 0x29, 0xe8, 0xfe, 0xc4, 0x9a, 0xda,
	0x9e, 0x41, 0xe4, 0x2d, 0x80, 0x24, 0x5c, 0xf9, 0x22, 0x14, 0x59, 0x84, 0xb4, 0xa7, 0xe2, 0x55,
	0x2c, 0x32, 0x26, 0x4b, 0x63, 0x5f, 0xf0, 0x30, 0xa0, 0xa0, 0x4e, 0x0b, 0x2c, 0xb9, 0xf3, 0x58,
	0x46, 0x09, 0x30, 0x49, 0xe8, 0x81, 0xe6, 0x96, 0x16, 0xd9, 0x83, 0x94, 0x33, 0xda, 0xd7, 0x3d,
	0x48, 0x39, 0x23, 0x6f, 0x40, 0x3b, 0xe2, 0x2c, 0xa1, 0x83, 0x49, 0x6b, 0x7a, 0x70, 0xd6, 0x3d,
	0x8d, 0xe6, 0xa7, 0x33, 0xce, 0x3c, 0x65, 0x94, 0xee, 0x8c, 0x33, 0x3a, 0xd4, 0xee, 0x8c, 0x33,
	0xf7, 0x3e, 0xb4, 0x66, 0x9c, 0xe5, 0xbd, 0xb4, 0x8a, 0x5e, 0xba, 0x7f, 0xb7, 0xa0, 0x5f, 0x3c,
	0x44, 0xb4, 0xcc, 0xfe, 0x7f, 0x86, 0xff, 0xf0, 0x19, 0xc8, 0xbb, 0xd0, 0x89, 0x30, 0x5e, 0x71,
	0x41, 0x0f, 0x27, 0xd6, 0x74, 0x78, 0x36, 0x50, 0x04, 0x14, 0x33, 0x65, 0xf4, 0xcc, 0xa1, 0xcc,
	0x63, 0x11, 0xa3, 0x2f, 0xf0, 0x29, 0x5f, 0x21, 0x1d, 0xa9, 0xca, 0x2b, 0x16, 0x42, 0xa0, 0xbd,
	0x08, 0x19, 0xd2, 0x23, 0x15, 0x59, 0x7d, 0x93, 0xf7, 0xa1, 0x23, 0x62, 0x9f, 0x07, 0x09, 0x25,
	0x2a, 0x97, 0x23, 0x13, 0xfa, 0xa9, 0x34, 0xaa, 0xa7, 0xf5, 0x8c, 0x83, 0xfb, 0x9b, 0x05, 0x47,
	0xe6, 0xcd, 0x9f, 0xf8, 0x51, 0x3e, 0x7f, 0x8f, 0x60, 0xdf, 0xcc, 0x69, 0x42, 0x2d, 0x15, 0xe2,
	0x1d, 0x13, 0xa2, 0xee, 0x28, 0x2d, 0xca, 0xeb, 0x9b, 0x40, 0xc4, 0x99, 0x57, 0x90, 0x2a, 0xca,
	0xb1, 0xab, 0xca, 0x19, 0x7f, 0x0f, 0x83, 0x1a, 0x45, 0xf6, 0xe5, 0x06, 0xb3, 0x5c, 0x85, 0x37,
	0x98, 0x91, 0x29, 0x38, 0x6b, 0x7f, 0x99, 0x6a, 0xe6, 0xc1, 0x19, 0xa9, 0x5c, 0x6c, 0x6e, 0xf5,
	0xb4, 0xc3, 0x17, 0xf6, 0x67, 0x96, 0xfb, 0xab, 0x05, 0x87, 0xd5, 0xb4, 0xa4, 0x6c, 0x1f, 0x36,
	0xb2, 0x7f, 0xfb, 0xd5, 0xec, 0xa3, 0x65, 0xb6, 0x35, 0xf7, 0xbc, 0xa3, 0x76, 0xd9, 0xd1, 0xf1,
	0x93, 0xdb, 0xf3, 0x7e, 0xaf, 0x9e, 0xf7, 0xa8, 0x96, 0xb7, 0x6c, 0x79, 0x25, 0xeb, 0x9f, 0x6d,
	0x95, 0xb5, 0x79, 0x8f, 0x5b, 0x77, 0x5e, 0x5a, 0x0e, 0x5b, 0x5a, 0x4e, 0x6e, 0xab, 0x1c, 0xbf,
	0x21, 0xd8, 0x9c, 0xa9, 0x01, 0x73, 0x3c, 0x9b, 0x33, 0x59, 0x82, 0x1a, 0x39, 0x47, 0x45, 0x6a,
	0xe7, 0xe3, 0xb6, 0x0e, 0xf9, 0x02, 0xd5, 0x5c, 0xf5, 0x3c, 0x0d, 0x08, 0x85, 0xee, 0x22, 0x4c,
	0x03, 0x81, 0xb1, 0x9a, 0x2a, 0xc7, 0xcb, 0x21, 0x79, 0x13, 0x7a, 0x89, 0xf0, 0x63, 0xa1, 0x74,
	0xb7, 0xaf, 0x74, 0x57, 0x1a, 0x24, 0x0f, 0x03, 0xa6, 0xce, 0x7a, 0xea, 0x2c, 0x87, 0x32, 0xbb,
	0x20, 0x5d, 0x99, 0x79, 0x92, 0x9f, 0xb2, 0x32, 0x86, 0xeb, 0x6f, 0xaf, 0x2e, 0xd5, 0x18, 0x0d,
	0x3c, 0x83, 0xdc, 0xdf, 0x2d, 0xd5, 0xd5, 0x52, 0x95, 0x45, 0xeb, 0xad, 0x8a, 0x98, 0x9b, 0xcb,
	0x46, 0x57, 0xdb, 0x6a, 0x54, 0xdb, 0xde, 0x54, 0xad, 0xb3, 0xa5, 0xda, 0x4e, 0xbd, 0xda, 0x13,
	0x70, 0x04, 0x5f, 0x61, 0x62, 0x76, 0x8b, 0x06, 0x1b, 0x6a, 0xa1, 0xd0, 0x4d, 0x56, 0xfe, 0x72,
	0x79, 0xc5, 0x4c, 0x31, 0x39, 0xac, 0x54, 0xd9, 0xaf, 0x55, 0x79, 0x0e, 0xbd, 0xbc, 0xc8, 0xa4,
	0x32, 0x99, 0xd6, 0x6d, 0x93, 0xf9, 0x03, 0x1c, 0xcf, 0x50, 0x5c, 0x2f, 0xf9, 0x02, 0x35, 0x59,
	0xb7, 0xe8, 0x01, 0x1c, 0x24, 0xa5, 0xcd, 0x84, 0x19, 0x54, 0xc3, 0x24, 0x5e, 0xd5, 0x63, 0x93,
	0x9c, 0xdd, 0x5f, 0x6c, 0x20, 0x97, 0xb8, 0xce, 0x9d, 0xee, 0x24, 0x41, 0x56, 0x4a, 0x90, 0xbd,
	0xb6, 0x12, 0xfc, 0xc3, 0x82, 0x51, 0xad, 0x11, 0xff, 0xa2, 0x42, 0x56, 0xb6, 0x80, 0xbd, 0x6e,
	0x2a, 0xfc, 0xe0, 0x43, 0xa5, 0x42, 0xfd, 0xb7, 0x85, 0x0c, 0x01, 0x0a, 0xf0, 0xd1, 0x68, 0xaf,
	0x86, 0x3f, 0x1e, 0x59, 0x67, 0x7f, 0x76, 0xa0, 0x6b, 0x56, 0x17, 0xf9, 0x14, 0xe0, 0x5a, 0x9e,
	0x69, 0xb4, 0x61, 0x1b, 0x8f, 0x1b, 0x9b, 0xce, 0xdd, 0x23, 0x5f, 0x4a, 0x7d, 0x2d, 0x51, 0xa0,
	0xb1, 0x5f, 0x64, 0xf2, 0x27, 0xc7, 0x0e, 0xec, 0x67, 0x11, 0xf3, 0xef, 0xc8, 0xfe, 0x1c, 0x0e,
	0x1f, 0x17, 0x19, 0xef, 0x7a, 0x71, 0x8d, 0xfa, 0x6c, 0x0b, 0xf5, 0x78, 0xc3, 0x9f, 0x93, 0xe6,
	0xc5, 0x6c, 0x87, 0x8b, 0x1f, 0xc2, 0xa8, 0xa4, 0x26, 0xdb, 0xb9, 0x5b, 0x6e, 0x3e, 0x87, 0xfe,
	0x35, 0x0a, 0x2d, 0xe4, 0x19, 0x8a, 0x5d, 0x5a, 0xa5, 0x9f, 0x69, 0x77, 0xea, 0x39, 0xf4, 0x1f,
	0xdf, 0xe5, 0xca, 0x8b, 0xbc, 0x52, 0x35, 0x70, 0xfa, 0x79, 0x8e, 0xeb, 0x5b, 0x50, 0x93, 0xef,
	0x1b, 0xe3, 0xab, 0x1b, 0xd0, 0xdd, 0x23, 0x8f, 0xe0, 0xb8, 0xd0, 0xc7, 0x6d, 0x61, 0x9a, 0x1b,
	0xd6, 0xdd, 0x23, 0x5f, 0xc1, 0xc9, 0xd7, 0x7a, 0xe4, 0xee, 0x1a, 0xe1, 0x3b, 0xb8, 0xa7, 0x53,
	0xa8, 0x6c, 0x8f, 0x8b, 0xec, 0x52, 0xfe, 0x14, 0x96, 0xee, 0xcd, 0xe5, 0x3a, 0x3e, 0x69, 0xd8,
	0x55, 0xa4, 0x79, 0x47, 0xfd, 0x27, 0xf4, 0xc9, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x20,
	0x97, 0xfb, 0x1d, 0x0d, 0x00, 0x00,
}
