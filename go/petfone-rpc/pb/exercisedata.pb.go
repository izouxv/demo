// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/exercisedata.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_Default   State = 0
	State_Strenuous State = 1
)

var State_name = map[int32]string{
	0: "Default",
	1: "Strenuous",
}
var State_value = map[string]int32{
	"Default":   0,
	"Strenuous": 1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{0}
}

type DataType int32

const (
	DataType_DataDefault DataType = 0
	DataType_DataList    DataType = 1
	DataType_DataImage   DataType = 2
)

var DataType_name = map[int32]string{
	0: "DataDefault",
	1: "DataList",
	2: "DataImage",
}
var DataType_value = map[string]int32{
	"DataDefault": 0,
	"DataList":    1,
	"DataImage":   2,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}
func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{1}
}

type ExerciseDataRequest struct {
	Source               string         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Uid                  int32          `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Udid                 int32          `protobuf:"varint,3,opt,name=udid,proto3" json:"udid,omitempty"`
	Pid                  int32          `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Pdid                 int32          `protobuf:"varint,5,opt,name=pdid,proto3" json:"pdid,omitempty"`
	Ucals                float32        `protobuf:"fixed32,6,opt,name=ucals,proto3" json:"ucals,omitempty"`
	Usteps               int32          `protobuf:"varint,7,opt,name=usteps,proto3" json:"usteps,omitempty"`
	Pcals                float32        `protobuf:"fixed32,8,opt,name=pcals,proto3" json:"pcals,omitempty"`
	Pcoordinates         []*Pcoordinate `protobuf:"bytes,9,rep,name=pcoordinates,proto3" json:"pcoordinates,omitempty"`
	StartTime            int64          `protobuf:"varint,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64          `protobuf:"varint,11,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ImageInfo            *ImageInfo     `protobuf:"bytes,12,opt,name=imageInfo,proto3" json:"imageInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ExerciseDataRequest) Reset()         { *m = ExerciseDataRequest{} }
func (m *ExerciseDataRequest) String() string { return proto.CompactTextString(m) }
func (*ExerciseDataRequest) ProtoMessage()    {}
func (*ExerciseDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{0}
}
func (m *ExerciseDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExerciseDataRequest.Unmarshal(m, b)
}
func (m *ExerciseDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExerciseDataRequest.Marshal(b, m, deterministic)
}
func (dst *ExerciseDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExerciseDataRequest.Merge(dst, src)
}
func (m *ExerciseDataRequest) XXX_Size() int {
	return xxx_messageInfo_ExerciseDataRequest.Size(m)
}
func (m *ExerciseDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExerciseDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExerciseDataRequest proto.InternalMessageInfo

func (m *ExerciseDataRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ExerciseDataRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ExerciseDataRequest) GetUdid() int32 {
	if m != nil {
		return m.Udid
	}
	return 0
}

func (m *ExerciseDataRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ExerciseDataRequest) GetPdid() int32 {
	if m != nil {
		return m.Pdid
	}
	return 0
}

func (m *ExerciseDataRequest) GetUcals() float32 {
	if m != nil {
		return m.Ucals
	}
	return 0
}

func (m *ExerciseDataRequest) GetUsteps() int32 {
	if m != nil {
		return m.Usteps
	}
	return 0
}

func (m *ExerciseDataRequest) GetPcals() float32 {
	if m != nil {
		return m.Pcals
	}
	return 0
}

func (m *ExerciseDataRequest) GetPcoordinates() []*Pcoordinate {
	if m != nil {
		return m.Pcoordinates
	}
	return nil
}

func (m *ExerciseDataRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ExerciseDataRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ExerciseDataRequest) GetImageInfo() *ImageInfo {
	if m != nil {
		return m.ImageInfo
	}
	return nil
}

type Pcoordinate struct {
	Longitude            float32  `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Nowtime              int64    `protobuf:"varint,3,opt,name=nowtime,proto3" json:"nowtime,omitempty"`
	Steps                int32    `protobuf:"varint,4,opt,name=steps,proto3" json:"steps,omitempty"`
	State                State    `protobuf:"varint,5,opt,name=state,proto3,enum=pb.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pcoordinate) Reset()         { *m = Pcoordinate{} }
func (m *Pcoordinate) String() string { return proto.CompactTextString(m) }
func (*Pcoordinate) ProtoMessage()    {}
func (*Pcoordinate) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{1}
}
func (m *Pcoordinate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pcoordinate.Unmarshal(m, b)
}
func (m *Pcoordinate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pcoordinate.Marshal(b, m, deterministic)
}
func (dst *Pcoordinate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pcoordinate.Merge(dst, src)
}
func (m *Pcoordinate) XXX_Size() int {
	return xxx_messageInfo_Pcoordinate.Size(m)
}
func (m *Pcoordinate) XXX_DiscardUnknown() {
	xxx_messageInfo_Pcoordinate.DiscardUnknown(m)
}

var xxx_messageInfo_Pcoordinate proto.InternalMessageInfo

func (m *Pcoordinate) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Pcoordinate) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Pcoordinate) GetNowtime() int64 {
	if m != nil {
		return m.Nowtime
	}
	return 0
}

func (m *Pcoordinate) GetSteps() int32 {
	if m != nil {
		return m.Steps
	}
	return 0
}

func (m *Pcoordinate) GetState() State {
	if m != nil {
		return m.State
	}
	return State_Default
}

type ExerciseDataReply struct {
	Source               string         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Uid                  int32          `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid                  int32          `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Pdid                 int32          `protobuf:"varint,4,opt,name=pdid,proto3" json:"pdid,omitempty"`
	Pcals                float32        `protobuf:"fixed32,5,opt,name=pcals,proto3" json:"pcals,omitempty"`
	Pcoordinates         []*Pcoordinate `protobuf:"bytes,6,rep,name=pcoordinates,proto3" json:"pcoordinates,omitempty"`
	Code                 int32          `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`
	CreateTime           int64          `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ExerciseDataReply) Reset()         { *m = ExerciseDataReply{} }
func (m *ExerciseDataReply) String() string { return proto.CompactTextString(m) }
func (*ExerciseDataReply) ProtoMessage()    {}
func (*ExerciseDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{2}
}
func (m *ExerciseDataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExerciseDataReply.Unmarshal(m, b)
}
func (m *ExerciseDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExerciseDataReply.Marshal(b, m, deterministic)
}
func (dst *ExerciseDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExerciseDataReply.Merge(dst, src)
}
func (m *ExerciseDataReply) XXX_Size() int {
	return xxx_messageInfo_ExerciseDataReply.Size(m)
}
func (m *ExerciseDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ExerciseDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_ExerciseDataReply proto.InternalMessageInfo

func (m *ExerciseDataReply) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ExerciseDataReply) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ExerciseDataReply) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ExerciseDataReply) GetPdid() int32 {
	if m != nil {
		return m.Pdid
	}
	return 0
}

func (m *ExerciseDataReply) GetPcals() float32 {
	if m != nil {
		return m.Pcals
	}
	return 0
}

func (m *ExerciseDataReply) GetPcoordinates() []*Pcoordinate {
	if m != nil {
		return m.Pcoordinates
	}
	return nil
}

func (m *ExerciseDataReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ExerciseDataReply) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type MotionDataMapReply struct {
	Data                 []*DayExerciseDataReply `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Code                 int32                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Pid                  int32                   `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	Pdid                 int32                   `protobuf:"varint,4,opt,name=pdid,proto3" json:"pdid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MotionDataMapReply) Reset()         { *m = MotionDataMapReply{} }
func (m *MotionDataMapReply) String() string { return proto.CompactTextString(m) }
func (*MotionDataMapReply) ProtoMessage()    {}
func (*MotionDataMapReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{3}
}
func (m *MotionDataMapReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MotionDataMapReply.Unmarshal(m, b)
}
func (m *MotionDataMapReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MotionDataMapReply.Marshal(b, m, deterministic)
}
func (dst *MotionDataMapReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MotionDataMapReply.Merge(dst, src)
}
func (m *MotionDataMapReply) XXX_Size() int {
	return xxx_messageInfo_MotionDataMapReply.Size(m)
}
func (m *MotionDataMapReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MotionDataMapReply.DiscardUnknown(m)
}

var xxx_messageInfo_MotionDataMapReply proto.InternalMessageInfo

func (m *MotionDataMapReply) GetData() []*DayExerciseDataReply {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MotionDataMapReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MotionDataMapReply) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MotionDataMapReply) GetPdid() int32 {
	if m != nil {
		return m.Pdid
	}
	return 0
}

type DayExerciseDataReply struct {
	DayTime                 int64         `protobuf:"varint,1,opt,name=dayTime,proto3" json:"dayTime,omitempty"`
	CardioTimes             int64         `protobuf:"varint,2,opt,name=cardioTimes,proto3" json:"cardioTimes,omitempty"`
	StrenuousTimes          int64         `protobuf:"varint,3,opt,name=strenuousTimes,proto3" json:"strenuousTimes,omitempty"`
	Calorie                 float32       `protobuf:"fixed32,4,opt,name=calorie,proto3" json:"calorie,omitempty"`
	Steps                   int32         `protobuf:"varint,5,opt,name=steps,proto3" json:"steps,omitempty"`
	Coordinates             []*Coordinate `protobuf:"bytes,6,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	Records                 []*Record     `protobuf:"bytes,7,rep,name=records,proto3" json:"records,omitempty"`
	Types                   DataType      `protobuf:"varint,8,opt,name=types,proto3,enum=pb.DataType" json:"types,omitempty"`
	CardioDurationMinute    int32         `protobuf:"varint,9,opt,name=CardioDurationMinute,proto3" json:"CardioDurationMinute,omitempty"`
	StrenuousDurationMinute int32         `protobuf:"varint,10,opt,name=StrenuousDurationMinute,proto3" json:"StrenuousDurationMinute,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}      `json:"-"`
	XXX_unrecognized        []byte        `json:"-"`
	XXX_sizecache           int32         `json:"-"`
}

func (m *DayExerciseDataReply) Reset()         { *m = DayExerciseDataReply{} }
func (m *DayExerciseDataReply) String() string { return proto.CompactTextString(m) }
func (*DayExerciseDataReply) ProtoMessage()    {}
func (*DayExerciseDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{4}
}
func (m *DayExerciseDataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DayExerciseDataReply.Unmarshal(m, b)
}
func (m *DayExerciseDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DayExerciseDataReply.Marshal(b, m, deterministic)
}
func (dst *DayExerciseDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DayExerciseDataReply.Merge(dst, src)
}
func (m *DayExerciseDataReply) XXX_Size() int {
	return xxx_messageInfo_DayExerciseDataReply.Size(m)
}
func (m *DayExerciseDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DayExerciseDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_DayExerciseDataReply proto.InternalMessageInfo

func (m *DayExerciseDataReply) GetDayTime() int64 {
	if m != nil {
		return m.DayTime
	}
	return 0
}

func (m *DayExerciseDataReply) GetCardioTimes() int64 {
	if m != nil {
		return m.CardioTimes
	}
	return 0
}

func (m *DayExerciseDataReply) GetStrenuousTimes() int64 {
	if m != nil {
		return m.StrenuousTimes
	}
	return 0
}

func (m *DayExerciseDataReply) GetCalorie() float32 {
	if m != nil {
		return m.Calorie
	}
	return 0
}

func (m *DayExerciseDataReply) GetSteps() int32 {
	if m != nil {
		return m.Steps
	}
	return 0
}

func (m *DayExerciseDataReply) GetCoordinates() []*Coordinate {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *DayExerciseDataReply) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *DayExerciseDataReply) GetTypes() DataType {
	if m != nil {
		return m.Types
	}
	return DataType_DataDefault
}

func (m *DayExerciseDataReply) GetCardioDurationMinute() int32 {
	if m != nil {
		return m.CardioDurationMinute
	}
	return 0
}

func (m *DayExerciseDataReply) GetStrenuousDurationMinute() int32 {
	if m != nil {
		return m.StrenuousDurationMinute
	}
	return 0
}

// 经纬度坐标点
type Coordinate struct {
	Longitude            float32  `protobuf:"fixed32,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	NowTime              int64    `protobuf:"varint,3,opt,name=now_time,json=nowTime,proto3" json:"now_time,omitempty"`
	State                State    `protobuf:"varint,4,opt,name=state,proto3,enum=pb.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coordinate) Reset()         { *m = Coordinate{} }
func (m *Coordinate) String() string { return proto.CompactTextString(m) }
func (*Coordinate) ProtoMessage()    {}
func (*Coordinate) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{5}
}
func (m *Coordinate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinate.Unmarshal(m, b)
}
func (m *Coordinate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinate.Marshal(b, m, deterministic)
}
func (dst *Coordinate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinate.Merge(dst, src)
}
func (m *Coordinate) XXX_Size() int {
	return xxx_messageInfo_Coordinate.Size(m)
}
func (m *Coordinate) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinate.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinate proto.InternalMessageInfo

func (m *Coordinate) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Coordinate) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Coordinate) GetNowTime() int64 {
	if m != nil {
		return m.NowTime
	}
	return 0
}

func (m *Coordinate) GetState() State {
	if m != nil {
		return m.State
	}
	return State_Default
}

type Record struct {
	TimeRecord              string     `protobuf:"bytes,1,opt,name=timeRecord,proto3" json:"timeRecord,omitempty"`
	Steps                   int32      `protobuf:"varint,2,opt,name=steps,proto3" json:"steps,omitempty"`
	Calorie                 float32    `protobuf:"fixed32,3,opt,name=calorie,proto3" json:"calorie,omitempty"`
	CardioTimes             int64      `protobuf:"varint,4,opt,name=cardioTimes,proto3" json:"cardioTimes,omitempty"`
	StrenuousTimes          int64      `protobuf:"varint,5,opt,name=strenuousTimes,proto3" json:"strenuousTimes,omitempty"`
	ImageInfo               *ImageInfo `protobuf:"bytes,6,opt,name=imageInfo,proto3" json:"imageInfo,omitempty"`
	Pdid                    int32      `protobuf:"varint,7,opt,name=pdid,proto3" json:"pdid,omitempty"`
	CardioDurationMinute    int32      `protobuf:"varint,9,opt,name=CardioDurationMinute,proto3" json:"CardioDurationMinute,omitempty"`
	StrenuousDurationMinute int32      `protobuf:"varint,10,opt,name=StrenuousDurationMinute,proto3" json:"StrenuousDurationMinute,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}   `json:"-"`
	XXX_unrecognized        []byte     `json:"-"`
	XXX_sizecache           int32      `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{6}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (dst *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(dst, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTimeRecord() string {
	if m != nil {
		return m.TimeRecord
	}
	return ""
}

func (m *Record) GetSteps() int32 {
	if m != nil {
		return m.Steps
	}
	return 0
}

func (m *Record) GetCalorie() float32 {
	if m != nil {
		return m.Calorie
	}
	return 0
}

func (m *Record) GetCardioTimes() int64 {
	if m != nil {
		return m.CardioTimes
	}
	return 0
}

func (m *Record) GetStrenuousTimes() int64 {
	if m != nil {
		return m.StrenuousTimes
	}
	return 0
}

func (m *Record) GetImageInfo() *ImageInfo {
	if m != nil {
		return m.ImageInfo
	}
	return nil
}

func (m *Record) GetPdid() int32 {
	if m != nil {
		return m.Pdid
	}
	return 0
}

func (m *Record) GetCardioDurationMinute() int32 {
	if m != nil {
		return m.CardioDurationMinute
	}
	return 0
}

func (m *Record) GetStrenuousDurationMinute() int32 {
	if m != nil {
		return m.StrenuousDurationMinute
	}
	return 0
}

type ImageInfo struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Md5                  string   `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	ImageEnCode          string   `protobuf:"bytes,6,opt,name=imageEnCode,proto3" json:"imageEnCode,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageInfo) Reset()         { *m = ImageInfo{} }
func (m *ImageInfo) String() string { return proto.CompactTextString(m) }
func (*ImageInfo) ProtoMessage()    {}
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_exercisedata_48933d9010c30143, []int{7}
}
func (m *ImageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfo.Unmarshal(m, b)
}
func (m *ImageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfo.Marshal(b, m, deterministic)
}
func (dst *ImageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfo.Merge(dst, src)
}
func (m *ImageInfo) XXX_Size() int {
	return xxx_messageInfo_ImageInfo.Size(m)
}
func (m *ImageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfo proto.InternalMessageInfo

func (m *ImageInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImageInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ImageInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageInfo) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ImageInfo) GetImageEnCode() string {
	if m != nil {
		return m.ImageEnCode
	}
	return ""
}

func (m *ImageInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ExerciseDataRequest)(nil), "pb.ExerciseDataRequest")
	proto.RegisterType((*Pcoordinate)(nil), "pb.Pcoordinate")
	proto.RegisterType((*ExerciseDataReply)(nil), "pb.ExerciseDataReply")
	proto.RegisterType((*MotionDataMapReply)(nil), "pb.MotionDataMapReply")
	proto.RegisterType((*DayExerciseDataReply)(nil), "pb.DayExerciseDataReply")
	proto.RegisterType((*Coordinate)(nil), "pb.Coordinate")
	proto.RegisterType((*Record)(nil), "pb.Record")
	proto.RegisterType((*ImageInfo)(nil), "pb.ImageInfo")
	proto.RegisterEnum("pb.State", State_name, State_value)
	proto.RegisterEnum("pb.DataType", DataType_name, DataType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExerciseDataClient is the client API for ExerciseData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExerciseDataClient interface {
	SetExerciseData(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*ExerciseDataReply, error)
	GetExerciseDataPet(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*MotionDataMapReply, error)
	GetMotionDataPetByTime(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*MotionDataMapReply, error)
}

type exerciseDataClient struct {
	cc *grpc.ClientConn
}

func NewExerciseDataClient(cc *grpc.ClientConn) ExerciseDataClient {
	return &exerciseDataClient{cc}
}

func (c *exerciseDataClient) SetExerciseData(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*ExerciseDataReply, error) {
	out := new(ExerciseDataReply)
	err := c.cc.Invoke(ctx, "/pb.ExerciseData/SetExerciseData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exerciseDataClient) GetExerciseDataPet(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*MotionDataMapReply, error) {
	out := new(MotionDataMapReply)
	err := c.cc.Invoke(ctx, "/pb.ExerciseData/GetExerciseDataPet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exerciseDataClient) GetMotionDataPetByTime(ctx context.Context, in *ExerciseDataRequest, opts ...grpc.CallOption) (*MotionDataMapReply, error) {
	out := new(MotionDataMapReply)
	err := c.cc.Invoke(ctx, "/pb.ExerciseData/GetMotionDataPetByTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExerciseDataServer is the server API for ExerciseData service.
type ExerciseDataServer interface {
	SetExerciseData(context.Context, *ExerciseDataRequest) (*ExerciseDataReply, error)
	GetExerciseDataPet(context.Context, *ExerciseDataRequest) (*MotionDataMapReply, error)
	GetMotionDataPetByTime(context.Context, *ExerciseDataRequest) (*MotionDataMapReply, error)
}

func RegisterExerciseDataServer(s *grpc.Server, srv ExerciseDataServer) {
	s.RegisterService(&_ExerciseData_serviceDesc, srv)
}

func _ExerciseData_SetExerciseData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExerciseDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExerciseDataServer).SetExerciseData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ExerciseData/SetExerciseData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExerciseDataServer).SetExerciseData(ctx, req.(*ExerciseDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExerciseData_GetExerciseDataPet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExerciseDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExerciseDataServer).GetExerciseDataPet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ExerciseData/GetExerciseDataPet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExerciseDataServer).GetExerciseDataPet(ctx, req.(*ExerciseDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExerciseData_GetMotionDataPetByTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExerciseDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExerciseDataServer).GetMotionDataPetByTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ExerciseData/GetMotionDataPetByTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExerciseDataServer).GetMotionDataPetByTime(ctx, req.(*ExerciseDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExerciseData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ExerciseData",
	HandlerType: (*ExerciseDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetExerciseData",
			Handler:    _ExerciseData_SetExerciseData_Handler,
		},
		{
			MethodName: "GetExerciseDataPet",
			Handler:    _ExerciseData_GetExerciseDataPet_Handler,
		},
		{
			MethodName: "GetMotionDataPetByTime",
			Handler:    _ExerciseData_GetMotionDataPetByTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/exercisedata.proto",
}

func init() { proto.RegisterFile("pb/exercisedata.proto", fileDescriptor_exercisedata_48933d9010c30143) }

var fileDescriptor_exercisedata_48933d9010c30143 = []byte{
	// 851 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0xae, 0xed, 0x38, 0x89, 0x8f, 0x73, 0xd3, 0x30, 0xf4, 0xf6, 0x9a, 0x0a, 0x41, 0x64, 0x10,
	0x8a, 0x0a, 0x2a, 0x28, 0x15, 0x52, 0xd7, 0x24, 0x55, 0x55, 0x41, 0xa5, 0x6a, 0xda, 0x3d, 0x9a,
	0xd8, 0xd3, 0x76, 0x24, 0xc7, 0x63, 0xec, 0xb1, 0x4a, 0x10, 0x2b, 0x9e, 0x81, 0x05, 0x6f, 0xc0,
	0xf3, 0xb0, 0x62, 0xcf, 0x8e, 0xb7, 0x40, 0x67, 0xc6, 0x89, 0x9d, 0x9f, 0x56, 0xad, 0x84, 0xee,
	0xee, 0xfc, 0x7c, 0x9e, 0xf3, 0xf3, 0x9d, 0x73, 0x12, 0x78, 0x9b, 0xcd, 0xbe, 0xe6, 0x3f, 0xf3,
	0x3c, 0x12, 0x05, 0x8f, 0x99, 0x62, 0x27, 0x59, 0x2e, 0x95, 0x24, 0x76, 0x36, 0x0b, 0xff, 0xb6,
	0xe1, 0xc3, 0xf3, 0xca, 0x35, 0x65, 0x8a, 0x51, 0xfe, 0x53, 0xc9, 0x0b, 0x45, 0x0e, 0xa1, 0x5d,
	0xc8, 0x32, 0x8f, 0x78, 0x60, 0x0d, 0xad, 0x91, 0x47, 0x2b, 0x8d, 0x0c, 0xc0, 0x29, 0x45, 0x1c,
	0xd8, 0x43, 0x6b, 0xe4, 0x52, 0x14, 0x09, 0x81, 0x56, 0x19, 0x8b, 0x38, 0x70, 0xb4, 0x49, 0xcb,
	0x88, 0xca, 0x44, 0x1c, 0xb4, 0x0c, 0x2a, 0x33, 0xa8, 0x0c, 0x51, 0xae, 0x41, 0xa1, 0x4c, 0x0e,
	0xc0, 0x2d, 0x23, 0x96, 0x14, 0x41, 0x7b, 0x68, 0x8d, 0x6c, 0x6a, 0x14, 0x8c, 0x5c, 0x16, 0x8a,
	0x67, 0x45, 0xd0, 0xd1, 0xd8, 0x4a, 0x43, 0x74, 0xa6, 0xd1, 0x5d, 0x83, 0xd6, 0x0a, 0x39, 0x85,
	0x5e, 0x16, 0x49, 0x99, 0xc7, 0x22, 0x65, 0x8a, 0x17, 0x81, 0x37, 0x74, 0x46, 0xfe, 0x78, 0xff,
	0x24, 0x9b, 0x9d, 0x5c, 0xd7, 0x76, 0xba, 0x06, 0x22, 0x1f, 0x83, 0x57, 0x28, 0x96, 0xab, 0x5b,
	0x31, 0xe7, 0x01, 0x0c, 0xad, 0x91, 0x43, 0x6b, 0x03, 0x09, 0xa0, 0xc3, 0xd3, 0x58, 0xfb, 0x7c,
	0xed, 0x5b, 0xaa, 0xe4, 0x4b, 0xf0, 0xc4, 0x9c, 0xdd, 0xf3, 0xcb, 0xf4, 0x4e, 0x06, 0xbd, 0xa1,
	0x35, 0xf2, 0xc7, 0x6f, 0x30, 0xd2, 0xe5, 0xd2, 0x48, 0x6b, 0x7f, 0xf8, 0x87, 0x05, 0x7e, 0x23,
	0x05, 0x0c, 0x9a, 0xc8, 0xf4, 0x5e, 0xa8, 0x32, 0x36, 0x4d, 0xb5, 0x69, 0x6d, 0x20, 0x47, 0xd0,
	0x4d, 0x98, 0x32, 0x4e, 0x5b, 0x3b, 0x57, 0x3a, 0x26, 0x94, 0xca, 0x47, 0x85, 0x09, 0x39, 0x26,
	0xa1, 0x4a, 0xc5, 0x9e, 0x98, 0x56, 0x99, 0x4e, 0x1b, 0x85, 0x7c, 0x8a, 0x56, 0xa6, 0xb8, 0x6e,
	0x76, 0x7f, 0xec, 0x61, 0x8a, 0x37, 0x68, 0xa0, 0xc6, 0x1e, 0xfe, 0x63, 0xc1, 0x07, 0xeb, 0xa4,
	0x67, 0xc9, 0xe2, 0x15, 0x94, 0x57, 0xf4, 0x3a, 0xdb, 0xf4, 0xb6, 0xd6, 0xe9, 0x35, 0x84, 0xb9,
	0xcf, 0x11, 0xd6, 0x7e, 0x09, 0x61, 0x04, 0x5a, 0x91, 0x8c, 0x79, 0x35, 0x11, 0x5a, 0x26, 0x9f,
	0x00, 0x44, 0x39, 0x67, 0x8a, 0x6b, 0xa6, 0xba, 0xba, 0x31, 0x0d, 0x4b, 0xf8, 0x2b, 0x90, 0x2b,
	0xa9, 0x84, 0x4c, 0xb1, 0xc2, 0x2b, 0x96, 0x99, 0x22, 0xbf, 0x82, 0x16, 0x6e, 0x40, 0x60, 0xe9,
	0xb0, 0x01, 0x86, 0x9d, 0xb2, 0xc5, 0x56, 0x33, 0xa8, 0x46, 0xad, 0xe2, 0xda, 0x8d, 0xb8, 0x2f,
	0x2a, 0x3e, 0xfc, 0xdd, 0x81, 0x83, 0x5d, 0x0f, 0x23, 0x99, 0x31, 0x5b, 0xe8, 0x9c, 0x2d, 0x43,
	0x66, 0xa5, 0x92, 0x21, 0xf8, 0x11, 0xcb, 0x63, 0x21, 0x51, 0x2b, 0x74, 0x4c, 0x87, 0x36, 0x4d,
	0xe4, 0x0b, 0xe8, 0x17, 0x2a, 0xe7, 0x69, 0x29, 0xcb, 0xc2, 0x80, 0xcc, 0x3c, 0x6c, 0x58, 0x31,
	0x46, 0xc4, 0x12, 0x99, 0x0b, 0xae, 0x73, 0xb2, 0xe9, 0x52, 0xad, 0x07, 0xc6, 0x6d, 0x0e, 0xcc,
	0x37, 0xe0, 0x6f, 0x53, 0xd2, 0xc7, 0xde, 0x4c, 0x6a, 0x46, 0x9a, 0x10, 0xf2, 0x39, 0x74, 0x72,
	0x1e, 0xc9, 0x3c, 0xc6, 0x2d, 0x45, 0x34, 0x20, 0x9a, 0x6a, 0x13, 0x5d, 0xba, 0x48, 0x08, 0xae,
	0x5a, 0x64, 0xdc, 0xac, 0x6c, 0x7f, 0xdc, 0x33, 0xdd, 0x56, 0xec, 0x76, 0x91, 0x71, 0x6a, 0x5c,
	0x64, 0x0c, 0x07, 0x13, 0x5d, 0xe2, 0xb4, 0xcc, 0x19, 0xd2, 0x75, 0x25, 0xd2, 0x52, 0xf1, 0xc0,
	0xd3, 0x09, 0xee, 0xf4, 0x91, 0x33, 0x78, 0x77, 0xb3, 0xac, 0x78, 0xe3, 0x33, 0xd0, 0x9f, 0x3d,
	0xe5, 0x0e, 0x7f, 0xb3, 0x00, 0x26, 0xff, 0xc7, 0x4e, 0x7e, 0x04, 0xdd, 0x54, 0x3e, 0xfe, 0xb8,
	0xb1, 0x94, 0x9a, 0xc7, 0xd5, 0xfa, 0xb5, 0x9e, 0x58, 0xbf, 0xbf, 0x6c, 0x68, 0x9b, 0x56, 0xe1,
	0x10, 0xe3, 0x13, 0x46, 0xab, 0xf6, 0xae, 0x61, 0xa9, 0xf9, 0xb2, 0x9b, 0x7c, 0x35, 0xf8, 0x75,
	0xd6, 0xf9, 0xdd, 0x98, 0xa1, 0xd6, 0x4b, 0x66, 0xc8, 0xdd, 0x39, 0x43, 0x6b, 0xb7, 0xae, 0xfd,
	0xfc, 0xad, 0x5b, 0x6d, 0x40, 0xa7, 0xb1, 0xfe, 0xef, 0x97, 0xd8, 0x3f, 0x2d, 0xf0, 0x56, 0xa9,
	0xe9, 0x93, 0x95, 0x27, 0x55, 0x3f, 0x51, 0xc4, 0x0c, 0x0b, 0xf1, 0xcb, 0x6a, 0x93, 0x51, 0xc6,
	0xe6, 0x3e, 0x8a, 0x58, 0x3d, 0x54, 0xbb, 0x6c, 0x14, 0x3c, 0x83, 0x0f, 0x5c, 0xdc, 0x3f, 0xa8,
	0x6a, 0x9f, 0x2b, 0x0d, 0xdf, 0x9c, 0xc7, 0xdf, 0xea, 0x6e, 0x79, 0x14, 0x45, 0x6c, 0xb6, 0x6e,
	0xc1, 0x79, 0x3a, 0xc1, 0x23, 0xd1, 0xd6, 0x9e, 0xa6, 0x09, 0xa3, 0xa6, 0x6c, 0x6e, 0xee, 0x96,
	0x47, 0xb5, 0x7c, 0xfc, 0x19, 0xb8, 0x7a, 0x1a, 0x88, 0x0f, 0x9d, 0x29, 0xbf, 0x63, 0x65, 0xa2,
	0x06, 0x7b, 0xe4, 0x0d, 0x78, 0xab, 0xd2, 0x06, 0xd6, 0xf1, 0x19, 0x74, 0x97, 0x8b, 0x42, 0xf6,
	0xc1, 0x47, 0xb9, 0xc6, 0xf6, 0x8c, 0xf3, 0x07, 0x51, 0xa8, 0x81, 0x85, 0x5f, 0xa2, 0xa6, 0x8b,
	0x1f, 0xd8, 0xe3, 0x7f, 0x2d, 0xe8, 0x35, 0xaf, 0x0e, 0x99, 0xc0, 0xfe, 0x0d, 0x57, 0x6b, 0xa6,
	0x77, 0x48, 0xe4, 0x8e, 0x5f, 0xfd, 0xa3, 0xb7, 0xdb, 0x8e, 0x2c, 0x59, 0x84, 0x7b, 0xe4, 0x02,
	0xc8, 0xc5, 0xfa, 0x23, 0xd7, 0x5c, 0x3d, 0xfd, 0xce, 0x21, 0x3a, 0xb6, 0xaf, 0x6f, 0xb8, 0x47,
	0xbe, 0x87, 0xc3, 0x0b, 0xae, 0x6a, 0xd7, 0x35, 0x57, 0xdf, 0x99, 0xf3, 0xf7, 0xfa, 0xc7, 0x66,
	0x6d, 0xfd, 0x3f, 0xe6, 0xf4, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0x64, 0x73, 0xfe, 0xe0,
	0x08, 0x00, 0x00,
}
