// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/files.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FilesRequest struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Md5                  string   `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	Describe             string   `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	ContactUs            string   `protobuf:"bytes,5,opt,name=contactUs,proto3" json:"contactUs,omitempty"`
	Types                int32    `protobuf:"varint,6,opt,name=types,proto3" json:"types,omitempty"`
	Source               string   `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Times                int64    `protobuf:"varint,8,opt,name=times,proto3" json:"times,omitempty"`
	Id                   int32    `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Number               int32    `protobuf:"varint,10,opt,name=number,proto3" json:"number,omitempty"`
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesRequest) Reset()         { *m = FilesRequest{} }
func (m *FilesRequest) String() string { return proto.CompactTextString(m) }
func (*FilesRequest) ProtoMessage()    {}
func (*FilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_files_0af4bc11718f464f, []int{0}
}
func (m *FilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesRequest.Unmarshal(m, b)
}
func (m *FilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesRequest.Marshal(b, m, deterministic)
}
func (dst *FilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesRequest.Merge(dst, src)
}
func (m *FilesRequest) XXX_Size() int {
	return xxx_messageInfo_FilesRequest.Size(m)
}
func (m *FilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilesRequest proto.InternalMessageInfo

func (m *FilesRequest) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FilesRequest) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *FilesRequest) GetDescribe() string {
	if m != nil {
		return m.Describe
	}
	return ""
}

func (m *FilesRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *FilesRequest) GetContactUs() string {
	if m != nil {
		return m.ContactUs
	}
	return ""
}

func (m *FilesRequest) GetTypes() int32 {
	if m != nil {
		return m.Types
	}
	return 0
}

func (m *FilesRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FilesRequest) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *FilesRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FilesRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *FilesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FilesReply struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Md5                  string   `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	Describe             string   `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	ContactUs            string   `protobuf:"bytes,5,opt,name=contactUs,proto3" json:"contactUs,omitempty"`
	Types                int32    `protobuf:"varint,6,opt,name=types,proto3" json:"types,omitempty"`
	Source               string   `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Code                 int32    `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`
	Times                int64    `protobuf:"varint,9,opt,name=times,proto3" json:"times,omitempty"`
	Id                   int32    `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Number               int32    `protobuf:"varint,11,opt,name=number,proto3" json:"number,omitempty"`
	NameCh               string   `protobuf:"bytes,12,opt,name=nameCh,proto3" json:"nameCh,omitempty"`
	NameEn               string   `protobuf:"bytes,13,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	Name                 string   `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesReply) Reset()         { *m = FilesReply{} }
func (m *FilesReply) String() string { return proto.CompactTextString(m) }
func (*FilesReply) ProtoMessage()    {}
func (*FilesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_files_0af4bc11718f464f, []int{1}
}
func (m *FilesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesReply.Unmarshal(m, b)
}
func (m *FilesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesReply.Marshal(b, m, deterministic)
}
func (dst *FilesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesReply.Merge(dst, src)
}
func (m *FilesReply) XXX_Size() int {
	return xxx_messageInfo_FilesReply.Size(m)
}
func (m *FilesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesReply.DiscardUnknown(m)
}

var xxx_messageInfo_FilesReply proto.InternalMessageInfo

func (m *FilesReply) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FilesReply) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *FilesReply) GetDescribe() string {
	if m != nil {
		return m.Describe
	}
	return ""
}

func (m *FilesReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *FilesReply) GetContactUs() string {
	if m != nil {
		return m.ContactUs
	}
	return ""
}

func (m *FilesReply) GetTypes() int32 {
	if m != nil {
		return m.Types
	}
	return 0
}

func (m *FilesReply) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *FilesReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilesReply) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *FilesReply) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FilesReply) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *FilesReply) GetNameCh() string {
	if m != nil {
		return m.NameCh
	}
	return ""
}

func (m *FilesReply) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *FilesReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FilesMapRequest struct {
	Files                []*FilesRequest `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Source               string          `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FilesMapRequest) Reset()         { *m = FilesMapRequest{} }
func (m *FilesMapRequest) String() string { return proto.CompactTextString(m) }
func (*FilesMapRequest) ProtoMessage()    {}
func (*FilesMapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_files_0af4bc11718f464f, []int{2}
}
func (m *FilesMapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesMapRequest.Unmarshal(m, b)
}
func (m *FilesMapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesMapRequest.Marshal(b, m, deterministic)
}
func (dst *FilesMapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesMapRequest.Merge(dst, src)
}
func (m *FilesMapRequest) XXX_Size() int {
	return xxx_messageInfo_FilesMapRequest.Size(m)
}
func (m *FilesMapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesMapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilesMapRequest proto.InternalMessageInfo

func (m *FilesMapRequest) GetFiles() []*FilesRequest {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *FilesMapRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type FilesMapReply struct {
	Files                map[int32]*FilesReply `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code                 int32                 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FilesMapReply) Reset()         { *m = FilesMapReply{} }
func (m *FilesMapReply) String() string { return proto.CompactTextString(m) }
func (*FilesMapReply) ProtoMessage()    {}
func (*FilesMapReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_files_0af4bc11718f464f, []int{3}
}
func (m *FilesMapReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesMapReply.Unmarshal(m, b)
}
func (m *FilesMapReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesMapReply.Marshal(b, m, deterministic)
}
func (dst *FilesMapReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesMapReply.Merge(dst, src)
}
func (m *FilesMapReply) XXX_Size() int {
	return xxx_messageInfo_FilesMapReply.Size(m)
}
func (m *FilesMapReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesMapReply.DiscardUnknown(m)
}

var xxx_messageInfo_FilesMapReply proto.InternalMessageInfo

func (m *FilesMapReply) GetFiles() map[int32]*FilesReply {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *FilesMapReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*FilesRequest)(nil), "pb.FilesRequest")
	proto.RegisterType((*FilesReply)(nil), "pb.FilesReply")
	proto.RegisterType((*FilesMapRequest)(nil), "pb.FilesMapRequest")
	proto.RegisterType((*FilesMapReply)(nil), "pb.FilesMapReply")
	proto.RegisterMapType((map[int32]*FilesReply)(nil), "pb.FilesMapReply.FilesEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FilesClient is the client API for Files service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilesClient interface {
	SetFile(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesReply, error)
	GetFile(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesReply, error)
	SetFiles(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error)
	GetFiles(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error)
	SetBreeds(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error)
	GetBreeds(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesMapReply, error)
}

type filesClient struct {
	cc *grpc.ClientConn
}

func NewFilesClient(cc *grpc.ClientConn) FilesClient {
	return &filesClient{cc}
}

func (c *filesClient) SetFile(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesReply, error) {
	out := new(FilesReply)
	err := c.cc.Invoke(ctx, "/pb.Files/SetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesClient) GetFile(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesReply, error) {
	out := new(FilesReply)
	err := c.cc.Invoke(ctx, "/pb.Files/GetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesClient) SetFiles(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error) {
	out := new(FilesMapReply)
	err := c.cc.Invoke(ctx, "/pb.Files/SetFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesClient) GetFiles(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error) {
	out := new(FilesMapReply)
	err := c.cc.Invoke(ctx, "/pb.Files/GetFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesClient) SetBreeds(ctx context.Context, in *FilesMapRequest, opts ...grpc.CallOption) (*FilesMapReply, error) {
	out := new(FilesMapReply)
	err := c.cc.Invoke(ctx, "/pb.Files/SetBreeds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesClient) GetBreeds(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesMapReply, error) {
	out := new(FilesMapReply)
	err := c.cc.Invoke(ctx, "/pb.Files/GetBreeds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilesServer is the server API for Files service.
type FilesServer interface {
	SetFile(context.Context, *FilesRequest) (*FilesReply, error)
	GetFile(context.Context, *FilesRequest) (*FilesReply, error)
	SetFiles(context.Context, *FilesMapRequest) (*FilesMapReply, error)
	GetFiles(context.Context, *FilesMapRequest) (*FilesMapReply, error)
	SetBreeds(context.Context, *FilesMapRequest) (*FilesMapReply, error)
	GetBreeds(context.Context, *FilesRequest) (*FilesMapReply, error)
}

func RegisterFilesServer(s *grpc.Server, srv FilesServer) {
	s.RegisterService(&_Files_serviceDesc, srv)
}

func _Files_SetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).SetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/SetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).SetFile(ctx, req.(*FilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Files_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).GetFile(ctx, req.(*FilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Files_SetFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).SetFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/SetFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).SetFiles(ctx, req.(*FilesMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Files_GetFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).GetFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/GetFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).GetFiles(ctx, req.(*FilesMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Files_SetBreeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).SetBreeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/SetBreeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).SetBreeds(ctx, req.(*FilesMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Files_GetBreeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServer).GetBreeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Files/GetBreeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServer).GetBreeds(ctx, req.(*FilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Files_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Files",
	HandlerType: (*FilesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetFile",
			Handler:    _Files_SetFile_Handler,
		},
		{
			MethodName: "GetFile",
			Handler:    _Files_GetFile_Handler,
		},
		{
			MethodName: "SetFiles",
			Handler:    _Files_SetFiles_Handler,
		},
		{
			MethodName: "GetFiles",
			Handler:    _Files_GetFiles_Handler,
		},
		{
			MethodName: "SetBreeds",
			Handler:    _Files_SetBreeds_Handler,
		},
		{
			MethodName: "GetBreeds",
			Handler:    _Files_GetBreeds_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/files.proto",
}

func init() { proto.RegisterFile("pb/files.proto", fileDescriptor_files_0af4bc11718f464f) }

var fileDescriptor_files_0af4bc11718f464f = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0x4b, 0x8e, 0xd3, 0x40,
	0x10, 0xc5, 0x9d, 0x38, 0x89, 0x2b, 0x33, 0x61, 0x68, 0x10, 0x6a, 0x45, 0xb3, 0x88, 0x22, 0x84,
	0xb2, 0x21, 0x48, 0x86, 0x91, 0x10, 0x4b, 0x50, 0x08, 0x1b, 0x16, 0x78, 0xc4, 0x01, 0x6c, 0x77,
	0x21, 0xac, 0x89, 0x3f, 0xb8, 0xdb, 0x48, 0xbe, 0x00, 0xf7, 0xe0, 0x1e, 0x1c, 0x80, 0x63, 0xa1,
	0xae, 0xb6, 0x63, 0x07, 0xcf, 0x26, 0x4b, 0x76, 0xf5, 0x5e, 0xd5, 0x7b, 0x4e, 0xbd, 0x6a, 0x05,
	0x16, 0x45, 0xf4, 0xf2, 0x6b, 0x72, 0x40, 0xb5, 0x2d, 0xca, 0x5c, 0xe7, 0x9c, 0x15, 0xd1, 0xfa,
	0x27, 0x83, 0x8b, 0x0f, 0x86, 0x0b, 0xf0, 0x7b, 0x85, 0x4a, 0xf3, 0x2b, 0x18, 0x55, 0x89, 0x14,
	0xce, 0xca, 0xd9, 0xb8, 0x81, 0x29, 0x0d, 0x93, 0xca, 0x1b, 0xc1, 0x56, 0xce, 0xc6, 0x0b, 0x4c,
	0xc9, 0x97, 0x30, 0x93, 0xa8, 0xe2, 0x32, 0x89, 0x50, 0x8c, 0x88, 0x3e, 0x62, 0x2e, 0x60, 0x1a,
	0x4a, 0x59, 0xa2, 0x52, 0x62, 0x4c, 0xad, 0x16, 0xf2, 0x6b, 0xf0, 0xe2, 0x3c, 0xd3, 0x61, 0xac,
	0xbf, 0x28, 0xe1, 0x52, 0xaf, 0x23, 0xf8, 0x13, 0x70, 0x75, 0x5d, 0xa0, 0x12, 0x13, 0xfa, 0xb2,
	0x05, 0xfc, 0x29, 0x4c, 0x54, 0x5e, 0x95, 0x31, 0x8a, 0x29, 0x09, 0x1a, 0x44, 0xd3, 0x49, 0x8a,
	0x4a, 0xcc, 0x56, 0xce, 0x66, 0x14, 0x58, 0xc0, 0x17, 0xc0, 0x12, 0x29, 0x3c, 0x32, 0x60, 0x89,
	0x34, 0xea, 0xac, 0x4a, 0x23, 0x2c, 0x05, 0x10, 0xd7, 0x20, 0xce, 0x61, 0x9c, 0x85, 0x29, 0x8a,
	0x39, 0x79, 0x52, 0xbd, 0xfe, 0xc3, 0x00, 0x9a, 0x20, 0x8a, 0x43, 0xfd, 0x9f, 0xc4, 0xc0, 0x61,
	0x1c, 0xe7, 0x12, 0x29, 0x05, 0x37, 0xa0, 0xba, 0x8b, 0xc6, 0x1b, 0x46, 0x03, 0xf7, 0x44, 0x33,
	0x3f, 0x89, 0xc6, 0xf0, 0x61, 0x8a, 0xef, 0xbf, 0x89, 0x0b, 0xfb, 0x25, 0x8b, 0x5a, 0x7e, 0x97,
	0x89, 0xcb, 0x8e, 0xdf, 0x65, 0xc7, 0x28, 0x17, 0xbd, 0x28, 0x3f, 0xc3, 0x43, 0x4a, 0xf2, 0x53,
	0x58, 0xb4, 0xaf, 0xea, 0x39, 0xb8, 0xf4, 0xf2, 0x84, 0xb3, 0x1a, 0x6d, 0xe6, 0xfe, 0xd5, 0xb6,
	0x88, 0xb6, 0xfd, 0x67, 0x17, 0xd8, 0x76, 0x6f, 0x51, 0xd6, 0x5f, 0x74, 0xfd, 0xcb, 0x81, 0xcb,
	0xce, 0xd3, 0x1c, 0xc8, 0x3f, 0x75, 0xbc, 0x3e, 0x3a, 0xb6, 0x13, 0x16, 0xed, 0x32, 0x5d, 0xd6,
	0xad, 0x7b, 0x1b, 0x17, 0xeb, 0xe2, 0x5a, 0x7e, 0x6c, 0xce, 0x4e, 0x83, 0xe6, 0xc8, 0x77, 0x58,
	0xb7, 0x67, 0xbf, 0xc3, 0x9a, 0x3f, 0x03, 0xf7, 0x47, 0x78, 0xa8, 0xac, 0x68, 0xee, 0x2f, 0x7a,
	0xbf, 0xbc, 0x38, 0xd4, 0x81, 0x6d, 0xbe, 0x65, 0x6f, 0x1c, 0xff, 0x37, 0x03, 0x97, 0x3a, 0xfc,
	0x05, 0x4c, 0x6f, 0x51, 0x9b, 0x9a, 0x0f, 0x36, 0x5d, 0xfe, 0xe3, 0xb0, 0x7e, 0x60, 0xc6, 0xf7,
	0x67, 0x8c, 0xbf, 0x86, 0x59, 0xe3, 0xae, 0xf8, 0xe3, 0xd3, 0xb5, 0xad, 0xe4, 0xd1, 0x20, 0x0b,
	0xab, 0xda, 0x9f, 0xaf, 0xba, 0x01, 0xef, 0x16, 0xf5, 0xbb, 0x12, 0x51, 0x9e, 0x23, 0xf3, 0xc1,
	0xdb, 0x1f, 0x65, 0xc3, 0x9d, 0xee, 0xd3, 0x44, 0x13, 0xfa, 0x53, 0x7a, 0xf5, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0xdd, 0xba, 0x2d, 0xa6, 0x04, 0x00, 0x00,
}
