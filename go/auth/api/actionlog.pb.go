// Code generated by protoc-gen-go.
// source: api/actionlog.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ActionLogInfo struct {
	Id             int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ActionUsername string `protobuf:"bytes,2,opt,name=actionUsername" json:"actionUsername,omitempty"`
	ActionTime     int64  `protobuf:"varint,3,opt,name=actionTime" json:"actionTime,omitempty"`
	ActionType     int32  `protobuf:"varint,4,opt,name=actionType" json:"actionType,omitempty"`
	ActionName     string `protobuf:"bytes,5,opt,name=actionName" json:"actionName,omitempty"`
	ActionObject   string `protobuf:"bytes,6,opt,name=actionObject" json:"actionObject,omitempty"`
	Tid            int32  `protobuf:"varint,7,opt,name=tid" json:"tid,omitempty"`
	Did            int32  `protobuf:"varint,8,opt,name=did" json:"did,omitempty"`
}

func (m *ActionLogInfo) Reset()                    { *m = ActionLogInfo{} }
func (m *ActionLogInfo) String() string            { return proto.CompactTextString(m) }
func (*ActionLogInfo) ProtoMessage()               {}
func (*ActionLogInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *ActionLogInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActionLogInfo) GetActionUsername() string {
	if m != nil {
		return m.ActionUsername
	}
	return ""
}

func (m *ActionLogInfo) GetActionTime() int64 {
	if m != nil {
		return m.ActionTime
	}
	return 0
}

func (m *ActionLogInfo) GetActionType() int32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ActionLogInfo) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ActionLogInfo) GetActionObject() string {
	if m != nil {
		return m.ActionObject
	}
	return ""
}

func (m *ActionLogInfo) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ActionLogInfo) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type AddActionLogRequest struct {
	ActionLog *ActionLogInfo `protobuf:"bytes,1,opt,name=actionLog" json:"actionLog,omitempty"`
}

func (m *AddActionLogRequest) Reset()                    { *m = AddActionLogRequest{} }
func (m *AddActionLogRequest) String() string            { return proto.CompactTextString(m) }
func (*AddActionLogRequest) ProtoMessage()               {}
func (*AddActionLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *AddActionLogRequest) GetActionLog() *ActionLogInfo {
	if m != nil {
		return m.ActionLog
	}
	return nil
}

type AddActionLogResponse struct {
}

func (m *AddActionLogResponse) Reset()                    { *m = AddActionLogResponse{} }
func (m *AddActionLogResponse) String() string            { return proto.CompactTextString(m) }
func (*AddActionLogResponse) ProtoMessage()               {}
func (*AddActionLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

type GetActionLogsByTypeRequest struct {
	Type  int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count int32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetActionLogsByTypeRequest) Reset()                    { *m = GetActionLogsByTypeRequest{} }
func (m *GetActionLogsByTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByTypeRequest) ProtoMessage()               {}
func (*GetActionLogsByTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *GetActionLogsByTypeRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetActionLogsByTypeRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsByTypeRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetActionLogsByTypeResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsByTypeResponse) Reset()                    { *m = GetActionLogsByTypeResponse{} }
func (m *GetActionLogsByTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByTypeResponse) ProtoMessage()               {}
func (*GetActionLogsByTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *GetActionLogsByTypeResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsByTypeResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetActionLogsByUsernameRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count    int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetActionLogsByUsernameRequest) Reset()                    { *m = GetActionLogsByUsernameRequest{} }
func (m *GetActionLogsByUsernameRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByUsernameRequest) ProtoMessage()               {}
func (*GetActionLogsByUsernameRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *GetActionLogsByUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetActionLogsByUsernameRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsByUsernameRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetActionLogsByUsernameResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsByUsernameResponse) Reset()                    { *m = GetActionLogsByUsernameResponse{} }
func (m *GetActionLogsByUsernameResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByUsernameResponse) ProtoMessage()               {}
func (*GetActionLogsByUsernameResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func (m *GetActionLogsByUsernameResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsByUsernameResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetActionLogsByRoleRequest struct {
	Role  int32 `protobuf:"varint,1,opt,name=role" json:"role,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count int32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetActionLogsByRoleRequest) Reset()                    { *m = GetActionLogsByRoleRequest{} }
func (m *GetActionLogsByRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByRoleRequest) ProtoMessage()               {}
func (*GetActionLogsByRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *GetActionLogsByRoleRequest) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *GetActionLogsByRoleRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsByRoleRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetActionLogsByRoleResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsByRoleResponse) Reset()                    { *m = GetActionLogsByRoleResponse{} }
func (m *GetActionLogsByRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByRoleResponse) ProtoMessage()               {}
func (*GetActionLogsByRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *GetActionLogsByRoleResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsByRoleResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetActionLogsRequest struct {
	Page     int32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Count    int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Type     int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Tid      int32  `protobuf:"varint,5,opt,name=tid" json:"tid,omitempty"`
	Did      int32  `protobuf:"varint,6,opt,name=did" json:"did,omitempty"`
}

func (m *GetActionLogsRequest) Reset()                    { *m = GetActionLogsRequest{} }
func (m *GetActionLogsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsRequest) ProtoMessage()               {}
func (*GetActionLogsRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *GetActionLogsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetActionLogsRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetActionLogsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetActionLogsRequest) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetActionLogsRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type GetActionLogsResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsResponse) Reset()                    { *m = GetActionLogsResponse{} }
func (m *GetActionLogsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsResponse) ProtoMessage()               {}
func (*GetActionLogsResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *GetActionLogsResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetActionLogsByTidRequest struct {
	Page     int32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Count    int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Type     int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Tid      int32  `protobuf:"varint,5,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetActionLogsByTidRequest) Reset()                    { *m = GetActionLogsByTidRequest{} }
func (m *GetActionLogsByTidRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByTidRequest) ProtoMessage()               {}
func (*GetActionLogsByTidRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

func (m *GetActionLogsByTidRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsByTidRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetActionLogsByTidRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetActionLogsByTidRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetActionLogsByTidRequest) GetTid() int32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetActionLogsByTidResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsByTidResponse) Reset()                    { *m = GetActionLogsByTidResponse{} }
func (m *GetActionLogsByTidResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByTidResponse) ProtoMessage()               {}
func (*GetActionLogsByTidResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *GetActionLogsByTidResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsByTidResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetActionLogsByDidRequest struct {
	Page     int32  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	Count    int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Type     int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Did      int32  `protobuf:"varint,5,opt,name=did" json:"did,omitempty"`
}

func (m *GetActionLogsByDidRequest) Reset()                    { *m = GetActionLogsByDidRequest{} }
func (m *GetActionLogsByDidRequest) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByDidRequest) ProtoMessage()               {}
func (*GetActionLogsByDidRequest) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

func (m *GetActionLogsByDidRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetActionLogsByDidRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetActionLogsByDidRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetActionLogsByDidRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetActionLogsByDidRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type GetActionLogsByDidResponse struct {
	ActionLogs []*ActionLogInfo `protobuf:"bytes,1,rep,name=actionLogs" json:"actionLogs,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *GetActionLogsByDidResponse) Reset()                    { *m = GetActionLogsByDidResponse{} }
func (m *GetActionLogsByDidResponse) String() string            { return proto.CompactTextString(m) }
func (*GetActionLogsByDidResponse) ProtoMessage()               {}
func (*GetActionLogsByDidResponse) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *GetActionLogsByDidResponse) GetActionLogs() []*ActionLogInfo {
	if m != nil {
		return m.ActionLogs
	}
	return nil
}

func (m *GetActionLogsByDidResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*ActionLogInfo)(nil), "api.ActionLogInfo")
	proto.RegisterType((*AddActionLogRequest)(nil), "api.AddActionLogRequest")
	proto.RegisterType((*AddActionLogResponse)(nil), "api.AddActionLogResponse")
	proto.RegisterType((*GetActionLogsByTypeRequest)(nil), "api.GetActionLogsByTypeRequest")
	proto.RegisterType((*GetActionLogsByTypeResponse)(nil), "api.GetActionLogsByTypeResponse")
	proto.RegisterType((*GetActionLogsByUsernameRequest)(nil), "api.GetActionLogsByUsernameRequest")
	proto.RegisterType((*GetActionLogsByUsernameResponse)(nil), "api.GetActionLogsByUsernameResponse")
	proto.RegisterType((*GetActionLogsByRoleRequest)(nil), "api.GetActionLogsByRoleRequest")
	proto.RegisterType((*GetActionLogsByRoleResponse)(nil), "api.GetActionLogsByRoleResponse")
	proto.RegisterType((*GetActionLogsRequest)(nil), "api.GetActionLogsRequest")
	proto.RegisterType((*GetActionLogsResponse)(nil), "api.GetActionLogsResponse")
	proto.RegisterType((*GetActionLogsByTidRequest)(nil), "api.GetActionLogsByTidRequest")
	proto.RegisterType((*GetActionLogsByTidResponse)(nil), "api.GetActionLogsByTidResponse")
	proto.RegisterType((*GetActionLogsByDidRequest)(nil), "api.GetActionLogsByDidRequest")
	proto.RegisterType((*GetActionLogsByDidResponse)(nil), "api.GetActionLogsByDidResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ActionLog service

type ActionLogClient interface {
	AddActionLog(ctx context.Context, in *AddActionLogRequest, opts ...grpc.CallOption) (*AddActionLogResponse, error)
	GetActionLogsByType(ctx context.Context, in *GetActionLogsByTypeRequest, opts ...grpc.CallOption) (*GetActionLogsByTypeResponse, error)
	GetActionLogsByUsername(ctx context.Context, in *GetActionLogsByUsernameRequest, opts ...grpc.CallOption) (*GetActionLogsByUsernameResponse, error)
	GetActionLogs(ctx context.Context, in *GetActionLogsRequest, opts ...grpc.CallOption) (*GetActionLogsResponse, error)
	GetActionLogsByTid(ctx context.Context, in *GetActionLogsByTidRequest, opts ...grpc.CallOption) (*GetActionLogsByTidResponse, error)
	GetActionLogsByDid(ctx context.Context, in *GetActionLogsByDidRequest, opts ...grpc.CallOption) (*GetActionLogsByDidResponse, error)
}

type actionLogClient struct {
	cc *grpc.ClientConn
}

func NewActionLogClient(cc *grpc.ClientConn) ActionLogClient {
	return &actionLogClient{cc}
}

func (c *actionLogClient) AddActionLog(ctx context.Context, in *AddActionLogRequest, opts ...grpc.CallOption) (*AddActionLogResponse, error) {
	out := new(AddActionLogResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/AddActionLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionLogClient) GetActionLogsByType(ctx context.Context, in *GetActionLogsByTypeRequest, opts ...grpc.CallOption) (*GetActionLogsByTypeResponse, error) {
	out := new(GetActionLogsByTypeResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/GetActionLogsByType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionLogClient) GetActionLogsByUsername(ctx context.Context, in *GetActionLogsByUsernameRequest, opts ...grpc.CallOption) (*GetActionLogsByUsernameResponse, error) {
	out := new(GetActionLogsByUsernameResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/GetActionLogsByUsername", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionLogClient) GetActionLogs(ctx context.Context, in *GetActionLogsRequest, opts ...grpc.CallOption) (*GetActionLogsResponse, error) {
	out := new(GetActionLogsResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/GetActionLogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionLogClient) GetActionLogsByTid(ctx context.Context, in *GetActionLogsByTidRequest, opts ...grpc.CallOption) (*GetActionLogsByTidResponse, error) {
	out := new(GetActionLogsByTidResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/GetActionLogsByTid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionLogClient) GetActionLogsByDid(ctx context.Context, in *GetActionLogsByDidRequest, opts ...grpc.CallOption) (*GetActionLogsByDidResponse, error) {
	out := new(GetActionLogsByDidResponse)
	err := grpc.Invoke(ctx, "/api.ActionLog/GetActionLogsByDid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ActionLog service

type ActionLogServer interface {
	AddActionLog(context.Context, *AddActionLogRequest) (*AddActionLogResponse, error)
	GetActionLogsByType(context.Context, *GetActionLogsByTypeRequest) (*GetActionLogsByTypeResponse, error)
	GetActionLogsByUsername(context.Context, *GetActionLogsByUsernameRequest) (*GetActionLogsByUsernameResponse, error)
	GetActionLogs(context.Context, *GetActionLogsRequest) (*GetActionLogsResponse, error)
	GetActionLogsByTid(context.Context, *GetActionLogsByTidRequest) (*GetActionLogsByTidResponse, error)
	GetActionLogsByDid(context.Context, *GetActionLogsByDidRequest) (*GetActionLogsByDidResponse, error)
}

func RegisterActionLogServer(s *grpc.Server, srv ActionLogServer) {
	s.RegisterService(&_ActionLog_serviceDesc, srv)
}

func _ActionLog_AddActionLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddActionLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).AddActionLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/AddActionLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).AddActionLog(ctx, req.(*AddActionLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionLog_GetActionLogsByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionLogsByTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).GetActionLogsByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/GetActionLogsByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).GetActionLogsByType(ctx, req.(*GetActionLogsByTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionLog_GetActionLogsByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionLogsByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).GetActionLogsByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/GetActionLogsByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).GetActionLogsByUsername(ctx, req.(*GetActionLogsByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionLog_GetActionLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).GetActionLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/GetActionLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).GetActionLogs(ctx, req.(*GetActionLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionLog_GetActionLogsByTid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionLogsByTidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).GetActionLogsByTid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/GetActionLogsByTid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).GetActionLogsByTid(ctx, req.(*GetActionLogsByTidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionLog_GetActionLogsByDid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActionLogsByDidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionLogServer).GetActionLogsByDid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActionLog/GetActionLogsByDid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionLogServer).GetActionLogsByDid(ctx, req.(*GetActionLogsByDidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActionLog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ActionLog",
	HandlerType: (*ActionLogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddActionLog",
			Handler:    _ActionLog_AddActionLog_Handler,
		},
		{
			MethodName: "GetActionLogsByType",
			Handler:    _ActionLog_GetActionLogsByType_Handler,
		},
		{
			MethodName: "GetActionLogsByUsername",
			Handler:    _ActionLog_GetActionLogsByUsername_Handler,
		},
		{
			MethodName: "GetActionLogs",
			Handler:    _ActionLog_GetActionLogs_Handler,
		},
		{
			MethodName: "GetActionLogsByTid",
			Handler:    _ActionLog_GetActionLogsByTid_Handler,
		},
		{
			MethodName: "GetActionLogsByDid",
			Handler:    _ActionLog_GetActionLogsByDid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/actionlog.proto",
}

func init() { proto.RegisterFile("api/actionlog.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x5f, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x4d, 0x53, 0xd6, 0x63, 0x9b, 0xd0, 0xb5, 0x40, 0x1a, 0xa4, 0xb6, 0x0a, 0x08, 0xf5,
	0xa9, 0xa0, 0xf2, 0x09, 0x06, 0x45, 0x03, 0x09, 0x81, 0x14, 0x81, 0x90, 0xf6, 0x96, 0xd5, 0x69,
	0x65, 0xe8, 0xe2, 0xac, 0x71, 0x1f, 0xf6, 0x09, 0x78, 0x47, 0x7c, 0x4f, 0xbe, 0x02, 0xb2, 0xbd,
	0xb8, 0xce, 0xbf, 0x21, 0x84, 0x3a, 0xde, 0x9c, 0xdf, 0x9d, 0x7f, 0x77, 0xbf, 0xbb, 0xf3, 0x29,
	0xd0, 0x8b, 0x52, 0xf6, 0x3c, 0x5a, 0x08, 0xc6, 0x93, 0x35, 0x5f, 0x4d, 0xd3, 0x0d, 0x17, 0x1c,
	0x9d, 0x28, 0x65, 0xc1, 0x2f, 0x02, 0x47, 0x27, 0xca, 0xf0, 0x9e, 0xaf, 0xde, 0x25, 0x4b, 0x8e,
	0xc7, 0xd0, 0x62, 0xd4, 0x23, 0x63, 0x32, 0x71, 0xc3, 0x16, 0xa3, 0xf8, 0x0c, 0x8e, 0xf5, 0xcd,
	0xcf, 0x59, 0xbc, 0x49, 0xa2, 0x8b, 0xd8, 0x6b, 0x8d, 0xc9, 0xa4, 0x1b, 0x96, 0x50, 0x1c, 0x02,
	0x68, 0xe4, 0x13, 0xbb, 0x88, 0x3d, 0x67, 0x4c, 0x26, 0x4e, 0x68, 0x21, 0x96, 0xfd, 0x2a, 0x8d,
	0xbd, 0xb6, 0xe2, 0xb7, 0x90, 0x9d, 0xfd, 0x83, 0x8c, 0xe1, 0xaa, 0x18, 0x16, 0x82, 0x01, 0x1c,
	0xea, 0xaf, 0x8f, 0xe7, 0x5f, 0xe3, 0x85, 0xf0, 0x3a, 0xca, 0xa3, 0x80, 0xe1, 0x7d, 0x70, 0x04,
	0xa3, 0xde, 0x5d, 0x45, 0x2e, 0x8f, 0x12, 0xa1, 0x8c, 0x7a, 0x07, 0x1a, 0xa1, 0x8c, 0x06, 0xa7,
	0xd0, 0x3b, 0xa1, 0xd4, 0x68, 0x0e, 0xe3, 0xcb, 0x6d, 0x9c, 0x09, 0x7c, 0x01, 0xdd, 0x28, 0xc7,
	0x94, 0xfa, 0x7b, 0x33, 0x9c, 0x46, 0x29, 0x9b, 0x16, 0xaa, 0x13, 0xee, 0x9c, 0x82, 0x87, 0xd0,
	0x2f, 0x12, 0x65, 0x29, 0x4f, 0xb2, 0x38, 0x38, 0x03, 0xff, 0x34, 0x16, 0x06, 0xcf, 0x5e, 0x5d,
	0x49, 0x7d, 0x79, 0x1c, 0x84, 0xb6, 0x90, 0x05, 0xd0, 0x05, 0x56, 0x67, 0x89, 0xa5, 0xd1, 0x4a,
	0x17, 0xd6, 0x0d, 0xd5, 0x19, 0xfb, 0xe0, 0x2e, 0xf8, 0x36, 0x11, 0xaa, 0x92, 0x6e, 0xa8, 0x3f,
	0x82, 0x4b, 0x78, 0x5c, 0xcb, 0xad, 0x43, 0xe3, 0x2c, 0xaf, 0xa1, 0xb4, 0x79, 0x64, 0xec, 0x34,
	0xa8, 0xb0, 0xbc, 0x64, 0xdd, 0x05, 0x17, 0xd1, 0xfa, 0xb5, 0x8a, 0xa6, 0x53, 0xb0, 0x90, 0x60,
	0x09, 0xc3, 0x52, 0xc8, 0xbc, 0xe5, 0xb9, 0x24, 0x1f, 0x0e, 0xb6, 0xf9, 0x6c, 0x10, 0xd5, 0x15,
	0xf3, 0xfd, 0x17, 0xd2, 0xb6, 0x30, 0x6a, 0x8c, 0xb3, 0x47, 0x79, 0xd5, 0x6e, 0x85, 0x7c, 0x6d,
	0x77, 0x6b, 0xc3, 0xd7, 0xa6, 0x5b, 0xf2, 0xfc, 0x4f, 0xdd, 0xd2, 0xdc, 0x7b, 0x94, 0xf3, 0x93,
	0x40, 0xbf, 0x10, 0xd3, 0x52, 0xa2, 0xb2, 0x26, 0x75, 0x59, 0xb7, 0xac, 0xac, 0xcd, 0x84, 0x3a,
	0xd6, 0x84, 0xda, 0x2d, 0x6e, 0x97, 0x5a, 0x7c, 0xfd, 0xe8, 0xdc, 0xca, 0xa3, 0xeb, 0xec, 0x1e,
	0xdd, 0x37, 0x78, 0x50, 0xca, 0x6a, 0x8f, 0x35, 0xf8, 0x4e, 0x60, 0x50, 0x7e, 0x25, 0x8c, 0xfe,
	0x87, 0x42, 0x04, 0x69, 0x75, 0x15, 0xc8, 0x44, 0x6e, 0x57, 0xfb, 0xfc, 0x96, 0xb4, 0xd3, 0x9d,
	0x76, 0x5a, 0xab, 0x7d, 0xbe, 0x5f, 0xed, 0xb3, 0x1f, 0x6d, 0xe8, 0x9a, 0xdb, 0xf8, 0x06, 0x0e,
	0xed, 0xf5, 0x8c, 0x9e, 0x66, 0xaf, 0xae, 0x7e, 0x7f, 0x50, 0x63, 0xb9, 0xde, 0xe5, 0x77, 0xf0,
	0x0c, 0x7a, 0x35, 0x1b, 0x17, 0x47, 0xea, 0x4e, 0xf3, 0x9e, 0xf7, 0xc7, 0xcd, 0x0e, 0x86, 0x7b,
	0x09, 0x8f, 0x1a, 0x56, 0x1e, 0x3e, 0xa9, 0xbb, 0x5e, 0x5a, 0xbc, 0xfe, 0xd3, 0x9b, 0x9d, 0x4c,
	0x9c, 0xb7, 0x70, 0x54, 0x70, 0xc2, 0x41, 0xf5, 0x62, 0xce, 0xe9, 0xd7, 0x99, 0x0c, 0xd3, 0x17,
	0xc0, 0xea, 0x40, 0xe3, 0xb0, 0x56, 0xab, 0x19, 0x3b, 0x7f, 0xd4, 0x68, 0xbf, 0x81, 0x78, 0xde,
	0x44, 0x3c, 0xff, 0x03, 0xf1, 0xdc, 0x26, 0x3e, 0xef, 0xa8, 0x9f, 0x9d, 0x97, 0xbf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xa5, 0x9d, 0x69, 0x3d, 0x03, 0x09, 0x00, 0x00,
}
