// Code generated by protoc-gen-go.
// source: api/payment.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AliPay struct {
	Did                int32  `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
	AppId              string `protobuf:"bytes,2,opt,name=AppId" json:"AppId,omitempty"`
	MerchantPrivateKey string `protobuf:"bytes,3,opt,name=MerchantPrivateKey" json:"MerchantPrivateKey,omitempty"`
	Key                string `protobuf:"bytes,4,opt,name=Key" json:"Key,omitempty"`
	CreateTime         int64  `protobuf:"varint,5,opt,name=CreateTime" json:"CreateTime,omitempty"`
	UpdateTime         int64  `protobuf:"varint,6,opt,name=UpdateTime" json:"UpdateTime,omitempty"`
}

func (m *AliPay) Reset()                    { *m = AliPay{} }
func (m *AliPay) String() string            { return proto.CompactTextString(m) }
func (*AliPay) ProtoMessage()               {}
func (*AliPay) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *AliPay) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *AliPay) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AliPay) GetMerchantPrivateKey() string {
	if m != nil {
		return m.MerchantPrivateKey
	}
	return ""
}

func (m *AliPay) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AliPay) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *AliPay) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type WechatPay struct {
	Did        int32  `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
	AppId      string `protobuf:"bytes,2,opt,name=AppId" json:"AppId,omitempty"`
	MchId      string `protobuf:"bytes,3,opt,name=MchId" json:"MchId,omitempty"`
	Key        string `protobuf:"bytes,4,opt,name=Key" json:"Key,omitempty"`
	AppSecret  string `protobuf:"bytes,5,opt,name=AppSecret" json:"AppSecret,omitempty"`
	CreateTime int64  `protobuf:"varint,6,opt,name=CreateTime" json:"CreateTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,7,opt,name=UpdateTime" json:"UpdateTime,omitempty"`
}

func (m *WechatPay) Reset()                    { *m = WechatPay{} }
func (m *WechatPay) String() string            { return proto.CompactTextString(m) }
func (*WechatPay) ProtoMessage()               {}
func (*WechatPay) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *WechatPay) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *WechatPay) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *WechatPay) GetMchId() string {
	if m != nil {
		return m.MchId
	}
	return ""
}

func (m *WechatPay) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WechatPay) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

func (m *WechatPay) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *WechatPay) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type AddAliPayRequest struct {
	AliPay *AliPay `protobuf:"bytes,1,opt,name=aliPay" json:"aliPay,omitempty"`
}

func (m *AddAliPayRequest) Reset()                    { *m = AddAliPayRequest{} }
func (m *AddAliPayRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAliPayRequest) ProtoMessage()               {}
func (*AddAliPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *AddAliPayRequest) GetAliPay() *AliPay {
	if m != nil {
		return m.AliPay
	}
	return nil
}

type AddAliPayResponse struct {
}

func (m *AddAliPayResponse) Reset()                    { *m = AddAliPayResponse{} }
func (m *AddAliPayResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAliPayResponse) ProtoMessage()               {}
func (*AddAliPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

type DeleteAliPayRequest struct {
	Did int32 `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
}

func (m *DeleteAliPayRequest) Reset()                    { *m = DeleteAliPayRequest{} }
func (m *DeleteAliPayRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAliPayRequest) ProtoMessage()               {}
func (*DeleteAliPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *DeleteAliPayRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type DeleteAliPayResponse struct {
}

func (m *DeleteAliPayResponse) Reset()                    { *m = DeleteAliPayResponse{} }
func (m *DeleteAliPayResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAliPayResponse) ProtoMessage()               {}
func (*DeleteAliPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

type UpdateAliPayRequest struct {
	AliPay *AliPay `protobuf:"bytes,1,opt,name=aliPay" json:"aliPay,omitempty"`
}

func (m *UpdateAliPayRequest) Reset()                    { *m = UpdateAliPayRequest{} }
func (m *UpdateAliPayRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAliPayRequest) ProtoMessage()               {}
func (*UpdateAliPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *UpdateAliPayRequest) GetAliPay() *AliPay {
	if m != nil {
		return m.AliPay
	}
	return nil
}

type UpdateAliPayResponse struct {
}

func (m *UpdateAliPayResponse) Reset()                    { *m = UpdateAliPayResponse{} }
func (m *UpdateAliPayResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAliPayResponse) ProtoMessage()               {}
func (*UpdateAliPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

type GetAliPayRequest struct {
	Did int32 `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
}

func (m *GetAliPayRequest) Reset()                    { *m = GetAliPayRequest{} }
func (m *GetAliPayRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAliPayRequest) ProtoMessage()               {}
func (*GetAliPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *GetAliPayRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type GetAliPayResponse struct {
	AliPay *AliPay `protobuf:"bytes,1,opt,name=aliPay" json:"aliPay,omitempty"`
}

func (m *GetAliPayResponse) Reset()                    { *m = GetAliPayResponse{} }
func (m *GetAliPayResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAliPayResponse) ProtoMessage()               {}
func (*GetAliPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *GetAliPayResponse) GetAliPay() *AliPay {
	if m != nil {
		return m.AliPay
	}
	return nil
}

type AddWechatPayRequest struct {
	WechatPay *WechatPay `protobuf:"bytes,1,opt,name=wechatPay" json:"wechatPay,omitempty"`
}

func (m *AddWechatPayRequest) Reset()                    { *m = AddWechatPayRequest{} }
func (m *AddWechatPayRequest) String() string            { return proto.CompactTextString(m) }
func (*AddWechatPayRequest) ProtoMessage()               {}
func (*AddWechatPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *AddWechatPayRequest) GetWechatPay() *WechatPay {
	if m != nil {
		return m.WechatPay
	}
	return nil
}

type AddWechatPayResponse struct {
}

func (m *AddWechatPayResponse) Reset()                    { *m = AddWechatPayResponse{} }
func (m *AddWechatPayResponse) String() string            { return proto.CompactTextString(m) }
func (*AddWechatPayResponse) ProtoMessage()               {}
func (*AddWechatPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

type DeleteWechatPayRequest struct {
	Did int32 `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
}

func (m *DeleteWechatPayRequest) Reset()                    { *m = DeleteWechatPayRequest{} }
func (m *DeleteWechatPayRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteWechatPayRequest) ProtoMessage()               {}
func (*DeleteWechatPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *DeleteWechatPayRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type DeleteWechatPayResponse struct {
}

func (m *DeleteWechatPayResponse) Reset()                    { *m = DeleteWechatPayResponse{} }
func (m *DeleteWechatPayResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteWechatPayResponse) ProtoMessage()               {}
func (*DeleteWechatPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

type UpdateWechatPayRequest struct {
	WechatPay *WechatPay `protobuf:"bytes,1,opt,name=wechatPay" json:"wechatPay,omitempty"`
}

func (m *UpdateWechatPayRequest) Reset()                    { *m = UpdateWechatPayRequest{} }
func (m *UpdateWechatPayRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateWechatPayRequest) ProtoMessage()               {}
func (*UpdateWechatPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *UpdateWechatPayRequest) GetWechatPay() *WechatPay {
	if m != nil {
		return m.WechatPay
	}
	return nil
}

type UpdateWechatPayResponse struct {
}

func (m *UpdateWechatPayResponse) Reset()                    { *m = UpdateWechatPayResponse{} }
func (m *UpdateWechatPayResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateWechatPayResponse) ProtoMessage()               {}
func (*UpdateWechatPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{15} }

type GetWechatPayRequest struct {
	Did int32 `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
}

func (m *GetWechatPayRequest) Reset()                    { *m = GetWechatPayRequest{} }
func (m *GetWechatPayRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWechatPayRequest) ProtoMessage()               {}
func (*GetWechatPayRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{16} }

func (m *GetWechatPayRequest) GetDid() int32 {
	if m != nil {
		return m.Did
	}
	return 0
}

type GetWechatPayResponse struct {
	WechatPay *WechatPay `protobuf:"bytes,1,opt,name=wechatPay" json:"wechatPay,omitempty"`
}

func (m *GetWechatPayResponse) Reset()                    { *m = GetWechatPayResponse{} }
func (m *GetWechatPayResponse) String() string            { return proto.CompactTextString(m) }
func (*GetWechatPayResponse) ProtoMessage()               {}
func (*GetWechatPayResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{17} }

func (m *GetWechatPayResponse) GetWechatPay() *WechatPay {
	if m != nil {
		return m.WechatPay
	}
	return nil
}

func init() {
	proto.RegisterType((*AliPay)(nil), "api.AliPay")
	proto.RegisterType((*WechatPay)(nil), "api.WechatPay")
	proto.RegisterType((*AddAliPayRequest)(nil), "api.AddAliPayRequest")
	proto.RegisterType((*AddAliPayResponse)(nil), "api.AddAliPayResponse")
	proto.RegisterType((*DeleteAliPayRequest)(nil), "api.DeleteAliPayRequest")
	proto.RegisterType((*DeleteAliPayResponse)(nil), "api.DeleteAliPayResponse")
	proto.RegisterType((*UpdateAliPayRequest)(nil), "api.UpdateAliPayRequest")
	proto.RegisterType((*UpdateAliPayResponse)(nil), "api.UpdateAliPayResponse")
	proto.RegisterType((*GetAliPayRequest)(nil), "api.GetAliPayRequest")
	proto.RegisterType((*GetAliPayResponse)(nil), "api.GetAliPayResponse")
	proto.RegisterType((*AddWechatPayRequest)(nil), "api.AddWechatPayRequest")
	proto.RegisterType((*AddWechatPayResponse)(nil), "api.AddWechatPayResponse")
	proto.RegisterType((*DeleteWechatPayRequest)(nil), "api.DeleteWechatPayRequest")
	proto.RegisterType((*DeleteWechatPayResponse)(nil), "api.DeleteWechatPayResponse")
	proto.RegisterType((*UpdateWechatPayRequest)(nil), "api.UpdateWechatPayRequest")
	proto.RegisterType((*UpdateWechatPayResponse)(nil), "api.UpdateWechatPayResponse")
	proto.RegisterType((*GetWechatPayRequest)(nil), "api.GetWechatPayRequest")
	proto.RegisterType((*GetWechatPayResponse)(nil), "api.GetWechatPayResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PaymentServer service

type PaymentServerClient interface {
	AddAliPay(ctx context.Context, in *AddAliPayRequest, opts ...grpc.CallOption) (*AddAliPayResponse, error)
	DeleteAliPay(ctx context.Context, in *DeleteAliPayRequest, opts ...grpc.CallOption) (*DeleteAliPayResponse, error)
	UpdateAliPay(ctx context.Context, in *UpdateAliPayRequest, opts ...grpc.CallOption) (*UpdateAliPayResponse, error)
	GetAliPay(ctx context.Context, in *GetAliPayRequest, opts ...grpc.CallOption) (*GetAliPayResponse, error)
	AddWechatPay(ctx context.Context, in *AddWechatPayRequest, opts ...grpc.CallOption) (*AddWechatPayResponse, error)
	DeleteWechatPay(ctx context.Context, in *DeleteWechatPayRequest, opts ...grpc.CallOption) (*DeleteWechatPayResponse, error)
	UpdateWechatPay(ctx context.Context, in *UpdateWechatPayRequest, opts ...grpc.CallOption) (*UpdateWechatPayResponse, error)
	GetWechatPay(ctx context.Context, in *GetWechatPayRequest, opts ...grpc.CallOption) (*GetWechatPayResponse, error)
}

type paymentServerClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServerClient(cc *grpc.ClientConn) PaymentServerClient {
	return &paymentServerClient{cc}
}

func (c *paymentServerClient) AddAliPay(ctx context.Context, in *AddAliPayRequest, opts ...grpc.CallOption) (*AddAliPayResponse, error) {
	out := new(AddAliPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/AddAliPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) DeleteAliPay(ctx context.Context, in *DeleteAliPayRequest, opts ...grpc.CallOption) (*DeleteAliPayResponse, error) {
	out := new(DeleteAliPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/DeleteAliPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) UpdateAliPay(ctx context.Context, in *UpdateAliPayRequest, opts ...grpc.CallOption) (*UpdateAliPayResponse, error) {
	out := new(UpdateAliPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/UpdateAliPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) GetAliPay(ctx context.Context, in *GetAliPayRequest, opts ...grpc.CallOption) (*GetAliPayResponse, error) {
	out := new(GetAliPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/GetAliPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) AddWechatPay(ctx context.Context, in *AddWechatPayRequest, opts ...grpc.CallOption) (*AddWechatPayResponse, error) {
	out := new(AddWechatPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/AddWechatPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) DeleteWechatPay(ctx context.Context, in *DeleteWechatPayRequest, opts ...grpc.CallOption) (*DeleteWechatPayResponse, error) {
	out := new(DeleteWechatPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/DeleteWechatPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) UpdateWechatPay(ctx context.Context, in *UpdateWechatPayRequest, opts ...grpc.CallOption) (*UpdateWechatPayResponse, error) {
	out := new(UpdateWechatPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/UpdateWechatPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServerClient) GetWechatPay(ctx context.Context, in *GetWechatPayRequest, opts ...grpc.CallOption) (*GetWechatPayResponse, error) {
	out := new(GetWechatPayResponse)
	err := grpc.Invoke(ctx, "/api.PaymentServer/GetWechatPay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentServer service

type PaymentServerServer interface {
	AddAliPay(context.Context, *AddAliPayRequest) (*AddAliPayResponse, error)
	DeleteAliPay(context.Context, *DeleteAliPayRequest) (*DeleteAliPayResponse, error)
	UpdateAliPay(context.Context, *UpdateAliPayRequest) (*UpdateAliPayResponse, error)
	GetAliPay(context.Context, *GetAliPayRequest) (*GetAliPayResponse, error)
	AddWechatPay(context.Context, *AddWechatPayRequest) (*AddWechatPayResponse, error)
	DeleteWechatPay(context.Context, *DeleteWechatPayRequest) (*DeleteWechatPayResponse, error)
	UpdateWechatPay(context.Context, *UpdateWechatPayRequest) (*UpdateWechatPayResponse, error)
	GetWechatPay(context.Context, *GetWechatPayRequest) (*GetWechatPayResponse, error)
}

func RegisterPaymentServerServer(s *grpc.Server, srv PaymentServerServer) {
	s.RegisterService(&_PaymentServer_serviceDesc, srv)
}

func _PaymentServer_AddAliPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).AddAliPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/AddAliPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).AddAliPay(ctx, req.(*AddAliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_DeleteAliPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).DeleteAliPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/DeleteAliPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).DeleteAliPay(ctx, req.(*DeleteAliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_UpdateAliPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).UpdateAliPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/UpdateAliPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).UpdateAliPay(ctx, req.(*UpdateAliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_GetAliPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAliPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).GetAliPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/GetAliPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).GetAliPay(ctx, req.(*GetAliPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_AddWechatPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddWechatPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).AddWechatPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/AddWechatPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).AddWechatPay(ctx, req.(*AddWechatPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_DeleteWechatPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWechatPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).DeleteWechatPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/DeleteWechatPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).DeleteWechatPay(ctx, req.(*DeleteWechatPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_UpdateWechatPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWechatPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).UpdateWechatPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/UpdateWechatPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).UpdateWechatPay(ctx, req.(*UpdateWechatPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentServer_GetWechatPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWechatPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServerServer).GetWechatPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentServer/GetWechatPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServerServer).GetWechatPay(ctx, req.(*GetWechatPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PaymentServer",
	HandlerType: (*PaymentServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAliPay",
			Handler:    _PaymentServer_AddAliPay_Handler,
		},
		{
			MethodName: "DeleteAliPay",
			Handler:    _PaymentServer_DeleteAliPay_Handler,
		},
		{
			MethodName: "UpdateAliPay",
			Handler:    _PaymentServer_UpdateAliPay_Handler,
		},
		{
			MethodName: "GetAliPay",
			Handler:    _PaymentServer_GetAliPay_Handler,
		},
		{
			MethodName: "AddWechatPay",
			Handler:    _PaymentServer_AddWechatPay_Handler,
		},
		{
			MethodName: "DeleteWechatPay",
			Handler:    _PaymentServer_DeleteWechatPay_Handler,
		},
		{
			MethodName: "UpdateWechatPay",
			Handler:    _PaymentServer_UpdateWechatPay_Handler,
		},
		{
			MethodName: "GetWechatPay",
			Handler:    _PaymentServer_GetWechatPay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/payment.proto",
}

func init() { proto.RegisterFile("api/payment.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0xd2, 0x18, 0x79, 0xca, 0x9f, 0x64, 0x63, 0x5c, 0xa7, 0x54, 0x28, 0x32, 0x48,
	0x44, 0x08, 0x05, 0xa9, 0x1c, 0x40, 0x88, 0x8b, 0xd5, 0x40, 0x55, 0xa1, 0xa2, 0xc8, 0x05, 0x71,
	0x5e, 0xe2, 0x91, 0x62, 0xa9, 0x4d, 0x16, 0x67, 0x29, 0xca, 0x6b, 0x71, 0xe3, 0x09, 0x78, 0x2d,
	0xe4, 0xdd, 0x49, 0xbc, 0xb6, 0x17, 0xb5, 0x85, 0x9b, 0x3d, 0xf3, 0xed, 0xe7, 0x6f, 0x66, 0x7f,
	0x4a, 0xa0, 0xc7, 0x45, 0xf6, 0x42, 0xf0, 0xf5, 0x05, 0x2e, 0xe4, 0x58, 0xe4, 0x4b, 0xb9, 0x64,
	0x6d, 0x2e, 0xb2, 0xe8, 0xa7, 0x03, 0x6e, 0x7c, 0x9e, 0x4d, 0xf9, 0x9a, 0x75, 0xa1, 0x3d, 0xc9,
	0xd2, 0xd0, 0x19, 0x3a, 0xa3, 0x4e, 0x52, 0x3c, 0x32, 0x1f, 0x3a, 0xb1, 0x10, 0x27, 0x69, 0x78,
	0x6b, 0xe8, 0x8c, 0xbc, 0x44, 0xbf, 0xb0, 0x31, 0xb0, 0x53, 0xcc, 0x67, 0x73, 0xbe, 0x90, 0xd3,
	0x3c, 0xbb, 0xe4, 0x12, 0x3f, 0xe0, 0x3a, 0x6c, 0x2b, 0x89, 0xa5, 0x53, 0xf8, 0x16, 0x82, 0x1d,
	0x25, 0x28, 0x1e, 0xd9, 0x23, 0x80, 0xa3, 0x1c, 0xb9, 0xc4, 0x4f, 0xd9, 0x05, 0x86, 0x9d, 0xa1,
	0x33, 0x6a, 0x27, 0x46, 0xa5, 0xe8, 0x7f, 0x16, 0xe9, 0xa6, 0xef, 0xea, 0x7e, 0x59, 0x89, 0x7e,
	0x39, 0xe0, 0x7d, 0xc1, 0xd9, 0x9c, 0xcb, 0x9b, 0xe4, 0xf6, 0xa1, 0x73, 0x3a, 0x9b, 0x9f, 0xa4,
	0x14, 0x55, 0xbf, 0x58, 0xd2, 0x1d, 0x80, 0x17, 0x0b, 0x71, 0x86, 0xb3, 0x1c, 0xa5, 0x0a, 0xe7,
	0x25, 0x65, 0xa1, 0x96, 0xdd, 0xbd, 0x22, 0xfb, 0xed, 0x46, 0xf6, 0x57, 0xd0, 0x8d, 0xd3, 0x54,
	0xaf, 0x3c, 0xc1, 0x6f, 0xdf, 0x71, 0x25, 0xd9, 0x63, 0x70, 0xb9, 0x2a, 0xa8, 0x21, 0x76, 0x0f,
	0x77, 0xc7, 0x5c, 0x64, 0x63, 0xd2, 0x50, 0x2b, 0xea, 0x43, 0xcf, 0x38, 0xb8, 0x12, 0xcb, 0xc5,
	0x0a, 0xa3, 0xa7, 0xd0, 0x9f, 0xe0, 0x39, 0x4a, 0xac, 0x1a, 0x36, 0x56, 0x12, 0x05, 0xe0, 0x57,
	0x85, 0x64, 0xf0, 0x06, 0xfa, 0x3a, 0xdc, 0x3f, 0x24, 0x0a, 0xc0, 0xaf, 0x9e, 0x25, 0xcf, 0x27,
	0xd0, 0x3d, 0x46, 0x79, 0x55, 0xa2, 0xd7, 0xd0, 0x33, 0x54, 0xfa, 0xe8, 0xf5, 0xbe, 0x7b, 0x04,
	0xfd, 0x38, 0x4d, 0xb7, 0x00, 0x6c, 0x3e, 0xf1, 0x1c, 0xbc, 0x1f, 0x9b, 0x1a, 0x1d, 0xbf, 0xa7,
	0x8e, 0x97, 0xca, 0x52, 0x50, 0x84, 0xaf, 0x9a, 0x50, 0xf8, 0x67, 0x10, 0xe8, 0x45, 0x35, 0xfc,
	0x9b, 0x23, 0x0c, 0x60, 0xaf, 0xa1, 0x25, 0x9b, 0xf7, 0x10, 0xe8, 0xdd, 0xfc, 0x67, 0xcc, 0x01,
	0xec, 0x35, 0x7c, 0xca, 0xbb, 0x3f, 0x46, 0x79, 0x8d, 0x98, 0x13, 0xf0, 0xab, 0x42, 0x5a, 0xf6,
	0x8d, 0x92, 0x1c, 0xfe, 0xde, 0x81, 0xbb, 0x53, 0xfd, 0x03, 0x72, 0x86, 0xf9, 0x25, 0xe6, 0xec,
	0x2d, 0x78, 0x5b, 0x22, 0xd9, 0x03, 0x7d, 0x53, 0x35, 0xb4, 0xf7, 0x83, 0x7a, 0x99, 0xc2, 0xb7,
	0xd8, 0x3b, 0xb8, 0x63, 0x12, 0xc9, 0x42, 0xa5, 0xb4, 0xd0, 0xbc, 0x3f, 0xb0, 0x74, 0x4c, 0x1b,
	0x13, 0x42, 0xb2, 0xb1, 0x30, 0x4d, 0x36, 0x56, 0x62, 0x5b, 0xc5, 0x2c, 0x5b, 0x1a, 0x69, 0x96,
	0x3a, 0xc3, 0x34, 0x4b, 0x03, 0x5a, 0x1d, 0xc2, 0x84, 0x89, 0x42, 0x58, 0x20, 0xa5, 0x10, 0x56,
	0xf2, 0x5a, 0xec, 0x23, 0xdc, 0xaf, 0xf1, 0xc4, 0x1e, 0x1a, 0xb3, 0x37, 0xcc, 0x0e, 0xec, 0x4d,
	0xd3, 0xaf, 0x06, 0x0f, 0xf9, 0xd9, 0xd1, 0x24, 0xbf, 0xbf, 0xf1, 0xa6, 0xc6, 0x34, 0x41, 0xa2,
	0x31, 0x2d, 0x10, 0xd2, 0x98, 0x36, 0xea, 0xa2, 0xd6, 0x57, 0x57, 0xfd, 0xff, 0xbc, 0xfc, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x1f, 0xbe, 0xb2, 0x6a, 0x94, 0x06, 0x00, 0x00,
}
