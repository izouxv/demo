// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/twins.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeleteTwinsBaseTenantRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *DeleteTwinsBaseTenantRequest) Reset()                    { *m = DeleteTwinsBaseTenantRequest{} }
func (m *DeleteTwinsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTwinsBaseTenantRequest) ProtoMessage()               {}
func (*DeleteTwinsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *DeleteTwinsBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *DeleteTwinsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type DeleteTwinsBaseTenantResponse struct {
}

func (m *DeleteTwinsBaseTenantResponse) Reset()                    { *m = DeleteTwinsBaseTenantResponse{} }
func (m *DeleteTwinsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTwinsBaseTenantResponse) ProtoMessage()               {}
func (*DeleteTwinsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

type GetLastUpdateTimeRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *GetLastUpdateTimeRequest) Reset()                    { *m = GetLastUpdateTimeRequest{} }
func (m *GetLastUpdateTimeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLastUpdateTimeRequest) ProtoMessage()               {}
func (*GetLastUpdateTimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *GetLastUpdateTimeRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type GetLastUpdateTimeResponse struct {
	Time int64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
}

func (m *GetLastUpdateTimeResponse) Reset()                    { *m = GetLastUpdateTimeResponse{} }
func (m *GetLastUpdateTimeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLastUpdateTimeResponse) ProtoMessage()               {}
func (*GetLastUpdateTimeResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *GetLastUpdateTimeResponse) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type GetTwinsVersionRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *GetTwinsVersionRequest) Reset()                    { *m = GetTwinsVersionRequest{} }
func (m *GetTwinsVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTwinsVersionRequest) ProtoMessage()               {}
func (*GetTwinsVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *GetTwinsVersionRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type GetTwinsVersionResponse struct {
	Version int64 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
}

func (m *GetTwinsVersionResponse) Reset()                    { *m = GetTwinsVersionResponse{} }
func (m *GetTwinsVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTwinsVersionResponse) ProtoMessage()               {}
func (*GetTwinsVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *GetTwinsVersionResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type AddTwinsBaseTenantRequest struct {
	Aid     int64  `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Repored string `protobuf:"bytes,2,opt,name=repored" json:"repored,omitempty"`
	Desired string `protobuf:"bytes,3,opt,name=desired" json:"desired,omitempty"`
	Tid     int64  `protobuf:"varint,4,opt,name=tid" json:"tid,omitempty"`
}

func (m *AddTwinsBaseTenantRequest) Reset()                    { *m = AddTwinsBaseTenantRequest{} }
func (m *AddTwinsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*AddTwinsBaseTenantRequest) ProtoMessage()               {}
func (*AddTwinsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *AddTwinsBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *AddTwinsBaseTenantRequest) GetRepored() string {
	if m != nil {
		return m.Repored
	}
	return ""
}

func (m *AddTwinsBaseTenantRequest) GetDesired() string {
	if m != nil {
		return m.Desired
	}
	return ""
}

func (m *AddTwinsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type AddTwinsBaseTenantResponse struct {
}

func (m *AddTwinsBaseTenantResponse) Reset()                    { *m = AddTwinsBaseTenantResponse{} }
func (m *AddTwinsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*AddTwinsBaseTenantResponse) ProtoMessage()               {}
func (*AddTwinsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

type UpdateTwinsBaseTenantRequest struct {
	Aid     int64  `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Repored string `protobuf:"bytes,2,opt,name=repored" json:"repored,omitempty"`
	Desired string `protobuf:"bytes,3,opt,name=desired" json:"desired,omitempty"`
	Tid     int64  `protobuf:"varint,4,opt,name=tid" json:"tid,omitempty"`
}

func (m *UpdateTwinsBaseTenantRequest) Reset()                    { *m = UpdateTwinsBaseTenantRequest{} }
func (m *UpdateTwinsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTwinsBaseTenantRequest) ProtoMessage()               {}
func (*UpdateTwinsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *UpdateTwinsBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *UpdateTwinsBaseTenantRequest) GetRepored() string {
	if m != nil {
		return m.Repored
	}
	return ""
}

func (m *UpdateTwinsBaseTenantRequest) GetDesired() string {
	if m != nil {
		return m.Desired
	}
	return ""
}

func (m *UpdateTwinsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type UpdateTwinsBaseTenantResponse struct {
	Twins string `protobuf:"bytes,1,opt,name=twins" json:"twins,omitempty"`
	Tid   int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *UpdateTwinsBaseTenantResponse) Reset()                    { *m = UpdateTwinsBaseTenantResponse{} }
func (m *UpdateTwinsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTwinsBaseTenantResponse) ProtoMessage()               {}
func (*UpdateTwinsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *UpdateTwinsBaseTenantResponse) GetTwins() string {
	if m != nil {
		return m.Twins
	}
	return ""
}

func (m *UpdateTwinsBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetTwinsBaseTenantRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetTwinsBaseTenantRequest) Reset()                    { *m = GetTwinsBaseTenantRequest{} }
func (m *GetTwinsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTwinsBaseTenantRequest) ProtoMessage()               {}
func (*GetTwinsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *GetTwinsBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetTwinsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetTwinsBaseTenantResponse struct {
	Twins string `protobuf:"bytes,1,opt,name=twins" json:"twins,omitempty"`
	Tid   int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetTwinsBaseTenantResponse) Reset()                    { *m = GetTwinsBaseTenantResponse{} }
func (m *GetTwinsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTwinsBaseTenantResponse) ProtoMessage()               {}
func (*GetTwinsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *GetTwinsBaseTenantResponse) GetTwins() string {
	if m != nil {
		return m.Twins
	}
	return ""
}

func (m *GetTwinsBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetTwinsDataPointBaseTenantRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetTwinsDataPointBaseTenantRequest) Reset()         { *m = GetTwinsDataPointBaseTenantRequest{} }
func (m *GetTwinsDataPointBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetTwinsDataPointBaseTenantRequest) ProtoMessage()    {}
func (*GetTwinsDataPointBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{12}
}

func (m *GetTwinsDataPointBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetTwinsDataPointBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetTwinsDataPointBaseTenantResponse struct {
	DataPoints []string `protobuf:"bytes,1,rep,name=data_points,json=dataPoints" json:"data_points,omitempty"`
}

func (m *GetTwinsDataPointBaseTenantResponse) Reset()         { *m = GetTwinsDataPointBaseTenantResponse{} }
func (m *GetTwinsDataPointBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetTwinsDataPointBaseTenantResponse) ProtoMessage()    {}
func (*GetTwinsDataPointBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{13}
}

func (m *GetTwinsDataPointBaseTenantResponse) GetDataPoints() []string {
	if m != nil {
		return m.DataPoints
	}
	return nil
}

type GetLastUpdateTimeBaseTenantRequest struct {
	Aids []int64 `protobuf:"varint,1,rep,packed,name=aids" json:"aids,omitempty"`
	Tid  int64   `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetLastUpdateTimeBaseTenantRequest) Reset()         { *m = GetLastUpdateTimeBaseTenantRequest{} }
func (m *GetLastUpdateTimeBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetLastUpdateTimeBaseTenantRequest) ProtoMessage()    {}
func (*GetLastUpdateTimeBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{14}
}

func (m *GetLastUpdateTimeBaseTenantRequest) GetAids() []int64 {
	if m != nil {
		return m.Aids
	}
	return nil
}

func (m *GetLastUpdateTimeBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetLastUpdateTimeBaseTenantResponse struct {
	Times map[int64]int64 `protobuf:"bytes,1,rep,name=times" json:"times,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *GetLastUpdateTimeBaseTenantResponse) Reset()         { *m = GetLastUpdateTimeBaseTenantResponse{} }
func (m *GetLastUpdateTimeBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetLastUpdateTimeBaseTenantResponse) ProtoMessage()    {}
func (*GetLastUpdateTimeBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{15}
}

func (m *GetLastUpdateTimeBaseTenantResponse) GetTimes() map[int64]int64 {
	if m != nil {
		return m.Times
	}
	return nil
}

type GetLoraWANTwinsForGatewayMacBaseTenantRequest struct {
	Tid int64  `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Mac string `protobuf:"bytes,2,opt,name=mac" json:"mac,omitempty"`
}

func (m *GetLoraWANTwinsForGatewayMacBaseTenantRequest) Reset() {
	*m = GetLoraWANTwinsForGatewayMacBaseTenantRequest{}
}
func (m *GetLoraWANTwinsForGatewayMacBaseTenantRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetLoraWANTwinsForGatewayMacBaseTenantRequest) ProtoMessage() {}
func (*GetLoraWANTwinsForGatewayMacBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{16}
}

func (m *GetLoraWANTwinsForGatewayMacBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetLoraWANTwinsForGatewayMacBaseTenantRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type GetLoraWANTwinsForGatewayMacBaseTenantResponse struct {
	Twins []string `protobuf:"bytes,1,rep,name=twins" json:"twins,omitempty"`
}

func (m *GetLoraWANTwinsForGatewayMacBaseTenantResponse) Reset() {
	*m = GetLoraWANTwinsForGatewayMacBaseTenantResponse{}
}
func (m *GetLoraWANTwinsForGatewayMacBaseTenantResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetLoraWANTwinsForGatewayMacBaseTenantResponse) ProtoMessage() {}
func (*GetLoraWANTwinsForGatewayMacBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor12, []int{17}
}

func (m *GetLoraWANTwinsForGatewayMacBaseTenantResponse) GetTwins() []string {
	if m != nil {
		return m.Twins
	}
	return nil
}

func init() {
	proto.RegisterType((*DeleteTwinsBaseTenantRequest)(nil), "api.DeleteTwinsBaseTenantRequest")
	proto.RegisterType((*DeleteTwinsBaseTenantResponse)(nil), "api.DeleteTwinsBaseTenantResponse")
	proto.RegisterType((*GetLastUpdateTimeRequest)(nil), "api.GetLastUpdateTimeRequest")
	proto.RegisterType((*GetLastUpdateTimeResponse)(nil), "api.GetLastUpdateTimeResponse")
	proto.RegisterType((*GetTwinsVersionRequest)(nil), "api.GetTwinsVersionRequest")
	proto.RegisterType((*GetTwinsVersionResponse)(nil), "api.GetTwinsVersionResponse")
	proto.RegisterType((*AddTwinsBaseTenantRequest)(nil), "api.AddTwinsBaseTenantRequest")
	proto.RegisterType((*AddTwinsBaseTenantResponse)(nil), "api.AddTwinsBaseTenantResponse")
	proto.RegisterType((*UpdateTwinsBaseTenantRequest)(nil), "api.UpdateTwinsBaseTenantRequest")
	proto.RegisterType((*UpdateTwinsBaseTenantResponse)(nil), "api.UpdateTwinsBaseTenantResponse")
	proto.RegisterType((*GetTwinsBaseTenantRequest)(nil), "api.GetTwinsBaseTenantRequest")
	proto.RegisterType((*GetTwinsBaseTenantResponse)(nil), "api.GetTwinsBaseTenantResponse")
	proto.RegisterType((*GetTwinsDataPointBaseTenantRequest)(nil), "api.GetTwinsDataPointBaseTenantRequest")
	proto.RegisterType((*GetTwinsDataPointBaseTenantResponse)(nil), "api.GetTwinsDataPointBaseTenantResponse")
	proto.RegisterType((*GetLastUpdateTimeBaseTenantRequest)(nil), "api.GetLastUpdateTimeBaseTenantRequest")
	proto.RegisterType((*GetLastUpdateTimeBaseTenantResponse)(nil), "api.GetLastUpdateTimeBaseTenantResponse")
	proto.RegisterType((*GetLoraWANTwinsForGatewayMacBaseTenantRequest)(nil), "api.GetLoraWANTwinsForGatewayMacBaseTenantRequest")
	proto.RegisterType((*GetLoraWANTwinsForGatewayMacBaseTenantResponse)(nil), "api.GetLoraWANTwinsForGatewayMacBaseTenantResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TwinsServer service

type TwinsServerClient interface {
	// 获取影子最后更新时间
	GetLastUpdateTime(ctx context.Context, in *GetLastUpdateTimeRequest, opts ...grpc.CallOption) (*GetLastUpdateTimeResponse, error)
	// 获取影子的版本
	GetTwinsVersion(ctx context.Context, in *GetTwinsVersionRequest, opts ...grpc.CallOption) (*GetTwinsVersionResponse, error)
	// 添加影子信息
	AddTwinsBaseTenant(ctx context.Context, in *AddTwinsBaseTenantRequest, opts ...grpc.CallOption) (*AddTwinsBaseTenantResponse, error)
	// 删除影子信息
	DeleteTwinsBaseTenant(ctx context.Context, in *DeleteTwinsBaseTenantRequest, opts ...grpc.CallOption) (*DeleteTwinsBaseTenantResponse, error)
	// 修改影子信息
	UpdateTwinsBaseTenant(ctx context.Context, in *UpdateTwinsBaseTenantRequest, opts ...grpc.CallOption) (*UpdateTwinsBaseTenantResponse, error)
	// 获取影子信息
	GetTwinsBaseTenant(ctx context.Context, in *GetTwinsBaseTenantRequest, opts ...grpc.CallOption) (*GetTwinsBaseTenantResponse, error)
	// 从影子中获取上报的数据点
	GetTwinsDataPointBaseTenant(ctx context.Context, in *GetTwinsDataPointBaseTenantRequest, opts ...grpc.CallOption) (*GetTwinsDataPointBaseTenantResponse, error)
	// 批量获取设备影子最后更新时间
	GetLastUpdateTimeBaseTenant(ctx context.Context, in *GetLastUpdateTimeBaseTenantRequest, opts ...grpc.CallOption) (*GetLastUpdateTimeBaseTenantResponse, error)
	// 从影子中获取lorawan终端的信息，根据网关的mac
	GetLoraWANTwinsForGatewayMacBaseTenant(ctx context.Context, in *GetLoraWANTwinsForGatewayMacBaseTenantRequest, opts ...grpc.CallOption) (*GetLoraWANTwinsForGatewayMacBaseTenantResponse, error)
}

type twinsServerClient struct {
	cc *grpc.ClientConn
}

func NewTwinsServerClient(cc *grpc.ClientConn) TwinsServerClient {
	return &twinsServerClient{cc}
}

func (c *twinsServerClient) GetLastUpdateTime(ctx context.Context, in *GetLastUpdateTimeRequest, opts ...grpc.CallOption) (*GetLastUpdateTimeResponse, error) {
	out := new(GetLastUpdateTimeResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetLastUpdateTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) GetTwinsVersion(ctx context.Context, in *GetTwinsVersionRequest, opts ...grpc.CallOption) (*GetTwinsVersionResponse, error) {
	out := new(GetTwinsVersionResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetTwinsVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) AddTwinsBaseTenant(ctx context.Context, in *AddTwinsBaseTenantRequest, opts ...grpc.CallOption) (*AddTwinsBaseTenantResponse, error) {
	out := new(AddTwinsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/AddTwinsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) DeleteTwinsBaseTenant(ctx context.Context, in *DeleteTwinsBaseTenantRequest, opts ...grpc.CallOption) (*DeleteTwinsBaseTenantResponse, error) {
	out := new(DeleteTwinsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/DeleteTwinsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) UpdateTwinsBaseTenant(ctx context.Context, in *UpdateTwinsBaseTenantRequest, opts ...grpc.CallOption) (*UpdateTwinsBaseTenantResponse, error) {
	out := new(UpdateTwinsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/UpdateTwinsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) GetTwinsBaseTenant(ctx context.Context, in *GetTwinsBaseTenantRequest, opts ...grpc.CallOption) (*GetTwinsBaseTenantResponse, error) {
	out := new(GetTwinsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetTwinsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) GetTwinsDataPointBaseTenant(ctx context.Context, in *GetTwinsDataPointBaseTenantRequest, opts ...grpc.CallOption) (*GetTwinsDataPointBaseTenantResponse, error) {
	out := new(GetTwinsDataPointBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetTwinsDataPointBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) GetLastUpdateTimeBaseTenant(ctx context.Context, in *GetLastUpdateTimeBaseTenantRequest, opts ...grpc.CallOption) (*GetLastUpdateTimeBaseTenantResponse, error) {
	out := new(GetLastUpdateTimeBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetLastUpdateTimeBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twinsServerClient) GetLoraWANTwinsForGatewayMacBaseTenant(ctx context.Context, in *GetLoraWANTwinsForGatewayMacBaseTenantRequest, opts ...grpc.CallOption) (*GetLoraWANTwinsForGatewayMacBaseTenantResponse, error) {
	out := new(GetLoraWANTwinsForGatewayMacBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.TwinsServer/GetLoraWANTwinsForGatewayMacBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TwinsServer service

type TwinsServerServer interface {
	// 获取影子最后更新时间
	GetLastUpdateTime(context.Context, *GetLastUpdateTimeRequest) (*GetLastUpdateTimeResponse, error)
	// 获取影子的版本
	GetTwinsVersion(context.Context, *GetTwinsVersionRequest) (*GetTwinsVersionResponse, error)
	// 添加影子信息
	AddTwinsBaseTenant(context.Context, *AddTwinsBaseTenantRequest) (*AddTwinsBaseTenantResponse, error)
	// 删除影子信息
	DeleteTwinsBaseTenant(context.Context, *DeleteTwinsBaseTenantRequest) (*DeleteTwinsBaseTenantResponse, error)
	// 修改影子信息
	UpdateTwinsBaseTenant(context.Context, *UpdateTwinsBaseTenantRequest) (*UpdateTwinsBaseTenantResponse, error)
	// 获取影子信息
	GetTwinsBaseTenant(context.Context, *GetTwinsBaseTenantRequest) (*GetTwinsBaseTenantResponse, error)
	// 从影子中获取上报的数据点
	GetTwinsDataPointBaseTenant(context.Context, *GetTwinsDataPointBaseTenantRequest) (*GetTwinsDataPointBaseTenantResponse, error)
	// 批量获取设备影子最后更新时间
	GetLastUpdateTimeBaseTenant(context.Context, *GetLastUpdateTimeBaseTenantRequest) (*GetLastUpdateTimeBaseTenantResponse, error)
	// 从影子中获取lorawan终端的信息，根据网关的mac
	GetLoraWANTwinsForGatewayMacBaseTenant(context.Context, *GetLoraWANTwinsForGatewayMacBaseTenantRequest) (*GetLoraWANTwinsForGatewayMacBaseTenantResponse, error)
}

func RegisterTwinsServerServer(s *grpc.Server, srv TwinsServerServer) {
	s.RegisterService(&_TwinsServer_serviceDesc, srv)
}

func _TwinsServer_GetLastUpdateTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastUpdateTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetLastUpdateTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetLastUpdateTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetLastUpdateTime(ctx, req.(*GetLastUpdateTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_GetTwinsVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTwinsVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetTwinsVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetTwinsVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetTwinsVersion(ctx, req.(*GetTwinsVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_AddTwinsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTwinsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).AddTwinsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/AddTwinsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).AddTwinsBaseTenant(ctx, req.(*AddTwinsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_DeleteTwinsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTwinsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).DeleteTwinsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/DeleteTwinsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).DeleteTwinsBaseTenant(ctx, req.(*DeleteTwinsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_UpdateTwinsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTwinsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).UpdateTwinsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/UpdateTwinsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).UpdateTwinsBaseTenant(ctx, req.(*UpdateTwinsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_GetTwinsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTwinsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetTwinsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetTwinsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetTwinsBaseTenant(ctx, req.(*GetTwinsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_GetTwinsDataPointBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTwinsDataPointBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetTwinsDataPointBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetTwinsDataPointBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetTwinsDataPointBaseTenant(ctx, req.(*GetTwinsDataPointBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_GetLastUpdateTimeBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLastUpdateTimeBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetLastUpdateTimeBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetLastUpdateTimeBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetLastUpdateTimeBaseTenant(ctx, req.(*GetLastUpdateTimeBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwinsServer_GetLoraWANTwinsForGatewayMacBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLoraWANTwinsForGatewayMacBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwinsServerServer).GetLoraWANTwinsForGatewayMacBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.TwinsServer/GetLoraWANTwinsForGatewayMacBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwinsServerServer).GetLoraWANTwinsForGatewayMacBaseTenant(ctx, req.(*GetLoraWANTwinsForGatewayMacBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TwinsServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.TwinsServer",
	HandlerType: (*TwinsServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLastUpdateTime",
			Handler:    _TwinsServer_GetLastUpdateTime_Handler,
		},
		{
			MethodName: "GetTwinsVersion",
			Handler:    _TwinsServer_GetTwinsVersion_Handler,
		},
		{
			MethodName: "AddTwinsBaseTenant",
			Handler:    _TwinsServer_AddTwinsBaseTenant_Handler,
		},
		{
			MethodName: "DeleteTwinsBaseTenant",
			Handler:    _TwinsServer_DeleteTwinsBaseTenant_Handler,
		},
		{
			MethodName: "UpdateTwinsBaseTenant",
			Handler:    _TwinsServer_UpdateTwinsBaseTenant_Handler,
		},
		{
			MethodName: "GetTwinsBaseTenant",
			Handler:    _TwinsServer_GetTwinsBaseTenant_Handler,
		},
		{
			MethodName: "GetTwinsDataPointBaseTenant",
			Handler:    _TwinsServer_GetTwinsDataPointBaseTenant_Handler,
		},
		{
			MethodName: "GetLastUpdateTimeBaseTenant",
			Handler:    _TwinsServer_GetLastUpdateTimeBaseTenant_Handler,
		},
		{
			MethodName: "GetLoraWANTwinsForGatewayMacBaseTenant",
			Handler:    _TwinsServer_GetLoraWANTwinsForGatewayMacBaseTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/twins.proto",
}

func init() { proto.RegisterFile("api/twins.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 770 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdf, 0x4e, 0x13, 0x4f,
	0x14, 0xce, 0x52, 0xf8, 0x11, 0x0e, 0x17, 0xfc, 0x1c, 0x45, 0xcb, 0xb6, 0xfc, 0x5b, 0x12, 0xac,
	0x0d, 0x76, 0x4d, 0x7b, 0x43, 0xb8, 0x31, 0x10, 0xa4, 0x6a, 0xd4, 0x98, 0x05, 0xf5, 0xd2, 0x1c,
	0xd9, 0x09, 0x99, 0xd0, 0xee, 0xac, 0xbb, 0x43, 0x49, 0x43, 0x48, 0x8c, 0x17, 0x46, 0x2f, 0xbc,
	0xf2, 0x15, 0xbc, 0xf2, 0x35, 0x7c, 0x04, 0x5f, 0xc1, 0x07, 0x31, 0xf3, 0x67, 0x5b, 0x70, 0xff,
	0xb4, 0x68, 0xe2, 0xdd, 0xcc, 0x9c, 0x39, 0xe7, 0xfb, 0xfa, 0x9d, 0x33, 0xdf, 0x16, 0xe6, 0x30,
	0x64, 0xae, 0x38, 0x65, 0x41, 0xdc, 0x08, 0x23, 0x2e, 0x38, 0x29, 0x61, 0xc8, 0xec, 0xea, 0x11,
	0xe7, 0x47, 0x1d, 0xea, 0xca, 0x20, 0x06, 0x01, 0x17, 0x28, 0x18, 0x4f, 0xae, 0x38, 0x3b, 0x50,
	0xdd, 0xa5, 0x1d, 0x2a, 0xe8, 0x81, 0xcc, 0xdb, 0xc1, 0x98, 0x1e, 0xd0, 0x00, 0x03, 0xe1, 0xd1,
	0xb7, 0x27, 0x34, 0x16, 0xe4, 0x7f, 0x28, 0x21, 0xf3, 0xcb, 0xd6, 0x8a, 0x55, 0x2b, 0x79, 0x72,
	0x29, 0x4f, 0x04, 0xf3, 0xcb, 0x13, 0xfa, 0x44, 0x30, 0xdf, 0x59, 0x86, 0xc5, 0x9c, 0x1a, 0x71,
	0xc8, 0x83, 0x98, 0x3a, 0x1b, 0x50, 0x6e, 0x53, 0xf1, 0x04, 0x63, 0xf1, 0x22, 0xf4, 0x51, 0xd0,
	0x03, 0xd6, 0xa5, 0xb9, 0x00, 0x8e, 0x0b, 0x0b, 0x19, 0xb7, 0x75, 0x29, 0x42, 0x60, 0x52, 0xb0,
	0x2e, 0x35, 0xf7, 0xd5, 0xda, 0xa9, 0xc3, 0xcd, 0x36, 0x15, 0x0a, 0xfc, 0x25, 0x8d, 0x62, 0xc6,
	0x83, 0xfc, 0xe2, 0x2d, 0xb8, 0x95, 0xba, 0x6b, 0x4a, 0x97, 0x61, 0xba, 0xa7, 0x8f, 0x4c, 0x42,
	0xb2, 0x75, 0x62, 0x58, 0xd8, 0xf6, 0xfd, 0xb1, 0x15, 0x2a, 0xc3, 0x74, 0x44, 0x43, 0x1e, 0x51,
	0xad, 0xd2, 0x8c, 0x97, 0x6c, 0x65, 0xc4, 0xa7, 0x31, 0x93, 0x91, 0x92, 0x8e, 0x98, 0x6d, 0xa2,
	0xea, 0xe4, 0x50, 0xd5, 0x2a, 0xd8, 0x59, 0xa0, 0x46, 0xd2, 0x1e, 0x54, 0x8d, 0x3a, 0xff, 0x96,
	0x55, 0x1b, 0x16, 0x73, 0x70, 0x8d, 0x8a, 0x37, 0x60, 0x4a, 0x8d, 0xa0, 0x82, 0x9e, 0xf1, 0xf4,
	0x26, 0x63, 0x68, 0xee, 0xab, 0x2e, 0xff, 0xc5, 0xd4, 0xed, 0x82, 0x9d, 0x55, 0xe0, 0x8a, 0x34,
	0x1e, 0x82, 0x93, 0x54, 0xd9, 0x45, 0x81, 0xcf, 0x39, 0x0b, 0xc4, 0x9f, 0xf1, 0xd9, 0x83, 0xb5,
	0xc2, 0x4a, 0x86, 0xd8, 0x32, 0xcc, 0xfa, 0x28, 0xf0, 0x75, 0x28, 0xe3, 0x92, 0x5e, 0xa9, 0x36,
	0xe3, 0x81, 0x9f, 0x64, 0xc4, 0xce, 0x63, 0xc5, 0xe8, 0xf2, 0xf8, 0xa7, 0x19, 0x11, 0x98, 0x44,
	0xe6, 0xeb, 0xfc, 0x92, 0xa7, 0xd6, 0x19, 0x9c, 0xbe, 0x59, 0x8a, 0x54, 0x7e, 0x31, 0x43, 0xea,
	0x11, 0x4c, 0xc9, 0x97, 0xa4, 0xcb, 0xcd, 0x36, 0x5b, 0x0d, 0x0c, 0x59, 0x63, 0x8c, 0xc4, 0x86,
	0x3c, 0x8e, 0x1f, 0x04, 0x22, 0xea, 0x7b, 0xba, 0x82, 0xbd, 0x09, 0x30, 0x3c, 0x94, 0x94, 0x8e,
	0x69, 0x3f, 0x11, 0xee, 0x98, 0xf6, 0x65, 0x63, 0x7a, 0xd8, 0x39, 0xa1, 0x86, 0xa6, 0xde, 0x6c,
	0x4d, 0x6c, 0x5a, 0xce, 0x3e, 0xdc, 0x95, 0x90, 0x3c, 0xc2, 0x57, 0xdb, 0xcf, 0x94, 0x8e, 0x7b,
	0x3c, 0x6a, 0xa3, 0xa0, 0xa7, 0xd8, 0x7f, 0x8a, 0x87, 0x99, 0x5d, 0x11, 0xc3, 0xae, 0x08, 0xdd,
	0x95, 0x2e, 0x1e, 0x9a, 0xf9, 0x96, 0x4b, 0x67, 0x0f, 0x1a, 0xe3, 0x16, 0x4d, 0x4f, 0x4e, 0x69,
	0x30, 0x39, 0xcd, 0x8f, 0x00, 0xb3, 0x2a, 0x7d, 0x9f, 0x46, 0x3d, 0x1a, 0x91, 0x13, 0xb8, 0x96,
	0xd2, 0x87, 0x2c, 0x66, 0xeb, 0x66, 0xf8, 0xda, 0x4b, 0x79, 0x61, 0xf3, 0xa6, 0x57, 0xdf, 0xff,
	0xf8, 0xf9, 0x65, 0xa2, 0x42, 0x16, 0xdc, 0x81, 0x91, 0xbb, 0x67, 0xc8, 0xfc, 0x73, 0xb7, 0x83,
	0xb1, 0x90, 0xf2, 0x92, 0x00, 0xe6, 0x7e, 0xb3, 0x2f, 0x52, 0x49, 0xaa, 0x66, 0x18, 0xa0, 0x5d,
	0xcd, 0x0e, 0x1a, 0xc0, 0x15, 0x05, 0x68, 0x93, 0x72, 0x0a, 0xd0, 0x38, 0x1f, 0x79, 0x67, 0x01,
	0x49, 0xbb, 0x10, 0xd1, 0xbf, 0x24, 0xd7, 0x13, 0xed, 0xe5, 0xdc, 0xb8, 0x41, 0xbe, 0xa3, 0x90,
	0xd7, 0x9c, 0x25, 0x8d, 0x2c, 0x83, 0x28, 0xdc, 0x33, 0x21, 0xb1, 0x2f, 0xf0, 0xd8, 0xb2, 0xea,
	0xe4, 0x83, 0x05, 0xf3, 0x99, 0x9f, 0x17, 0xb2, 0xaa, 0x50, 0x8a, 0x3e, 0x5f, 0xb6, 0x53, 0x74,
	0xc5, 0x70, 0x59, 0x57, 0x5c, 0x56, 0xea, 0x23, 0xb8, 0x90, 0x4f, 0x16, 0xcc, 0x67, 0x7a, 0x9f,
	0x21, 0x52, 0xe4, 0xc7, 0x86, 0x48, 0xa1, 0x75, 0x26, 0xa2, 0xd8, 0x63, 0x88, 0x72, 0x0e, 0x24,
	0x6d, 0x7e, 0x64, 0xe9, 0x52, 0xb7, 0xf3, 0xda, 0x92, 0xef, 0x9a, 0x89, 0x14, 0x64, 0x94, 0x14,
	0x5f, 0x2d, 0xa8, 0x14, 0x98, 0x1d, 0xb9, 0x7d, 0x09, 0x28, 0xdf, 0x58, 0xed, 0xda, 0xe8, 0x8b,
	0x86, 0x5a, 0x53, 0x51, 0xdb, 0x20, 0xf5, 0x62, 0x6a, 0xee, 0x05, 0x73, 0x25, 0x9f, 0x35, 0xcd,
	0x3c, 0x17, 0x1b, 0xd2, 0x1c, 0xe1, 0xb6, 0x43, 0x9a, 0xa3, 0x0c, 0xd1, 0xa9, 0x28, 0x9a, 0xf3,
	0xe4, 0xfa, 0x85, 0x27, 0x35, 0x78, 0xbd, 0xdf, 0x2d, 0x58, 0x1f, 0xcf, 0x8d, 0x48, 0x73, 0x80,
	0x38, 0xb6, 0x1f, 0xda, 0xad, 0x2b, 0xe5, 0x18, 0xc2, 0xf7, 0x14, 0xe1, 0x3a, 0xa9, 0x65, 0xe8,
	0x7a, 0xa4, 0x13, 0xdd, 0xb3, 0x2e, 0x1e, 0x9e, 0xbb, 0x1d, 0x1e, 0xe1, 0x29, 0x06, 0x6f, 0xfe,
	0x53, 0xff, 0x1c, 0x5b, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x41, 0x8a, 0xe7, 0x89, 0x6f, 0x0a,
	0x00, 0x00,
}
