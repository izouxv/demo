// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/asset.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AssetType int32

const (
	AssetType_Defalut    AssetType = 0
	AssetType_Lora       AssetType = 1
	AssetType_Gateway    AssetType = 2
	AssetType_Simulators AssetType = 3
)

var AssetType_name = map[int32]string{
	0: "Defalut",
	1: "Lora",
	2: "Gateway",
	3: "Simulators",
}
var AssetType_value = map[string]int32{
	"Defalut":    0,
	"Lora":       1,
	"Gateway":    2,
	"Simulators": 3,
}

func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}
func (AssetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type State int32

const (
	State_NotUsed  State = 0
	State_InUsed   State = 1
	State_AllState State = 2
)

var State_name = map[int32]string{
	0: "NotUsed",
	1: "InUsed",
	2: "AllState",
}
var State_value = map[string]int32{
	"NotUsed":  0,
	"InUsed":   1,
	"AllState": 2,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type GetAssetBatchBaseTenantRequest struct {
	Tid  int64   `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Aids []int64 `protobuf:"varint,2,rep,packed,name=aids" json:"aids,omitempty"`
}

func (m *GetAssetBatchBaseTenantRequest) Reset()                    { *m = GetAssetBatchBaseTenantRequest{} }
func (m *GetAssetBatchBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetBatchBaseTenantRequest) ProtoMessage()               {}
func (*GetAssetBatchBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GetAssetBatchBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetAssetBatchBaseTenantRequest) GetAids() []int64 {
	if m != nil {
		return m.Aids
	}
	return nil
}

type GetAssetBatchBaseTenantResponse struct {
	Assets []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
}

func (m *GetAssetBatchBaseTenantResponse) Reset()                    { *m = GetAssetBatchBaseTenantResponse{} }
func (m *GetAssetBatchBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetBatchBaseTenantResponse) ProtoMessage()               {}
func (*GetAssetBatchBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetAssetBatchBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type AddAssetForConnectionRequest struct {
	Aid        int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Connection int64 `protobuf:"varint,2,opt,name=connection" json:"connection,omitempty"`
}

func (m *AddAssetForConnectionRequest) Reset()                    { *m = AddAssetForConnectionRequest{} }
func (m *AddAssetForConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetForConnectionRequest) ProtoMessage()               {}
func (*AddAssetForConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *AddAssetForConnectionRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *AddAssetForConnectionRequest) GetConnection() int64 {
	if m != nil {
		return m.Connection
	}
	return 0
}

type AddAssetForConnectionResponse struct {
	Aid        int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Connection int64 `protobuf:"varint,2,opt,name=connection" json:"connection,omitempty"`
}

func (m *AddAssetForConnectionResponse) Reset()                    { *m = AddAssetForConnectionResponse{} }
func (m *AddAssetForConnectionResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAssetForConnectionResponse) ProtoMessage()               {}
func (*AddAssetForConnectionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *AddAssetForConnectionResponse) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *AddAssetForConnectionResponse) GetConnection() int64 {
	if m != nil {
		return m.Connection
	}
	return 0
}

type DeleteAssetForConnectionRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *DeleteAssetForConnectionRequest) Reset()                    { *m = DeleteAssetForConnectionRequest{} }
func (m *DeleteAssetForConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetForConnectionRequest) ProtoMessage()               {}
func (*DeleteAssetForConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DeleteAssetForConnectionRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type DeleteAssetForConnectionResponse struct {
}

func (m *DeleteAssetForConnectionResponse) Reset()         { *m = DeleteAssetForConnectionResponse{} }
func (m *DeleteAssetForConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAssetForConnectionResponse) ProtoMessage()    {}
func (*DeleteAssetForConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5}
}

type UpdateAssetForConnectionRequest struct {
	Aid        int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Connection int64 `protobuf:"varint,2,opt,name=connection" json:"connection,omitempty"`
}

func (m *UpdateAssetForConnectionRequest) Reset()                    { *m = UpdateAssetForConnectionRequest{} }
func (m *UpdateAssetForConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetForConnectionRequest) ProtoMessage()               {}
func (*UpdateAssetForConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *UpdateAssetForConnectionRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *UpdateAssetForConnectionRequest) GetConnection() int64 {
	if m != nil {
		return m.Connection
	}
	return 0
}

type UpdateAssetForConnectionResponse struct {
	Aid        int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Connection int64 `protobuf:"varint,2,opt,name=connection" json:"connection,omitempty"`
}

func (m *UpdateAssetForConnectionResponse) Reset()         { *m = UpdateAssetForConnectionResponse{} }
func (m *UpdateAssetForConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAssetForConnectionResponse) ProtoMessage()    {}
func (*UpdateAssetForConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{7}
}

func (m *UpdateAssetForConnectionResponse) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *UpdateAssetForConnectionResponse) GetConnection() int64 {
	if m != nil {
		return m.Connection
	}
	return 0
}

type GetAssetForConnectionRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *GetAssetForConnectionRequest) Reset()                    { *m = GetAssetForConnectionRequest{} }
func (m *GetAssetForConnectionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForConnectionRequest) ProtoMessage()               {}
func (*GetAssetForConnectionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *GetAssetForConnectionRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type GetAssetForConnectionResponse struct {
	Aid        int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Connection int64 `protobuf:"varint,2,opt,name=connection" json:"connection,omitempty"`
}

func (m *GetAssetForConnectionResponse) Reset()                    { *m = GetAssetForConnectionResponse{} }
func (m *GetAssetForConnectionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForConnectionResponse) ProtoMessage()               {}
func (*GetAssetForConnectionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *GetAssetForConnectionResponse) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetAssetForConnectionResponse) GetConnection() int64 {
	if m != nil {
		return m.Connection
	}
	return 0
}

type ResponseGroup struct {
	Id          int64            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string           `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	CreateTime  int64            `protobuf:"varint,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	UpdateTime  int64            `protobuf:"varint,5,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	Groups      []*ResponseGroup `protobuf:"bytes,6,rep,name=groups" json:"groups,omitempty"`
}

func (m *ResponseGroup) Reset()                    { *m = ResponseGroup{} }
func (m *ResponseGroup) String() string            { return proto.CompactTextString(m) }
func (*ResponseGroup) ProtoMessage()               {}
func (*ResponseGroup) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ResponseGroup) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponseGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResponseGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResponseGroup) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ResponseGroup) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *ResponseGroup) GetGroups() []*ResponseGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GetUnBindGroupForAssetIdBaseTenantRequest struct {
	Aid     int64  `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid     int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	Count   int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Page    int32  `protobuf:"varint,4,opt,name=page" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,5,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) Reset() {
	*m = GetUnBindGroupForAssetIdBaseTenantRequest{}
}
func (m *GetUnBindGroupForAssetIdBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetUnBindGroupForAssetIdBaseTenantRequest) ProtoMessage()    {}
func (*GetUnBindGroupForAssetIdBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{11}
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetUnBindGroupForAssetIdBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type GetUnBindGroupForAssetIdBaseTenantResponse struct {
	Groups     []*ResponseGroup `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetUnBindGroupForAssetIdBaseTenantResponse) Reset() {
	*m = GetUnBindGroupForAssetIdBaseTenantResponse{}
}
func (m *GetUnBindGroupForAssetIdBaseTenantResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetUnBindGroupForAssetIdBaseTenantResponse) ProtoMessage() {}
func (*GetUnBindGroupForAssetIdBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{12}
}

func (m *GetUnBindGroupForAssetIdBaseTenantResponse) GetGroups() []*ResponseGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *GetUnBindGroupForAssetIdBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetBindGroupForAssetIdBaseTenantRequest struct {
	Aid     int64  `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid     int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	Count   int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Page    int32  `protobuf:"varint,4,opt,name=page" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,5,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) Reset() {
	*m = GetBindGroupForAssetIdBaseTenantRequest{}
}
func (m *GetBindGroupForAssetIdBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetBindGroupForAssetIdBaseTenantRequest) ProtoMessage()    {}
func (*GetBindGroupForAssetIdBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{13}
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetBindGroupForAssetIdBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type GetBindGroupForAssetIdBaseTenantResponse struct {
	Groups     []*ResponseGroup `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetBindGroupForAssetIdBaseTenantResponse) Reset() {
	*m = GetBindGroupForAssetIdBaseTenantResponse{}
}
func (m *GetBindGroupForAssetIdBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetBindGroupForAssetIdBaseTenantResponse) ProtoMessage()    {}
func (*GetBindGroupForAssetIdBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{14}
}

func (m *GetBindGroupForAssetIdBaseTenantResponse) GetGroups() []*ResponseGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *GetBindGroupForAssetIdBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type RequestAsset struct {
	Aid          int64     `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Name         string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string    `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AssetType    AssetType `protobuf:"varint,4,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	SecretKey    string    `protobuf:"bytes,5,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	DeviceId     string    `protobuf:"bytes,6,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Sn           string    `protobuf:"bytes,7,opt,name=sn" json:"sn,omitempty"`
	Model        string    `protobuf:"bytes,8,opt,name=model" json:"model,omitempty"`
	Manufacturer string    `protobuf:"bytes,9,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Mac          string    `protobuf:"bytes,10,opt,name=mac" json:"mac,omitempty"`
	Interval     int32     `protobuf:"varint,11,opt,name=interval" json:"interval,omitempty"`
}

func (m *RequestAsset) Reset()                    { *m = RequestAsset{} }
func (m *RequestAsset) String() string            { return proto.CompactTextString(m) }
func (*RequestAsset) ProtoMessage()               {}
func (*RequestAsset) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *RequestAsset) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *RequestAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestAsset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RequestAsset) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *RequestAsset) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *RequestAsset) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *RequestAsset) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *RequestAsset) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RequestAsset) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *RequestAsset) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *RequestAsset) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type ResponseAsset struct {
	Aid            int64     `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Name           string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description    string    `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	CreateTime     int64     `protobuf:"varint,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	UpdateTime     int64     `protobuf:"varint,5,opt,name=update_time,json=updateTime" json:"update_time,omitempty"`
	AssetType      AssetType `protobuf:"varint,6,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	State          State     `protobuf:"varint,7,opt,name=state,enum=api.State" json:"state,omitempty"`
	SecretKey      string    `protobuf:"bytes,8,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	Connection     bool      `protobuf:"varint,9,opt,name=connection" json:"connection,omitempty"`
	LastConnection int64     `protobuf:"varint,10,opt,name=last_connection,json=lastConnection" json:"last_connection,omitempty"`
	Tid            int64     `protobuf:"varint,11,opt,name=tid" json:"tid,omitempty"`
	DeviceId       string    `protobuf:"bytes,12,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Sn             string    `protobuf:"bytes,13,opt,name=sn" json:"sn,omitempty"`
	Model          string    `protobuf:"bytes,14,opt,name=model" json:"model,omitempty"`
	Manufacturer   string    `protobuf:"bytes,15,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Mac            string    `protobuf:"bytes,16,opt,name=mac" json:"mac,omitempty"`
	Interval       int32     `protobuf:"varint,17,opt,name=interval" json:"interval,omitempty"`
}

func (m *ResponseAsset) Reset()                    { *m = ResponseAsset{} }
func (m *ResponseAsset) String() string            { return proto.CompactTextString(m) }
func (*ResponseAsset) ProtoMessage()               {}
func (*ResponseAsset) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *ResponseAsset) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ResponseAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResponseAsset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResponseAsset) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ResponseAsset) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *ResponseAsset) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *ResponseAsset) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

func (m *ResponseAsset) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ResponseAsset) GetConnection() bool {
	if m != nil {
		return m.Connection
	}
	return false
}

func (m *ResponseAsset) GetLastConnection() int64 {
	if m != nil {
		return m.LastConnection
	}
	return 0
}

func (m *ResponseAsset) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ResponseAsset) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ResponseAsset) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *ResponseAsset) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *ResponseAsset) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *ResponseAsset) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *ResponseAsset) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type AddAssetRequest struct {
	Asset *RequestAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *AddAssetRequest) Reset()                    { *m = AddAssetRequest{} }
func (m *AddAssetRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetRequest) ProtoMessage()               {}
func (*AddAssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *AddAssetRequest) GetAsset() *RequestAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type AddAssetResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *AddAssetResponse) Reset()                    { *m = AddAssetResponse{} }
func (m *AddAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAssetResponse) ProtoMessage()               {}
func (*AddAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *AddAssetResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type AddAssetsRequest struct {
	Create []*RequestAsset `protobuf:"bytes,1,rep,name=create" json:"create,omitempty"`
}

func (m *AddAssetsRequest) Reset()                    { *m = AddAssetsRequest{} }
func (m *AddAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetsRequest) ProtoMessage()               {}
func (*AddAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *AddAssetsRequest) GetCreate() []*RequestAsset {
	if m != nil {
		return m.Create
	}
	return nil
}

type AddAssetsResponse struct {
	Asset []*ResponseAsset `protobuf:"bytes,1,rep,name=asset" json:"asset,omitempty"`
}

func (m *AddAssetsResponse) Reset()                    { *m = AddAssetsResponse{} }
func (m *AddAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAssetsResponse) ProtoMessage()               {}
func (*AddAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *AddAssetsResponse) GetAsset() []*ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type DeleteAssetRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *DeleteAssetRequest) Reset()                    { *m = DeleteAssetRequest{} }
func (m *DeleteAssetRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetRequest) ProtoMessage()               {}
func (*DeleteAssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *DeleteAssetRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type DeleteAssetResponse struct {
}

func (m *DeleteAssetResponse) Reset()                    { *m = DeleteAssetResponse{} }
func (m *DeleteAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetResponse) ProtoMessage()               {}
func (*DeleteAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

type DeleteAssetsRequest struct {
	Delete []int64 `protobuf:"varint,1,rep,packed,name=delete" json:"delete,omitempty"`
}

func (m *DeleteAssetsRequest) Reset()                    { *m = DeleteAssetsRequest{} }
func (m *DeleteAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetsRequest) ProtoMessage()               {}
func (*DeleteAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *DeleteAssetsRequest) GetDelete() []int64 {
	if m != nil {
		return m.Delete
	}
	return nil
}

type DeleteAssetsResponse struct {
}

func (m *DeleteAssetsResponse) Reset()                    { *m = DeleteAssetsResponse{} }
func (m *DeleteAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetsResponse) ProtoMessage()               {}
func (*DeleteAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

type UpdateAssetRequest struct {
	Asset *RequestAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *UpdateAssetRequest) Reset()                    { *m = UpdateAssetRequest{} }
func (m *UpdateAssetRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetRequest) ProtoMessage()               {}
func (*UpdateAssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *UpdateAssetRequest) GetAsset() *RequestAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type UpdateAssetResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *UpdateAssetResponse) Reset()                    { *m = UpdateAssetResponse{} }
func (m *UpdateAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetResponse) ProtoMessage()               {}
func (*UpdateAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *UpdateAssetResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type UpdateAssetsRequest struct {
	Update []*RequestAsset `protobuf:"bytes,1,rep,name=update" json:"update,omitempty"`
}

func (m *UpdateAssetsRequest) Reset()                    { *m = UpdateAssetsRequest{} }
func (m *UpdateAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetsRequest) ProtoMessage()               {}
func (*UpdateAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *UpdateAssetsRequest) GetUpdate() []*RequestAsset {
	if m != nil {
		return m.Update
	}
	return nil
}

type UpdateAssetsResponse struct {
	Assets []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
}

func (m *UpdateAssetsResponse) Reset()                    { *m = UpdateAssetsResponse{} }
func (m *UpdateAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetsResponse) ProtoMessage()               {}
func (*UpdateAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *UpdateAssetsResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type UpdateAssetStateRequest struct {
	Aid   int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	State State `protobuf:"varint,2,opt,name=state,enum=api.State" json:"state,omitempty"`
}

func (m *UpdateAssetStateRequest) Reset()                    { *m = UpdateAssetStateRequest{} }
func (m *UpdateAssetStateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetStateRequest) ProtoMessage()               {}
func (*UpdateAssetStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *UpdateAssetStateRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *UpdateAssetStateRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

type UpdateAssetStateResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *UpdateAssetStateResponse) Reset()                    { *m = UpdateAssetStateResponse{} }
func (m *UpdateAssetStateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetStateResponse) ProtoMessage()               {}
func (*UpdateAssetStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *UpdateAssetStateResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type GetAssetRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
}

func (m *GetAssetRequest) Reset()                    { *m = GetAssetRequest{} }
func (m *GetAssetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetRequest) ProtoMessage()               {}
func (*GetAssetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *GetAssetRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

type GetAssetResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *GetAssetResponse) Reset()                    { *m = GetAssetResponse{} }
func (m *GetAssetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetResponse) ProtoMessage()               {}
func (*GetAssetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *GetAssetResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type GetAssetsRequest struct {
	Count   int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
}

func (m *GetAssetsRequest) Reset()                    { *m = GetAssetsRequest{} }
func (m *GetAssetsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsRequest) ProtoMessage()               {}
func (*GetAssetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *GetAssetsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type GetAssetsResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetAssetsResponse) Reset()                    { *m = GetAssetsResponse{} }
func (m *GetAssetsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsResponse) ProtoMessage()               {}
func (*GetAssetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *GetAssetsResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetAssetsForStateRequest struct {
	Count   int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	State   State  `protobuf:"varint,4,opt,name=state,enum=api.State" json:"state,omitempty"`
}

func (m *GetAssetsForStateRequest) Reset()                    { *m = GetAssetsForStateRequest{} }
func (m *GetAssetsForStateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsForStateRequest) ProtoMessage()               {}
func (*GetAssetsForStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *GetAssetsForStateRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsForStateRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsForStateRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsForStateRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

type GetAssetsForStateResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetAssetsForStateResponse) Reset()                    { *m = GetAssetsForStateResponse{} }
func (m *GetAssetsForStateResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsForStateResponse) ProtoMessage()               {}
func (*GetAssetsForStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{36} }

func (m *GetAssetsForStateResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsForStateResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetAssetsForStateAndTypeRequest struct {
	Count     int32     `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy   string    `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	State     State     `protobuf:"varint,4,opt,name=state,enum=api.State" json:"state,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
}

func (m *GetAssetsForStateAndTypeRequest) Reset()         { *m = GetAssetsForStateAndTypeRequest{} }
func (m *GetAssetsForStateAndTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForStateAndTypeRequest) ProtoMessage()    {}
func (*GetAssetsForStateAndTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{37}
}

func (m *GetAssetsForStateAndTypeRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsForStateAndTypeRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsForStateAndTypeRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsForStateAndTypeRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

func (m *GetAssetsForStateAndTypeRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

type GetAssetsForStateAndTypeResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetAssetsForStateAndTypeResponse) Reset()         { *m = GetAssetsForStateAndTypeResponse{} }
func (m *GetAssetsForStateAndTypeResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForStateAndTypeResponse) ProtoMessage()    {}
func (*GetAssetsForStateAndTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{38}
}

func (m *GetAssetsForStateAndTypeResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsForStateAndTypeResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetAssetForNameRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetAssetForNameRequest) Reset()                    { *m = GetAssetForNameRequest{} }
func (m *GetAssetForNameRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForNameRequest) ProtoMessage()               {}
func (*GetAssetForNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{39} }

func (m *GetAssetForNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetAssetForNameResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *GetAssetForNameResponse) Reset()                    { *m = GetAssetForNameResponse{} }
func (m *GetAssetForNameResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForNameResponse) ProtoMessage()               {}
func (*GetAssetForNameResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{40} }

func (m *GetAssetForNameResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type GetAssetForDeviceIDRequest struct {
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *GetAssetForDeviceIDRequest) Reset()                    { *m = GetAssetForDeviceIDRequest{} }
func (m *GetAssetForDeviceIDRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForDeviceIDRequest) ProtoMessage()               {}
func (*GetAssetForDeviceIDRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{41} }

func (m *GetAssetForDeviceIDRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type GetAssetForDeviceIDResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
}

func (m *GetAssetForDeviceIDResponse) Reset()                    { *m = GetAssetForDeviceIDResponse{} }
func (m *GetAssetForDeviceIDResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetForDeviceIDResponse) ProtoMessage()               {}
func (*GetAssetForDeviceIDResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{42} }

func (m *GetAssetForDeviceIDResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type GetAssetInGroupRequest struct {
	Gid       int64     `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count     int32     `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	OrderBy   string    `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
}

func (m *GetAssetInGroupRequest) Reset()                    { *m = GetAssetInGroupRequest{} }
func (m *GetAssetInGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetInGroupRequest) ProtoMessage()               {}
func (*GetAssetInGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

func (m *GetAssetInGroupRequest) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GetAssetInGroupRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetInGroupRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetInGroupRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetInGroupRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

type GetAssetInGroupResponse struct {
	Asset      []*ResponseAsset `protobuf:"bytes,1,rep,name=asset" json:"asset,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
	Gid        int64            `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
}

func (m *GetAssetInGroupResponse) Reset()                    { *m = GetAssetInGroupResponse{} }
func (m *GetAssetInGroupResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetInGroupResponse) ProtoMessage()               {}
func (*GetAssetInGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{44} }

func (m *GetAssetInGroupResponse) GetAsset() []*ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GetAssetInGroupResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetInGroupResponse) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GetAssetsNotInGroupRequest struct {
	Gid       int64     `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count     int32     `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	OrderBy   string    `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
}

func (m *GetAssetsNotInGroupRequest) Reset()                    { *m = GetAssetsNotInGroupRequest{} }
func (m *GetAssetsNotInGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsNotInGroupRequest) ProtoMessage()               {}
func (*GetAssetsNotInGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{45} }

func (m *GetAssetsNotInGroupRequest) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GetAssetsNotInGroupRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsNotInGroupRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsNotInGroupRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsNotInGroupRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

type GetAssetsNotInGroupResponse struct {
	Asset      []*ResponseAsset `protobuf:"bytes,1,rep,name=asset" json:"asset,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=totalCount" json:"totalCount,omitempty"`
	Gid        int64            `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
}

func (m *GetAssetsNotInGroupResponse) Reset()                    { *m = GetAssetsNotInGroupResponse{} }
func (m *GetAssetsNotInGroupResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsNotInGroupResponse) ProtoMessage()               {}
func (*GetAssetsNotInGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{46} }

func (m *GetAssetsNotInGroupResponse) GetAsset() []*ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GetAssetsNotInGroupResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsNotInGroupResponse) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type AddAssetBaseTenantRequest struct {
	Asset *RequestAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64         `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *AddAssetBaseTenantRequest) Reset()                    { *m = AddAssetBaseTenantRequest{} }
func (m *AddAssetBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetBaseTenantRequest) ProtoMessage()               {}
func (*AddAssetBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{47} }

func (m *AddAssetBaseTenantRequest) GetAsset() *RequestAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *AddAssetBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type AddAssetBaseTenantResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64          `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *AddAssetBaseTenantResponse) Reset()                    { *m = AddAssetBaseTenantResponse{} }
func (m *AddAssetBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAssetBaseTenantResponse) ProtoMessage()               {}
func (*AddAssetBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{48} }

func (m *AddAssetBaseTenantResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *AddAssetBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type DeleteAssetBaseTenantRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *DeleteAssetBaseTenantRequest) Reset()                    { *m = DeleteAssetBaseTenantRequest{} }
func (m *DeleteAssetBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetBaseTenantRequest) ProtoMessage()               {}
func (*DeleteAssetBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{49} }

func (m *DeleteAssetBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *DeleteAssetBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type DeleteAssetBaseTenantResponse struct {
}

func (m *DeleteAssetBaseTenantResponse) Reset()                    { *m = DeleteAssetBaseTenantResponse{} }
func (m *DeleteAssetBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetBaseTenantResponse) ProtoMessage()               {}
func (*DeleteAssetBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{50} }

type DeleteAssetsBaseTenantRequest struct {
	Aids      []int64   `protobuf:"varint,1,rep,packed,name=aids" json:"aids,omitempty"`
	Tid       int64     `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	AssetType AssetType `protobuf:"varint,3,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
}

func (m *DeleteAssetsBaseTenantRequest) Reset()                    { *m = DeleteAssetsBaseTenantRequest{} }
func (m *DeleteAssetsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetsBaseTenantRequest) ProtoMessage()               {}
func (*DeleteAssetsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{51} }

func (m *DeleteAssetsBaseTenantRequest) GetAids() []int64 {
	if m != nil {
		return m.Aids
	}
	return nil
}

func (m *DeleteAssetsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *DeleteAssetsBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

type DeleteAssetsBaseTenantResponse struct {
}

func (m *DeleteAssetsBaseTenantResponse) Reset()                    { *m = DeleteAssetsBaseTenantResponse{} }
func (m *DeleteAssetsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAssetsBaseTenantResponse) ProtoMessage()               {}
func (*DeleteAssetsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{52} }

type UpdateAssetBaseTenantRequest struct {
	Asset *RequestAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64         `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *UpdateAssetBaseTenantRequest) Reset()                    { *m = UpdateAssetBaseTenantRequest{} }
func (m *UpdateAssetBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetBaseTenantRequest) ProtoMessage()               {}
func (*UpdateAssetBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{53} }

func (m *UpdateAssetBaseTenantRequest) GetAsset() *RequestAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *UpdateAssetBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type UpdateAssetBaseTenantResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64          `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *UpdateAssetBaseTenantResponse) Reset()                    { *m = UpdateAssetBaseTenantResponse{} }
func (m *UpdateAssetBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAssetBaseTenantResponse) ProtoMessage()               {}
func (*UpdateAssetBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{54} }

func (m *UpdateAssetBaseTenantResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *UpdateAssetBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetBaseTenantRequest struct {
	Aid int64 `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetBaseTenantRequest) Reset()                    { *m = GetAssetBaseTenantRequest{} }
func (m *GetAssetBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetBaseTenantRequest) ProtoMessage()               {}
func (*GetAssetBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{55} }

func (m *GetAssetBaseTenantRequest) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *GetAssetBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetBaseTenantResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64          `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetBaseTenantResponse) Reset()                    { *m = GetAssetBaseTenantResponse{} }
func (m *GetAssetBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetBaseTenantResponse) ProtoMessage()               {}
func (*GetAssetBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{56} }

func (m *GetAssetBaseTenantResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GetAssetBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsBaseTenantRequest struct {
	Count     int32     `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy   string    `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	State     State     `protobuf:"varint,4,opt,name=state,enum=api.State" json:"state,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	Tid       int64     `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsBaseTenantRequest) Reset()                    { *m = GetAssetsBaseTenantRequest{} }
func (m *GetAssetsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsBaseTenantRequest) ProtoMessage()               {}
func (*GetAssetsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{57} }

func (m *GetAssetsBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsBaseTenantRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

func (m *GetAssetsBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *GetAssetsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsBaseTenantResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Tid        int64            `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsBaseTenantResponse) Reset()                    { *m = GetAssetsBaseTenantResponse{} }
func (m *GetAssetsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAssetsBaseTenantResponse) ProtoMessage()               {}
func (*GetAssetsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{58} }

func (m *GetAssetsBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsInGroupBaseTenantRequest struct {
	Gid       int64     `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count     int32     `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	OrderBy   string    `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	Tid       int64     `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsInGroupBaseTenantRequest) Reset()         { *m = GetAssetsInGroupBaseTenantRequest{} }
func (m *GetAssetsInGroupBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetsInGroupBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetsInGroupBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{59}
}

func (m *GetAssetsInGroupBaseTenantRequest) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GetAssetsInGroupBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsInGroupBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsInGroupBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsInGroupBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *GetAssetsInGroupBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsBaseInGroupTenantResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Tid        int64            `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	Gid        int64            `protobuf:"varint,4,opt,name=gid" json:"gid,omitempty"`
}

func (m *GetAssetsBaseInGroupTenantResponse) Reset()         { *m = GetAssetsBaseInGroupTenantResponse{} }
func (m *GetAssetsBaseInGroupTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetsBaseInGroupTenantResponse) ProtoMessage()    {}
func (*GetAssetsBaseInGroupTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{60}
}

func (m *GetAssetsBaseInGroupTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsBaseInGroupTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsBaseInGroupTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetAssetsBaseInGroupTenantResponse) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GetAssetsNotInGroupBaseTenantRequest struct {
	Gid       int64     `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	Count     int32     `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	OrderBy   string    `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	Tid       int64     `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsNotInGroupBaseTenantRequest) Reset()         { *m = GetAssetsNotInGroupBaseTenantRequest{} }
func (m *GetAssetsNotInGroupBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetsNotInGroupBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetsNotInGroupBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{61}
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *GetAssetsNotInGroupBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsNotInGroupBaseTenantResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Tid        int64            `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	Gid        int64            `protobuf:"varint,4,opt,name=gid" json:"gid,omitempty"`
}

func (m *GetAssetsNotInGroupBaseTenantResponse) Reset()         { *m = GetAssetsNotInGroupBaseTenantResponse{} }
func (m *GetAssetsNotInGroupBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetsNotInGroupBaseTenantResponse) ProtoMessage()    {}
func (*GetAssetsNotInGroupBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{62}
}

func (m *GetAssetsNotInGroupBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsNotInGroupBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsNotInGroupBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetAssetsNotInGroupBaseTenantResponse) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GetAssetForNameBaseTenantRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tid  int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetForNameBaseTenantRequest) Reset()         { *m = GetAssetForNameBaseTenantRequest{} }
func (m *GetAssetForNameBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetForNameBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetForNameBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{63}
}

func (m *GetAssetForNameBaseTenantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetAssetForNameBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetForNameBaseTenantResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64          `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetForNameBaseTenantResponse) Reset()         { *m = GetAssetForNameBaseTenantResponse{} }
func (m *GetAssetForNameBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetForNameBaseTenantResponse) ProtoMessage()    {}
func (*GetAssetForNameBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{64}
}

func (m *GetAssetForNameBaseTenantResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GetAssetForNameBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetForDeviceIDBaseTenantRequest struct {
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Tid      int64  `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetForDeviceIDBaseTenantRequest) Reset()         { *m = GetAssetForDeviceIDBaseTenantRequest{} }
func (m *GetAssetForDeviceIDBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetForDeviceIDBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetForDeviceIDBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{65}
}

func (m *GetAssetForDeviceIDBaseTenantRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *GetAssetForDeviceIDBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetForDeviceIDBaseTenantResponse struct {
	Asset *ResponseAsset `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Tid   int64          `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetForDeviceIDBaseTenantResponse) Reset()         { *m = GetAssetForDeviceIDBaseTenantResponse{} }
func (m *GetAssetForDeviceIDBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetForDeviceIDBaseTenantResponse) ProtoMessage()    {}
func (*GetAssetForDeviceIDBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{66}
}

func (m *GetAssetForDeviceIDBaseTenantResponse) GetAsset() *ResponseAsset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *GetAssetForDeviceIDBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type AddAssetsBaseTenantRequest struct {
	Assets []*RequestAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	Tid    int64           `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *AddAssetsBaseTenantRequest) Reset()                    { *m = AddAssetsBaseTenantRequest{} }
func (m *AddAssetsBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetsBaseTenantRequest) ProtoMessage()               {}
func (*AddAssetsBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{67} }

func (m *AddAssetsBaseTenantRequest) GetAssets() []*RequestAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *AddAssetsBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type AddAssetsBaseTenantResponse struct {
	Assets []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	Tid    int64            `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
}

func (m *AddAssetsBaseTenantResponse) Reset()                    { *m = AddAssetsBaseTenantResponse{} }
func (m *AddAssetsBaseTenantResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAssetsBaseTenantResponse) ProtoMessage()               {}
func (*AddAssetsBaseTenantResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{68} }

func (m *AddAssetsBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *AddAssetsBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type GetAssetsForKeywordBaseTenantRequest struct {
	Count     int32     `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy   string    `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	State     State     `protobuf:"varint,4,opt,name=state,enum=api.State" json:"state,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	Tid       int64     `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
	Keyword   string    `protobuf:"bytes,7,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *GetAssetsForKeywordBaseTenantRequest) Reset()         { *m = GetAssetsForKeywordBaseTenantRequest{} }
func (m *GetAssetsForKeywordBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForKeywordBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetsForKeywordBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{69}
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetAssetsForKeywordBaseTenantRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type GetAssetsForKeywordBaseTenantResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Tid        int64            `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsForKeywordBaseTenantResponse) Reset()         { *m = GetAssetsForKeywordBaseTenantResponse{} }
func (m *GetAssetsForKeywordBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForKeywordBaseTenantResponse) ProtoMessage()    {}
func (*GetAssetsForKeywordBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{70}
}

func (m *GetAssetsForKeywordBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsForKeywordBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsForKeywordBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

type RequestAssetBatch struct {
	Aid          int64     `protobuf:"varint,1,opt,name=aid" json:"aid,omitempty"`
	Name         string    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  string    `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AssetType    AssetType `protobuf:"varint,4,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	SecretKey    string    `protobuf:"bytes,5,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	DeviceId     string    `protobuf:"bytes,6,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Sn           string    `protobuf:"bytes,7,opt,name=sn" json:"sn,omitempty"`
	Model        string    `protobuf:"bytes,8,opt,name=model" json:"model,omitempty"`
	Manufacturer string    `protobuf:"bytes,9,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Mac          string    `protobuf:"bytes,10,opt,name=mac" json:"mac,omitempty"`
	Interval     int32     `protobuf:"varint,11,opt,name=interval" json:"interval,omitempty"`
	Deveui       string    `protobuf:"bytes,12,opt,name=Deveui" json:"Deveui,omitempty"`
	AppKey       string    `protobuf:"bytes,13,opt,name=AppKey" json:"AppKey,omitempty"`
	RxDelay      int32     `protobuf:"varint,14,opt,name=RxDelay" json:"RxDelay,omitempty"`
	Rx1DrOffset  int32     `protobuf:"varint,15,opt,name=Rx1DrOffset" json:"Rx1DrOffset,omitempty"`
	RxWindow     int32     `protobuf:"varint,16,opt,name=RxWindow" json:"RxWindow,omitempty"`
	Rx2Dr        int32     `protobuf:"varint,17,opt,name=Rx2Dr" json:"Rx2Dr,omitempty"`
	AppsKey      string    `protobuf:"bytes,18,opt,name=AppsKey" json:"AppsKey,omitempty"`
	NwksKey      string    `protobuf:"bytes,19,opt,name=NwksKey" json:"NwksKey,omitempty"`
	DevAddr      string    `protobuf:"bytes,20,opt,name=DevAddr" json:"DevAddr,omitempty"`
	RelaxFCnt    bool      `protobuf:"varint,21,opt,name=RelaxFCnt" json:"RelaxFCnt,omitempty"`
	IsAbp        bool      `protobuf:"varint,22,opt,name=IsAbp" json:"IsAbp,omitempty"`
	IsClassc     bool      `protobuf:"varint,23,opt,name=IsClassc" json:"IsClassc,omitempty"`
	AdrInterval  int32     `protobuf:"varint,24,opt,name=AdrInterval" json:"AdrInterval,omitempty"`
	Appeui       string    `protobuf:"bytes,25,opt,name=Appeui" json:"Appeui,omitempty"`
}

func (m *RequestAssetBatch) Reset()                    { *m = RequestAssetBatch{} }
func (m *RequestAssetBatch) String() string            { return proto.CompactTextString(m) }
func (*RequestAssetBatch) ProtoMessage()               {}
func (*RequestAssetBatch) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{71} }

func (m *RequestAssetBatch) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *RequestAssetBatch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestAssetBatch) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RequestAssetBatch) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *RequestAssetBatch) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *RequestAssetBatch) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *RequestAssetBatch) GetSn() string {
	if m != nil {
		return m.Sn
	}
	return ""
}

func (m *RequestAssetBatch) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RequestAssetBatch) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *RequestAssetBatch) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *RequestAssetBatch) GetInterval() int32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *RequestAssetBatch) GetDeveui() string {
	if m != nil {
		return m.Deveui
	}
	return ""
}

func (m *RequestAssetBatch) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

func (m *RequestAssetBatch) GetRxDelay() int32 {
	if m != nil {
		return m.RxDelay
	}
	return 0
}

func (m *RequestAssetBatch) GetRx1DrOffset() int32 {
	if m != nil {
		return m.Rx1DrOffset
	}
	return 0
}

func (m *RequestAssetBatch) GetRxWindow() int32 {
	if m != nil {
		return m.RxWindow
	}
	return 0
}

func (m *RequestAssetBatch) GetRx2Dr() int32 {
	if m != nil {
		return m.Rx2Dr
	}
	return 0
}

func (m *RequestAssetBatch) GetAppsKey() string {
	if m != nil {
		return m.AppsKey
	}
	return ""
}

func (m *RequestAssetBatch) GetNwksKey() string {
	if m != nil {
		return m.NwksKey
	}
	return ""
}

func (m *RequestAssetBatch) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *RequestAssetBatch) GetRelaxFCnt() bool {
	if m != nil {
		return m.RelaxFCnt
	}
	return false
}

func (m *RequestAssetBatch) GetIsAbp() bool {
	if m != nil {
		return m.IsAbp
	}
	return false
}

func (m *RequestAssetBatch) GetIsClassc() bool {
	if m != nil {
		return m.IsClassc
	}
	return false
}

func (m *RequestAssetBatch) GetAdrInterval() int32 {
	if m != nil {
		return m.AdrInterval
	}
	return 0
}

func (m *RequestAssetBatch) GetAppeui() string {
	if m != nil {
		return m.Appeui
	}
	return ""
}

type AddAssetBatchBaseTenantRequest struct {
	Assets    []*RequestAssetBatch `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	Tid       int64                `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	AssetType AssetType            `protobuf:"varint,3,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
}

func (m *AddAssetBatchBaseTenantRequest) Reset()                    { *m = AddAssetBatchBaseTenantRequest{} }
func (m *AddAssetBatchBaseTenantRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAssetBatchBaseTenantRequest) ProtoMessage()               {}
func (*AddAssetBatchBaseTenantRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{72} }

func (m *AddAssetBatchBaseTenantRequest) GetAssets() []*RequestAssetBatch {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *AddAssetBatchBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *AddAssetBatchBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

type AddAssetBatchBaseTenantResponse struct {
}

func (m *AddAssetBatchBaseTenantResponse) Reset()         { *m = AddAssetBatchBaseTenantResponse{} }
func (m *AddAssetBatchBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*AddAssetBatchBaseTenantResponse) ProtoMessage()    {}
func (*AddAssetBatchBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{73}
}

type GetAssetsForKeywordMoreBaseTenantRequest struct {
	Count     int32     `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Page      int32     `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	OrderBy   string    `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	State     State     `protobuf:"varint,4,opt,name=state,enum=api.State" json:"state,omitempty"`
	AssetType AssetType `protobuf:"varint,5,opt,name=asset_type,json=assetType,enum=api.AssetType" json:"asset_type,omitempty"`
	Tid       int64     `protobuf:"varint,6,opt,name=tid" json:"tid,omitempty"`
	Keyword   string    `protobuf:"bytes,7,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) Reset() {
	*m = GetAssetsForKeywordMoreBaseTenantRequest{}
}
func (m *GetAssetsForKeywordMoreBaseTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForKeywordMoreBaseTenantRequest) ProtoMessage()    {}
func (*GetAssetsForKeywordMoreBaseTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{74}
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NotUsed
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_Defalut
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *GetAssetsForKeywordMoreBaseTenantRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type GetAssetsForKeywordMoreBaseTenantResponse struct {
	Assets     []*ResponseAsset `protobuf:"bytes,1,rep,name=assets" json:"assets,omitempty"`
	TotalCount int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Tid        int64            `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
}

func (m *GetAssetsForKeywordMoreBaseTenantResponse) Reset() {
	*m = GetAssetsForKeywordMoreBaseTenantResponse{}
}
func (m *GetAssetsForKeywordMoreBaseTenantResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetsForKeywordMoreBaseTenantResponse) ProtoMessage()    {}
func (*GetAssetsForKeywordMoreBaseTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{75}
}

func (m *GetAssetsForKeywordMoreBaseTenantResponse) GetAssets() []*ResponseAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *GetAssetsForKeywordMoreBaseTenantResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetAssetsForKeywordMoreBaseTenantResponse) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAssetBatchBaseTenantRequest)(nil), "api.GetAssetBatchBaseTenantRequest")
	proto.RegisterType((*GetAssetBatchBaseTenantResponse)(nil), "api.GetAssetBatchBaseTenantResponse")
	proto.RegisterType((*AddAssetForConnectionRequest)(nil), "api.AddAssetForConnectionRequest")
	proto.RegisterType((*AddAssetForConnectionResponse)(nil), "api.AddAssetForConnectionResponse")
	proto.RegisterType((*DeleteAssetForConnectionRequest)(nil), "api.DeleteAssetForConnectionRequest")
	proto.RegisterType((*DeleteAssetForConnectionResponse)(nil), "api.DeleteAssetForConnectionResponse")
	proto.RegisterType((*UpdateAssetForConnectionRequest)(nil), "api.UpdateAssetForConnectionRequest")
	proto.RegisterType((*UpdateAssetForConnectionResponse)(nil), "api.UpdateAssetForConnectionResponse")
	proto.RegisterType((*GetAssetForConnectionRequest)(nil), "api.GetAssetForConnectionRequest")
	proto.RegisterType((*GetAssetForConnectionResponse)(nil), "api.GetAssetForConnectionResponse")
	proto.RegisterType((*ResponseGroup)(nil), "api.ResponseGroup")
	proto.RegisterType((*GetUnBindGroupForAssetIdBaseTenantRequest)(nil), "api.GetUnBindGroupForAssetIdBaseTenantRequest")
	proto.RegisterType((*GetUnBindGroupForAssetIdBaseTenantResponse)(nil), "api.GetUnBindGroupForAssetIdBaseTenantResponse")
	proto.RegisterType((*GetBindGroupForAssetIdBaseTenantRequest)(nil), "api.GetBindGroupForAssetIdBaseTenantRequest")
	proto.RegisterType((*GetBindGroupForAssetIdBaseTenantResponse)(nil), "api.GetBindGroupForAssetIdBaseTenantResponse")
	proto.RegisterType((*RequestAsset)(nil), "api.RequestAsset")
	proto.RegisterType((*ResponseAsset)(nil), "api.ResponseAsset")
	proto.RegisterType((*AddAssetRequest)(nil), "api.AddAssetRequest")
	proto.RegisterType((*AddAssetResponse)(nil), "api.AddAssetResponse")
	proto.RegisterType((*AddAssetsRequest)(nil), "api.AddAssetsRequest")
	proto.RegisterType((*AddAssetsResponse)(nil), "api.AddAssetsResponse")
	proto.RegisterType((*DeleteAssetRequest)(nil), "api.DeleteAssetRequest")
	proto.RegisterType((*DeleteAssetResponse)(nil), "api.DeleteAssetResponse")
	proto.RegisterType((*DeleteAssetsRequest)(nil), "api.DeleteAssetsRequest")
	proto.RegisterType((*DeleteAssetsResponse)(nil), "api.DeleteAssetsResponse")
	proto.RegisterType((*UpdateAssetRequest)(nil), "api.UpdateAssetRequest")
	proto.RegisterType((*UpdateAssetResponse)(nil), "api.UpdateAssetResponse")
	proto.RegisterType((*UpdateAssetsRequest)(nil), "api.UpdateAssetsRequest")
	proto.RegisterType((*UpdateAssetsResponse)(nil), "api.UpdateAssetsResponse")
	proto.RegisterType((*UpdateAssetStateRequest)(nil), "api.UpdateAssetStateRequest")
	proto.RegisterType((*UpdateAssetStateResponse)(nil), "api.UpdateAssetStateResponse")
	proto.RegisterType((*GetAssetRequest)(nil), "api.GetAssetRequest")
	proto.RegisterType((*GetAssetResponse)(nil), "api.GetAssetResponse")
	proto.RegisterType((*GetAssetsRequest)(nil), "api.GetAssetsRequest")
	proto.RegisterType((*GetAssetsResponse)(nil), "api.GetAssetsResponse")
	proto.RegisterType((*GetAssetsForStateRequest)(nil), "api.GetAssetsForStateRequest")
	proto.RegisterType((*GetAssetsForStateResponse)(nil), "api.GetAssetsForStateResponse")
	proto.RegisterType((*GetAssetsForStateAndTypeRequest)(nil), "api.GetAssetsForStateAndTypeRequest")
	proto.RegisterType((*GetAssetsForStateAndTypeResponse)(nil), "api.GetAssetsForStateAndTypeResponse")
	proto.RegisterType((*GetAssetForNameRequest)(nil), "api.GetAssetForNameRequest")
	proto.RegisterType((*GetAssetForNameResponse)(nil), "api.GetAssetForNameResponse")
	proto.RegisterType((*GetAssetForDeviceIDRequest)(nil), "api.GetAssetForDeviceIDRequest")
	proto.RegisterType((*GetAssetForDeviceIDResponse)(nil), "api.GetAssetForDeviceIDResponse")
	proto.RegisterType((*GetAssetInGroupRequest)(nil), "api.GetAssetInGroupRequest")
	proto.RegisterType((*GetAssetInGroupResponse)(nil), "api.GetAssetInGroupResponse")
	proto.RegisterType((*GetAssetsNotInGroupRequest)(nil), "api.GetAssetsNotInGroupRequest")
	proto.RegisterType((*GetAssetsNotInGroupResponse)(nil), "api.GetAssetsNotInGroupResponse")
	proto.RegisterType((*AddAssetBaseTenantRequest)(nil), "api.AddAssetBaseTenantRequest")
	proto.RegisterType((*AddAssetBaseTenantResponse)(nil), "api.AddAssetBaseTenantResponse")
	proto.RegisterType((*DeleteAssetBaseTenantRequest)(nil), "api.DeleteAssetBaseTenantRequest")
	proto.RegisterType((*DeleteAssetBaseTenantResponse)(nil), "api.DeleteAssetBaseTenantResponse")
	proto.RegisterType((*DeleteAssetsBaseTenantRequest)(nil), "api.DeleteAssetsBaseTenantRequest")
	proto.RegisterType((*DeleteAssetsBaseTenantResponse)(nil), "api.DeleteAssetsBaseTenantResponse")
	proto.RegisterType((*UpdateAssetBaseTenantRequest)(nil), "api.UpdateAssetBaseTenantRequest")
	proto.RegisterType((*UpdateAssetBaseTenantResponse)(nil), "api.UpdateAssetBaseTenantResponse")
	proto.RegisterType((*GetAssetBaseTenantRequest)(nil), "api.GetAssetBaseTenantRequest")
	proto.RegisterType((*GetAssetBaseTenantResponse)(nil), "api.GetAssetBaseTenantResponse")
	proto.RegisterType((*GetAssetsBaseTenantRequest)(nil), "api.GetAssetsBaseTenantRequest")
	proto.RegisterType((*GetAssetsBaseTenantResponse)(nil), "api.GetAssetsBaseTenantResponse")
	proto.RegisterType((*GetAssetsInGroupBaseTenantRequest)(nil), "api.GetAssetsInGroupBaseTenantRequest")
	proto.RegisterType((*GetAssetsBaseInGroupTenantResponse)(nil), "api.GetAssetsBaseInGroupTenantResponse")
	proto.RegisterType((*GetAssetsNotInGroupBaseTenantRequest)(nil), "api.GetAssetsNotInGroupBaseTenantRequest")
	proto.RegisterType((*GetAssetsNotInGroupBaseTenantResponse)(nil), "api.GetAssetsNotInGroupBaseTenantResponse")
	proto.RegisterType((*GetAssetForNameBaseTenantRequest)(nil), "api.GetAssetForNameBaseTenantRequest")
	proto.RegisterType((*GetAssetForNameBaseTenantResponse)(nil), "api.GetAssetForNameBaseTenantResponse")
	proto.RegisterType((*GetAssetForDeviceIDBaseTenantRequest)(nil), "api.GetAssetForDeviceIDBaseTenantRequest")
	proto.RegisterType((*GetAssetForDeviceIDBaseTenantResponse)(nil), "api.GetAssetForDeviceIDBaseTenantResponse")
	proto.RegisterType((*AddAssetsBaseTenantRequest)(nil), "api.AddAssetsBaseTenantRequest")
	proto.RegisterType((*AddAssetsBaseTenantResponse)(nil), "api.AddAssetsBaseTenantResponse")
	proto.RegisterType((*GetAssetsForKeywordBaseTenantRequest)(nil), "api.GetAssetsForKeywordBaseTenantRequest")
	proto.RegisterType((*GetAssetsForKeywordBaseTenantResponse)(nil), "api.GetAssetsForKeywordBaseTenantResponse")
	proto.RegisterType((*RequestAssetBatch)(nil), "api.RequestAssetBatch")
	proto.RegisterType((*AddAssetBatchBaseTenantRequest)(nil), "api.AddAssetBatchBaseTenantRequest")
	proto.RegisterType((*AddAssetBatchBaseTenantResponse)(nil), "api.AddAssetBatchBaseTenantResponse")
	proto.RegisterType((*GetAssetsForKeywordMoreBaseTenantRequest)(nil), "api.GetAssetsForKeywordMoreBaseTenantRequest")
	proto.RegisterType((*GetAssetsForKeywordMoreBaseTenantResponse)(nil), "api.GetAssetsForKeywordMoreBaseTenantResponse")
	proto.RegisterEnum("api.AssetType", AssetType_name, AssetType_value)
	proto.RegisterEnum("api.State", State_name, State_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AssetServer service

type AssetServerClient interface {
	// 添加单个资产
	AddAsset(ctx context.Context, in *AddAssetRequest, opts ...grpc.CallOption) (*AddAssetResponse, error)
	// 批量添加资产
	AddAssets(ctx context.Context, in *AddAssetsRequest, opts ...grpc.CallOption) (*AddAssetsResponse, error)
	// 删除单个资产
	DeleteAsset(ctx context.Context, in *DeleteAssetRequest, opts ...grpc.CallOption) (*DeleteAssetResponse, error)
	// 批量删除资产
	DeleteAssets(ctx context.Context, in *DeleteAssetsRequest, opts ...grpc.CallOption) (*DeleteAssetsResponse, error)
	// 修改单个资产
	UpdateAsset(ctx context.Context, in *UpdateAssetRequest, opts ...grpc.CallOption) (*UpdateAssetResponse, error)
	// 批量修改资产
	UpdateAssets(ctx context.Context, in *UpdateAssetsRequest, opts ...grpc.CallOption) (*UpdateAssetsResponse, error)
	// 修改资产状态
	UpdateAssetsState(ctx context.Context, in *UpdateAssetStateRequest, opts ...grpc.CallOption) (*UpdateAssetStateResponse, error)
	// 获取单个资产
	GetAsset(ctx context.Context, in *GetAssetRequest, opts ...grpc.CallOption) (*GetAssetResponse, error)
	// 分页查询资产
	GetAssets(ctx context.Context, in *GetAssetsRequest, opts ...grpc.CallOption) (*GetAssetsResponse, error)
	// 基于状态查询
	GetAssetsForState(ctx context.Context, in *GetAssetsForStateRequest, opts ...grpc.CallOption) (*GetAssetsForStateResponse, error)
	// 基于状态和类型查询
	GetAssetsForStateAndType(ctx context.Context, in *GetAssetsForStateAndTypeRequest, opts ...grpc.CallOption) (*GetAssetsForStateAndTypeResponse, error)
	// 获取组下绑定的资产
	GetAssetInGroup(ctx context.Context, in *GetAssetInGroupRequest, opts ...grpc.CallOption) (*GetAssetInGroupResponse, error)
	// 获取组下未绑定的资产
	GetAssetsNotInGroup(ctx context.Context, in *GetAssetsNotInGroupRequest, opts ...grpc.CallOption) (*GetAssetsNotInGroupResponse, error)
	// 基于资产名称查询资产
	GetAssetForName(ctx context.Context, in *GetAssetForNameRequest, opts ...grpc.CallOption) (*GetAssetForNameResponse, error)
	// 基于资产设备ID查询资产
	GetAssetForDeviceID(ctx context.Context, in *GetAssetForDeviceIDRequest, opts ...grpc.CallOption) (*GetAssetForDeviceIDResponse, error)
	// 基于租户添加资产
	AddAssetBaseTenant(ctx context.Context, in *AddAssetBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetBaseTenantResponse, error)
	// 基于租户删除资产
	DeleteAssetBaseTenant(ctx context.Context, in *DeleteAssetBaseTenantRequest, opts ...grpc.CallOption) (*DeleteAssetBaseTenantResponse, error)
	// 基于租户批量删除资产
	DeleteAssetsBaseTenant(ctx context.Context, in *DeleteAssetsBaseTenantRequest, opts ...grpc.CallOption) (*DeleteAssetsBaseTenantResponse, error)
	// 基于租户修改资产
	UpdateAssetBaseTenant(ctx context.Context, in *UpdateAssetBaseTenantRequest, opts ...grpc.CallOption) (*UpdateAssetBaseTenantResponse, error)
	// 基于租户获取资产
	GetAssetBaseTenant(ctx context.Context, in *GetAssetBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetBaseTenantResponse, error)
	// 基于租户获取资产列表
	GetAssetsBaseTenant(ctx context.Context, in *GetAssetsBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsBaseTenantResponse, error)
	// 基于租户获取组下绑定的资产
	GetAssetsInGroupBaseTenant(ctx context.Context, in *GetAssetsInGroupBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsBaseInGroupTenantResponse, error)
	// 基于租户获取未绑定改组的资产
	GetAssetsNotInGroupBaseTenant(ctx context.Context, in *GetAssetsNotInGroupBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsNotInGroupBaseTenantResponse, error)
	// 基于租户、资产名称查询资产
	GetAssetForNameBaseTenant(ctx context.Context, in *GetAssetForNameBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetForNameBaseTenantResponse, error)
	// 基于租户、资产设备ID查询资产
	GetAssetForDeviceIDBaseTenant(ctx context.Context, in *GetAssetForDeviceIDBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetForDeviceIDBaseTenantResponse, error)
	// 基于租户、批量添加资产
	AddAssetsBaseTenant(ctx context.Context, in *AddAssetsBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetsBaseTenantResponse, error)
	// 基于租户查询资产下绑定的群组
	GetBindGroupForAssetIdBaseTenant(ctx context.Context, in *GetBindGroupForAssetIdBaseTenantRequest, opts ...grpc.CallOption) (*GetBindGroupForAssetIdBaseTenantResponse, error)
	// 基于租户查询资产下未绑定的群组
	GetUnBindGroupForAssetIdBaseTenant(ctx context.Context, in *GetUnBindGroupForAssetIdBaseTenantRequest, opts ...grpc.CallOption) (*GetUnBindGroupForAssetIdBaseTenantResponse, error)
	// 基于租户模糊获取资产列表
	GetAssetsForKeywordBaseTenant(ctx context.Context, in *GetAssetsForKeywordBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsForKeywordBaseTenantResponse, error)
	// 基于租户批量添加资产
	AddAssetBatchBaseTenant(ctx context.Context, in *AddAssetBatchBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetBatchBaseTenantResponse, error)
	// 增加资产lastConnection字段
	AddAssetForConnection(ctx context.Context, in *AddAssetForConnectionRequest, opts ...grpc.CallOption) (*AddAssetForConnectionResponse, error)
	// 删除资产lastConnection字段
	DeleteAssetForConnection(ctx context.Context, in *DeleteAssetForConnectionRequest, opts ...grpc.CallOption) (*DeleteAssetForConnectionResponse, error)
	// 修改资产lastConnection字段
	UpdateAssetForConnection(ctx context.Context, in *UpdateAssetForConnectionRequest, opts ...grpc.CallOption) (*UpdateAssetForConnectionResponse, error)
	// 查询资产lastConnection字段
	GetAssetForConnection(ctx context.Context, in *GetAssetForConnectionRequest, opts ...grpc.CallOption) (*GetAssetForConnectionResponse, error)
	// 批量导出资产
	GetAssetBatchBaseTenant(ctx context.Context, in *GetAssetBatchBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetBatchBaseTenantResponse, error)
	GetAssetsForKeywordMoreBaseTenant(ctx context.Context, in *GetAssetsForKeywordMoreBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsForKeywordMoreBaseTenantResponse, error)
}

type assetServerClient struct {
	cc *grpc.ClientConn
}

func NewAssetServerClient(cc *grpc.ClientConn) AssetServerClient {
	return &assetServerClient{cc}
}

func (c *assetServerClient) AddAsset(ctx context.Context, in *AddAssetRequest, opts ...grpc.CallOption) (*AddAssetResponse, error) {
	out := new(AddAssetResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAsset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) AddAssets(ctx context.Context, in *AddAssetsRequest, opts ...grpc.CallOption) (*AddAssetsResponse, error) {
	out := new(AddAssetsResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) DeleteAsset(ctx context.Context, in *DeleteAssetRequest, opts ...grpc.CallOption) (*DeleteAssetResponse, error) {
	out := new(DeleteAssetResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/DeleteAsset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) DeleteAssets(ctx context.Context, in *DeleteAssetsRequest, opts ...grpc.CallOption) (*DeleteAssetsResponse, error) {
	out := new(DeleteAssetsResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/DeleteAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) UpdateAsset(ctx context.Context, in *UpdateAssetRequest, opts ...grpc.CallOption) (*UpdateAssetResponse, error) {
	out := new(UpdateAssetResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/UpdateAsset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) UpdateAssets(ctx context.Context, in *UpdateAssetsRequest, opts ...grpc.CallOption) (*UpdateAssetsResponse, error) {
	out := new(UpdateAssetsResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/UpdateAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) UpdateAssetsState(ctx context.Context, in *UpdateAssetStateRequest, opts ...grpc.CallOption) (*UpdateAssetStateResponse, error) {
	out := new(UpdateAssetStateResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/UpdateAssetsState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAsset(ctx context.Context, in *GetAssetRequest, opts ...grpc.CallOption) (*GetAssetResponse, error) {
	out := new(GetAssetResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAsset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssets(ctx context.Context, in *GetAssetsRequest, opts ...grpc.CallOption) (*GetAssetsResponse, error) {
	out := new(GetAssetsResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsForState(ctx context.Context, in *GetAssetsForStateRequest, opts ...grpc.CallOption) (*GetAssetsForStateResponse, error) {
	out := new(GetAssetsForStateResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsForState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsForStateAndType(ctx context.Context, in *GetAssetsForStateAndTypeRequest, opts ...grpc.CallOption) (*GetAssetsForStateAndTypeResponse, error) {
	out := new(GetAssetsForStateAndTypeResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsForStateAndType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetInGroup(ctx context.Context, in *GetAssetInGroupRequest, opts ...grpc.CallOption) (*GetAssetInGroupResponse, error) {
	out := new(GetAssetInGroupResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetInGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsNotInGroup(ctx context.Context, in *GetAssetsNotInGroupRequest, opts ...grpc.CallOption) (*GetAssetsNotInGroupResponse, error) {
	out := new(GetAssetsNotInGroupResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsNotInGroup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetForName(ctx context.Context, in *GetAssetForNameRequest, opts ...grpc.CallOption) (*GetAssetForNameResponse, error) {
	out := new(GetAssetForNameResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetForName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetForDeviceID(ctx context.Context, in *GetAssetForDeviceIDRequest, opts ...grpc.CallOption) (*GetAssetForDeviceIDResponse, error) {
	out := new(GetAssetForDeviceIDResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetForDeviceID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) AddAssetBaseTenant(ctx context.Context, in *AddAssetBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetBaseTenantResponse, error) {
	out := new(AddAssetBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAssetBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) DeleteAssetBaseTenant(ctx context.Context, in *DeleteAssetBaseTenantRequest, opts ...grpc.CallOption) (*DeleteAssetBaseTenantResponse, error) {
	out := new(DeleteAssetBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/DeleteAssetBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) DeleteAssetsBaseTenant(ctx context.Context, in *DeleteAssetsBaseTenantRequest, opts ...grpc.CallOption) (*DeleteAssetsBaseTenantResponse, error) {
	out := new(DeleteAssetsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/DeleteAssetsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) UpdateAssetBaseTenant(ctx context.Context, in *UpdateAssetBaseTenantRequest, opts ...grpc.CallOption) (*UpdateAssetBaseTenantResponse, error) {
	out := new(UpdateAssetBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/UpdateAssetBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetBaseTenant(ctx context.Context, in *GetAssetBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetBaseTenantResponse, error) {
	out := new(GetAssetBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsBaseTenant(ctx context.Context, in *GetAssetsBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsBaseTenantResponse, error) {
	out := new(GetAssetsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsInGroupBaseTenant(ctx context.Context, in *GetAssetsInGroupBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsBaseInGroupTenantResponse, error) {
	out := new(GetAssetsBaseInGroupTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsInGroupBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsNotInGroupBaseTenant(ctx context.Context, in *GetAssetsNotInGroupBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsNotInGroupBaseTenantResponse, error) {
	out := new(GetAssetsNotInGroupBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsNotInGroupBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetForNameBaseTenant(ctx context.Context, in *GetAssetForNameBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetForNameBaseTenantResponse, error) {
	out := new(GetAssetForNameBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetForNameBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetForDeviceIDBaseTenant(ctx context.Context, in *GetAssetForDeviceIDBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetForDeviceIDBaseTenantResponse, error) {
	out := new(GetAssetForDeviceIDBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetForDeviceIDBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) AddAssetsBaseTenant(ctx context.Context, in *AddAssetsBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetsBaseTenantResponse, error) {
	out := new(AddAssetsBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAssetsBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetBindGroupForAssetIdBaseTenant(ctx context.Context, in *GetBindGroupForAssetIdBaseTenantRequest, opts ...grpc.CallOption) (*GetBindGroupForAssetIdBaseTenantResponse, error) {
	out := new(GetBindGroupForAssetIdBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetBindGroupForAssetIdBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetUnBindGroupForAssetIdBaseTenant(ctx context.Context, in *GetUnBindGroupForAssetIdBaseTenantRequest, opts ...grpc.CallOption) (*GetUnBindGroupForAssetIdBaseTenantResponse, error) {
	out := new(GetUnBindGroupForAssetIdBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetUnBindGroupForAssetIdBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsForKeywordBaseTenant(ctx context.Context, in *GetAssetsForKeywordBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsForKeywordBaseTenantResponse, error) {
	out := new(GetAssetsForKeywordBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsForKeywordBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) AddAssetBatchBaseTenant(ctx context.Context, in *AddAssetBatchBaseTenantRequest, opts ...grpc.CallOption) (*AddAssetBatchBaseTenantResponse, error) {
	out := new(AddAssetBatchBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAssetBatchBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) AddAssetForConnection(ctx context.Context, in *AddAssetForConnectionRequest, opts ...grpc.CallOption) (*AddAssetForConnectionResponse, error) {
	out := new(AddAssetForConnectionResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/AddAssetForConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) DeleteAssetForConnection(ctx context.Context, in *DeleteAssetForConnectionRequest, opts ...grpc.CallOption) (*DeleteAssetForConnectionResponse, error) {
	out := new(DeleteAssetForConnectionResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/DeleteAssetForConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) UpdateAssetForConnection(ctx context.Context, in *UpdateAssetForConnectionRequest, opts ...grpc.CallOption) (*UpdateAssetForConnectionResponse, error) {
	out := new(UpdateAssetForConnectionResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/UpdateAssetForConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetForConnection(ctx context.Context, in *GetAssetForConnectionRequest, opts ...grpc.CallOption) (*GetAssetForConnectionResponse, error) {
	out := new(GetAssetForConnectionResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetForConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetBatchBaseTenant(ctx context.Context, in *GetAssetBatchBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetBatchBaseTenantResponse, error) {
	out := new(GetAssetBatchBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetBatchBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServerClient) GetAssetsForKeywordMoreBaseTenant(ctx context.Context, in *GetAssetsForKeywordMoreBaseTenantRequest, opts ...grpc.CallOption) (*GetAssetsForKeywordMoreBaseTenantResponse, error) {
	out := new(GetAssetsForKeywordMoreBaseTenantResponse)
	err := grpc.Invoke(ctx, "/api.AssetServer/GetAssetsForKeywordMoreBaseTenant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AssetServer service

type AssetServerServer interface {
	// 添加单个资产
	AddAsset(context.Context, *AddAssetRequest) (*AddAssetResponse, error)
	// 批量添加资产
	AddAssets(context.Context, *AddAssetsRequest) (*AddAssetsResponse, error)
	// 删除单个资产
	DeleteAsset(context.Context, *DeleteAssetRequest) (*DeleteAssetResponse, error)
	// 批量删除资产
	DeleteAssets(context.Context, *DeleteAssetsRequest) (*DeleteAssetsResponse, error)
	// 修改单个资产
	UpdateAsset(context.Context, *UpdateAssetRequest) (*UpdateAssetResponse, error)
	// 批量修改资产
	UpdateAssets(context.Context, *UpdateAssetsRequest) (*UpdateAssetsResponse, error)
	// 修改资产状态
	UpdateAssetsState(context.Context, *UpdateAssetStateRequest) (*UpdateAssetStateResponse, error)
	// 获取单个资产
	GetAsset(context.Context, *GetAssetRequest) (*GetAssetResponse, error)
	// 分页查询资产
	GetAssets(context.Context, *GetAssetsRequest) (*GetAssetsResponse, error)
	// 基于状态查询
	GetAssetsForState(context.Context, *GetAssetsForStateRequest) (*GetAssetsForStateResponse, error)
	// 基于状态和类型查询
	GetAssetsForStateAndType(context.Context, *GetAssetsForStateAndTypeRequest) (*GetAssetsForStateAndTypeResponse, error)
	// 获取组下绑定的资产
	GetAssetInGroup(context.Context, *GetAssetInGroupRequest) (*GetAssetInGroupResponse, error)
	// 获取组下未绑定的资产
	GetAssetsNotInGroup(context.Context, *GetAssetsNotInGroupRequest) (*GetAssetsNotInGroupResponse, error)
	// 基于资产名称查询资产
	GetAssetForName(context.Context, *GetAssetForNameRequest) (*GetAssetForNameResponse, error)
	// 基于资产设备ID查询资产
	GetAssetForDeviceID(context.Context, *GetAssetForDeviceIDRequest) (*GetAssetForDeviceIDResponse, error)
	// 基于租户添加资产
	AddAssetBaseTenant(context.Context, *AddAssetBaseTenantRequest) (*AddAssetBaseTenantResponse, error)
	// 基于租户删除资产
	DeleteAssetBaseTenant(context.Context, *DeleteAssetBaseTenantRequest) (*DeleteAssetBaseTenantResponse, error)
	// 基于租户批量删除资产
	DeleteAssetsBaseTenant(context.Context, *DeleteAssetsBaseTenantRequest) (*DeleteAssetsBaseTenantResponse, error)
	// 基于租户修改资产
	UpdateAssetBaseTenant(context.Context, *UpdateAssetBaseTenantRequest) (*UpdateAssetBaseTenantResponse, error)
	// 基于租户获取资产
	GetAssetBaseTenant(context.Context, *GetAssetBaseTenantRequest) (*GetAssetBaseTenantResponse, error)
	// 基于租户获取资产列表
	GetAssetsBaseTenant(context.Context, *GetAssetsBaseTenantRequest) (*GetAssetsBaseTenantResponse, error)
	// 基于租户获取组下绑定的资产
	GetAssetsInGroupBaseTenant(context.Context, *GetAssetsInGroupBaseTenantRequest) (*GetAssetsBaseInGroupTenantResponse, error)
	// 基于租户获取未绑定改组的资产
	GetAssetsNotInGroupBaseTenant(context.Context, *GetAssetsNotInGroupBaseTenantRequest) (*GetAssetsNotInGroupBaseTenantResponse, error)
	// 基于租户、资产名称查询资产
	GetAssetForNameBaseTenant(context.Context, *GetAssetForNameBaseTenantRequest) (*GetAssetForNameBaseTenantResponse, error)
	// 基于租户、资产设备ID查询资产
	GetAssetForDeviceIDBaseTenant(context.Context, *GetAssetForDeviceIDBaseTenantRequest) (*GetAssetForDeviceIDBaseTenantResponse, error)
	// 基于租户、批量添加资产
	AddAssetsBaseTenant(context.Context, *AddAssetsBaseTenantRequest) (*AddAssetsBaseTenantResponse, error)
	// 基于租户查询资产下绑定的群组
	GetBindGroupForAssetIdBaseTenant(context.Context, *GetBindGroupForAssetIdBaseTenantRequest) (*GetBindGroupForAssetIdBaseTenantResponse, error)
	// 基于租户查询资产下未绑定的群组
	GetUnBindGroupForAssetIdBaseTenant(context.Context, *GetUnBindGroupForAssetIdBaseTenantRequest) (*GetUnBindGroupForAssetIdBaseTenantResponse, error)
	// 基于租户模糊获取资产列表
	GetAssetsForKeywordBaseTenant(context.Context, *GetAssetsForKeywordBaseTenantRequest) (*GetAssetsForKeywordBaseTenantResponse, error)
	// 基于租户批量添加资产
	AddAssetBatchBaseTenant(context.Context, *AddAssetBatchBaseTenantRequest) (*AddAssetBatchBaseTenantResponse, error)
	// 增加资产lastConnection字段
	AddAssetForConnection(context.Context, *AddAssetForConnectionRequest) (*AddAssetForConnectionResponse, error)
	// 删除资产lastConnection字段
	DeleteAssetForConnection(context.Context, *DeleteAssetForConnectionRequest) (*DeleteAssetForConnectionResponse, error)
	// 修改资产lastConnection字段
	UpdateAssetForConnection(context.Context, *UpdateAssetForConnectionRequest) (*UpdateAssetForConnectionResponse, error)
	// 查询资产lastConnection字段
	GetAssetForConnection(context.Context, *GetAssetForConnectionRequest) (*GetAssetForConnectionResponse, error)
	// 批量导出资产
	GetAssetBatchBaseTenant(context.Context, *GetAssetBatchBaseTenantRequest) (*GetAssetBatchBaseTenantResponse, error)
	GetAssetsForKeywordMoreBaseTenant(context.Context, *GetAssetsForKeywordMoreBaseTenantRequest) (*GetAssetsForKeywordMoreBaseTenantResponse, error)
}

func RegisterAssetServerServer(s *grpc.Server, srv AssetServerServer) {
	s.RegisterService(&_AssetServer_serviceDesc, srv)
}

func _AssetServer_AddAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAsset(ctx, req.(*AddAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_AddAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAssets(ctx, req.(*AddAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_DeleteAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).DeleteAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/DeleteAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).DeleteAsset(ctx, req.(*DeleteAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_DeleteAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).DeleteAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/DeleteAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).DeleteAssets(ctx, req.(*DeleteAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_UpdateAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).UpdateAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/UpdateAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).UpdateAsset(ctx, req.(*UpdateAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_UpdateAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).UpdateAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/UpdateAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).UpdateAssets(ctx, req.(*UpdateAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_UpdateAssetsState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAssetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).UpdateAssetsState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/UpdateAssetsState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).UpdateAssetsState(ctx, req.(*UpdateAssetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAsset(ctx, req.(*GetAssetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssets(ctx, req.(*GetAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsForState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsForStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsForState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsForState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsForState(ctx, req.(*GetAssetsForStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsForStateAndType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsForStateAndTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsForStateAndType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsForStateAndType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsForStateAndType(ctx, req.(*GetAssetsForStateAndTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetInGroup(ctx, req.(*GetAssetInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsNotInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsNotInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsNotInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsNotInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsNotInGroup(ctx, req.(*GetAssetsNotInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetForName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetForNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetForName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetForName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetForName(ctx, req.(*GetAssetForNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetForDeviceID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetForDeviceIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetForDeviceID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetForDeviceID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetForDeviceID(ctx, req.(*GetAssetForDeviceIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_AddAssetBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAssetBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAssetBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAssetBaseTenant(ctx, req.(*AddAssetBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_DeleteAssetBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAssetBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).DeleteAssetBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/DeleteAssetBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).DeleteAssetBaseTenant(ctx, req.(*DeleteAssetBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_DeleteAssetsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAssetsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).DeleteAssetsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/DeleteAssetsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).DeleteAssetsBaseTenant(ctx, req.(*DeleteAssetsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_UpdateAssetBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAssetBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).UpdateAssetBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/UpdateAssetBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).UpdateAssetBaseTenant(ctx, req.(*UpdateAssetBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetBaseTenant(ctx, req.(*GetAssetBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsBaseTenant(ctx, req.(*GetAssetsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsInGroupBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsInGroupBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsInGroupBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsInGroupBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsInGroupBaseTenant(ctx, req.(*GetAssetsInGroupBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsNotInGroupBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsNotInGroupBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsNotInGroupBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsNotInGroupBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsNotInGroupBaseTenant(ctx, req.(*GetAssetsNotInGroupBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetForNameBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetForNameBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetForNameBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetForNameBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetForNameBaseTenant(ctx, req.(*GetAssetForNameBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetForDeviceIDBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetForDeviceIDBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetForDeviceIDBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetForDeviceIDBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetForDeviceIDBaseTenant(ctx, req.(*GetAssetForDeviceIDBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_AddAssetsBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetsBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAssetsBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAssetsBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAssetsBaseTenant(ctx, req.(*AddAssetsBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetBindGroupForAssetIdBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBindGroupForAssetIdBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetBindGroupForAssetIdBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetBindGroupForAssetIdBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetBindGroupForAssetIdBaseTenant(ctx, req.(*GetBindGroupForAssetIdBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetUnBindGroupForAssetIdBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUnBindGroupForAssetIdBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetUnBindGroupForAssetIdBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetUnBindGroupForAssetIdBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetUnBindGroupForAssetIdBaseTenant(ctx, req.(*GetUnBindGroupForAssetIdBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsForKeywordBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsForKeywordBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsForKeywordBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsForKeywordBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsForKeywordBaseTenant(ctx, req.(*GetAssetsForKeywordBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_AddAssetBatchBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetBatchBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAssetBatchBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAssetBatchBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAssetBatchBaseTenant(ctx, req.(*AddAssetBatchBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_AddAssetForConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAssetForConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).AddAssetForConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/AddAssetForConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).AddAssetForConnection(ctx, req.(*AddAssetForConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_DeleteAssetForConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAssetForConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).DeleteAssetForConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/DeleteAssetForConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).DeleteAssetForConnection(ctx, req.(*DeleteAssetForConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_UpdateAssetForConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAssetForConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).UpdateAssetForConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/UpdateAssetForConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).UpdateAssetForConnection(ctx, req.(*UpdateAssetForConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetForConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetForConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetForConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetForConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetForConnection(ctx, req.(*GetAssetForConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetBatchBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetBatchBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetBatchBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetBatchBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetBatchBaseTenant(ctx, req.(*GetAssetBatchBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetServer_GetAssetsForKeywordMoreBaseTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetsForKeywordMoreBaseTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServerServer).GetAssetsForKeywordMoreBaseTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AssetServer/GetAssetsForKeywordMoreBaseTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServerServer).GetAssetsForKeywordMoreBaseTenant(ctx, req.(*GetAssetsForKeywordMoreBaseTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AssetServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AssetServer",
	HandlerType: (*AssetServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAsset",
			Handler:    _AssetServer_AddAsset_Handler,
		},
		{
			MethodName: "AddAssets",
			Handler:    _AssetServer_AddAssets_Handler,
		},
		{
			MethodName: "DeleteAsset",
			Handler:    _AssetServer_DeleteAsset_Handler,
		},
		{
			MethodName: "DeleteAssets",
			Handler:    _AssetServer_DeleteAssets_Handler,
		},
		{
			MethodName: "UpdateAsset",
			Handler:    _AssetServer_UpdateAsset_Handler,
		},
		{
			MethodName: "UpdateAssets",
			Handler:    _AssetServer_UpdateAssets_Handler,
		},
		{
			MethodName: "UpdateAssetsState",
			Handler:    _AssetServer_UpdateAssetsState_Handler,
		},
		{
			MethodName: "GetAsset",
			Handler:    _AssetServer_GetAsset_Handler,
		},
		{
			MethodName: "GetAssets",
			Handler:    _AssetServer_GetAssets_Handler,
		},
		{
			MethodName: "GetAssetsForState",
			Handler:    _AssetServer_GetAssetsForState_Handler,
		},
		{
			MethodName: "GetAssetsForStateAndType",
			Handler:    _AssetServer_GetAssetsForStateAndType_Handler,
		},
		{
			MethodName: "GetAssetInGroup",
			Handler:    _AssetServer_GetAssetInGroup_Handler,
		},
		{
			MethodName: "GetAssetsNotInGroup",
			Handler:    _AssetServer_GetAssetsNotInGroup_Handler,
		},
		{
			MethodName: "GetAssetForName",
			Handler:    _AssetServer_GetAssetForName_Handler,
		},
		{
			MethodName: "GetAssetForDeviceID",
			Handler:    _AssetServer_GetAssetForDeviceID_Handler,
		},
		{
			MethodName: "AddAssetBaseTenant",
			Handler:    _AssetServer_AddAssetBaseTenant_Handler,
		},
		{
			MethodName: "DeleteAssetBaseTenant",
			Handler:    _AssetServer_DeleteAssetBaseTenant_Handler,
		},
		{
			MethodName: "DeleteAssetsBaseTenant",
			Handler:    _AssetServer_DeleteAssetsBaseTenant_Handler,
		},
		{
			MethodName: "UpdateAssetBaseTenant",
			Handler:    _AssetServer_UpdateAssetBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetBaseTenant",
			Handler:    _AssetServer_GetAssetBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetsBaseTenant",
			Handler:    _AssetServer_GetAssetsBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetsInGroupBaseTenant",
			Handler:    _AssetServer_GetAssetsInGroupBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetsNotInGroupBaseTenant",
			Handler:    _AssetServer_GetAssetsNotInGroupBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetForNameBaseTenant",
			Handler:    _AssetServer_GetAssetForNameBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetForDeviceIDBaseTenant",
			Handler:    _AssetServer_GetAssetForDeviceIDBaseTenant_Handler,
		},
		{
			MethodName: "AddAssetsBaseTenant",
			Handler:    _AssetServer_AddAssetsBaseTenant_Handler,
		},
		{
			MethodName: "GetBindGroupForAssetIdBaseTenant",
			Handler:    _AssetServer_GetBindGroupForAssetIdBaseTenant_Handler,
		},
		{
			MethodName: "GetUnBindGroupForAssetIdBaseTenant",
			Handler:    _AssetServer_GetUnBindGroupForAssetIdBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetsForKeywordBaseTenant",
			Handler:    _AssetServer_GetAssetsForKeywordBaseTenant_Handler,
		},
		{
			MethodName: "AddAssetBatchBaseTenant",
			Handler:    _AssetServer_AddAssetBatchBaseTenant_Handler,
		},
		{
			MethodName: "AddAssetForConnection",
			Handler:    _AssetServer_AddAssetForConnection_Handler,
		},
		{
			MethodName: "DeleteAssetForConnection",
			Handler:    _AssetServer_DeleteAssetForConnection_Handler,
		},
		{
			MethodName: "UpdateAssetForConnection",
			Handler:    _AssetServer_UpdateAssetForConnection_Handler,
		},
		{
			MethodName: "GetAssetForConnection",
			Handler:    _AssetServer_GetAssetForConnection_Handler,
		},
		{
			MethodName: "GetAssetBatchBaseTenant",
			Handler:    _AssetServer_GetAssetBatchBaseTenant_Handler,
		},
		{
			MethodName: "GetAssetsForKeywordMoreBaseTenant",
			Handler:    _AssetServer_GetAssetsForKeywordMoreBaseTenant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/asset.proto",
}

func init() { proto.RegisterFile("api/asset.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2703 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0x4f, 0x6f, 0xdc, 0xc6,
	0x15, 0x0f, 0x77, 0xb5, 0x6b, 0xe9, 0xad, 0x22, 0xad, 0x46, 0xd6, 0x8a, 0xa2, 0xf5, 0x67, 0x4d,
	0xcb, 0x96, 0xbc, 0xb5, 0xb4, 0xa9, 0x7c, 0x6a, 0x10, 0xc3, 0x95, 0x2c, 0x48, 0x15, 0x5c, 0x3b,
	0x0d, 0x6d, 0x37, 0x0e, 0x72, 0x50, 0xe9, 0xe5, 0x58, 0x21, 0xbc, 0x22, 0xb7, 0x24, 0xd7, 0xf6,
	0x56, 0x55, 0x80, 0x04, 0x41, 0x03, 0x24, 0x28, 0xd0, 0xbf, 0x40, 0x8b, 0xa2, 0x45, 0xd1, 0x43,
	0x8f, 0x3d, 0x05, 0x28, 0x8a, 0x02, 0xbd, 0xb4, 0xdf, 0xa0, 0x5f, 0xa1, 0x87, 0x1e, 0xda, 0x0f,
	0xd0, 0x5b, 0x31, 0xc3, 0x21, 0x39, 0x24, 0x87, 0xdc, 0x5d, 0x45, 0x56, 0x9c, 0xa2, 0x97, 0xc5,
	0x72, 0xe6, 0xcd, 0x9b, 0xdf, 0xfb, 0x33, 0x6f, 0xde, 0xbc, 0x21, 0x61, 0x52, 0xef, 0x98, 0x4d,
	0xdd, 0x75, 0xb1, 0xb7, 0xde, 0x71, 0x6c, 0xcf, 0x46, 0x45, 0xbd, 0x63, 0x2a, 0xf3, 0x07, 0xb6,
	0x7d, 0xd0, 0xc6, 0x4d, 0xda, 0x69, 0x59, 0xb6, 0xa7, 0x7b, 0xa6, 0x6d, 0xb9, 0x3e, 0x89, 0xba,
	0x03, 0x8b, 0xbb, 0xd8, 0xdb, 0x24, 0x83, 0xb6, 0x74, 0xaf, 0xf5, 0xde, 0x96, 0xee, 0xe2, 0xfb,
	0xd8, 0xd2, 0x2d, 0x4f, 0xc3, 0xdf, 0xed, 0x62, 0xd7, 0x43, 0x55, 0x28, 0x7a, 0xa6, 0x21, 0x4b,
	0x75, 0x69, 0xb5, 0xa8, 0x91, 0xbf, 0x08, 0xc1, 0x88, 0x6e, 0x1a, 0xae, 0x5c, 0xa8, 0x17, 0x57,
	0x8b, 0x1a, 0xfd, 0xaf, 0xde, 0x81, 0xa5, 0x4c, 0x3e, 0x6e, 0xc7, 0xb6, 0x5c, 0x8c, 0x1a, 0x50,
	0xa6, 0xe0, 0x5c, 0x59, 0xaa, 0x17, 0x57, 0x2b, 0x1b, 0x68, 0x5d, 0xef, 0x98, 0xeb, 0x41, 0x37,
	0x1d, 0xaa, 0x31, 0x0a, 0xf5, 0x5b, 0x30, 0xbf, 0x69, 0x18, 0xb4, 0x6d, 0xc7, 0x76, 0x6e, 0xd9,
	0x96, 0x85, 0x5b, 0x04, 0x36, 0x07, 0x4a, 0x8f, 0x40, 0xe9, 0xa6, 0x81, 0x16, 0x01, 0x5a, 0x21,
	0x99, 0x5c, 0xa0, 0x1d, 0x5c, 0x8b, 0xfa, 0x16, 0x2c, 0x64, 0x70, 0x64, 0xf0, 0x86, 0x67, 0x79,
	0x1d, 0x96, 0xb6, 0x71, 0x1b, 0x7b, 0x78, 0x08, 0x9c, 0xaa, 0x0a, 0xf5, 0xec, 0x41, 0x3e, 0x14,
	0xf5, 0x1e, 0x2c, 0x3d, 0xe8, 0x18, 0xfa, 0x50, 0x8c, 0xfb, 0xa2, 0xbd, 0x0f, 0xf5, 0x6c, 0xa6,
	0x27, 0xd6, 0xc1, 0x6b, 0x30, 0x1f, 0xd8, 0x7d, 0x40, 0x05, 0xbc, 0x05, 0x0b, 0x19, 0x23, 0x4e,
	0x0c, 0xe2, 0xaf, 0x12, 0xbc, 0x1a, 0x0c, 0xdf, 0x75, 0xec, 0x6e, 0x07, 0x4d, 0x40, 0x21, 0x64,
	0x51, 0xf0, 0x5d, 0xd6, 0xd2, 0x0f, 0x31, 0x1d, 0x3b, 0xa6, 0xd1, 0xff, 0xa8, 0x0e, 0x15, 0x03,
	0xbb, 0x2d, 0xc7, 0xec, 0x50, 0xb6, 0x45, 0xda, 0xc5, 0x37, 0xa1, 0x25, 0xa8, 0xb4, 0x1c, 0xac,
	0x7b, 0x78, 0xdf, 0x33, 0x0f, 0xb1, 0x3c, 0xc2, 0x26, 0xa6, 0x4d, 0xf7, 0xcd, 0x43, 0x4c, 0x08,
	0xba, 0x54, 0xa7, 0x3e, 0x41, 0xc9, 0x27, 0xf0, 0x9b, 0x28, 0x41, 0x03, 0xca, 0x07, 0x04, 0x90,
	0x2b, 0x97, 0x05, 0x3e, 0x4f, 0xb1, 0x6a, 0x8c, 0x42, 0xfd, 0x99, 0x04, 0x57, 0x77, 0xb1, 0xf7,
	0xc0, 0xda, 0x32, 0x2d, 0x83, 0x76, 0xed, 0xd8, 0x0e, 0xd5, 0xd3, 0x9e, 0x21, 0x5c, 0x96, 0x09,
	0x2d, 0xb1, 0x85, 0x5a, 0x88, 0x16, 0xea, 0x79, 0x28, 0xb5, 0xec, 0xae, 0xe5, 0x51, 0xd9, 0x4a,
	0x9a, 0xff, 0x40, 0x74, 0xd1, 0xd1, 0x0f, 0x7c, 0x71, 0x4a, 0x1a, 0xfd, 0x8f, 0xe6, 0x60, 0xd4,
	0x76, 0x0c, 0xec, 0xec, 0x3f, 0xea, 0x51, 0x29, 0xc6, 0xb4, 0x73, 0xf4, 0x79, 0xab, 0xa7, 0xf6,
	0xa0, 0x31, 0x08, 0xaa, 0x68, 0x91, 0x33, 0x81, 0xa5, 0x7e, 0x02, 0x13, 0xed, 0x79, 0xb6, 0xa7,
	0xb7, 0xf7, 0x7d, 0x90, 0x05, 0x8a, 0x07, 0x68, 0xd3, 0x2d, 0xd2, 0xa2, 0xfe, 0x44, 0x82, 0x95,
	0x5d, 0xec, 0xbd, 0x5c, 0xfa, 0x78, 0x06, 0xab, 0xfd, 0x31, 0xbd, 0x08, 0x6d, 0xfc, 0xa9, 0x00,
	0xe3, 0x4c, 0x5a, 0x3a, 0xa3, 0x40, 0xe4, 0x93, 0xb9, 0xf9, 0x1a, 0x00, 0x0d, 0xbb, 0xfb, 0x5e,
	0xaf, 0xe3, 0xab, 0x61, 0x62, 0x63, 0x82, 0x22, 0xa5, 0xf3, 0xdc, 0xef, 0x75, 0xb0, 0x36, 0xa6,
	0x07, 0x7f, 0xd1, 0x02, 0x80, 0x8b, 0x5b, 0x0e, 0xf6, 0xf6, 0x9f, 0xe0, 0x40, 0x3b, 0x63, 0x7e,
	0xcb, 0x6d, 0xdc, 0x43, 0x17, 0x60, 0xcc, 0xc0, 0x4f, 0xcd, 0x16, 0xde, 0x37, 0x0d, 0xb9, 0x4c,
	0x7b, 0x47, 0xfd, 0x86, 0x3d, 0x83, 0xac, 0x4b, 0xd7, 0x92, 0xcf, 0xd1, 0xd6, 0x82, 0x6b, 0x11,
	0x8b, 0x1c, 0xda, 0x06, 0x6e, 0xcb, 0xa3, 0xb4, 0xc9, 0x7f, 0x40, 0x2a, 0x8c, 0x1f, 0xea, 0x56,
	0xf7, 0xb1, 0xde, 0xf2, 0xba, 0x0e, 0x76, 0xe4, 0x31, 0xda, 0x19, 0x6b, 0x23, 0xc2, 0x1f, 0xea,
	0x2d, 0x19, 0x68, 0x17, 0xf9, 0x8b, 0x14, 0x18, 0x35, 0x2d, 0x0f, 0x3b, 0x4f, 0xf5, 0xb6, 0x5c,
	0xa1, 0xda, 0x0b, 0x9f, 0xd5, 0xff, 0x14, 0xa3, 0x08, 0x71, 0xba, 0xca, 0xfb, 0xfc, 0x31, 0x22,
	0xae, 0xfe, 0x72, 0x3f, 0xf5, 0xd7, 0xa1, 0xe4, 0x7a, 0xba, 0x87, 0xa9, 0x16, 0x27, 0x36, 0x80,
	0x52, 0xde, 0x23, 0x2d, 0x9a, 0xdf, 0x91, 0x30, 0xd0, 0x68, 0xd2, 0x40, 0xf1, 0x68, 0x4a, 0x74,
	0x3b, 0xca, 0x47, 0x53, 0xb4, 0x02, 0x93, 0x6d, 0xdd, 0xf5, 0xf6, 0x39, 0x22, 0xa0, 0xa0, 0x27,
	0x48, 0x73, 0x14, 0xb0, 0x83, 0x05, 0x56, 0x89, 0x16, 0x58, 0xcc, 0xf6, 0xe3, 0x42, 0xdb, 0xbf,
	0x9a, 0xb6, 0xfd, 0x44, 0x9e, 0xed, 0x27, 0xb3, 0x6d, 0x5f, 0x15, 0xdb, 0x7e, 0x2a, 0x61, 0xfb,
	0xd7, 0x61, 0x32, 0xd8, 0xf9, 0x83, 0x60, 0xb1, 0x02, 0x25, 0xaa, 0x50, 0x6a, 0xfe, 0xca, 0xc6,
	0x14, 0x5b, 0x96, 0xd1, 0xda, 0xd2, 0xfc, 0x7e, 0xf5, 0x0d, 0xa8, 0x46, 0x63, 0xd9, 0xa2, 0x5e,
	0x8d, 0x0f, 0x16, 0xa5, 0x31, 0x6c, 0xf4, 0x8d, 0x68, 0xb4, 0x1b, 0x4c, 0x7d, 0x15, 0xca, 0xbe,
	0x73, 0xb0, 0x90, 0x20, 0x98, 0x9b, 0x11, 0xa8, 0x37, 0x60, 0x8a, 0x1b, 0x9e, 0x9e, 0xbd, 0x98,
	0x3f, 0xfb, 0x15, 0x40, 0x5c, 0xa6, 0x91, 0xbd, 0x21, 0xcf, 0xc0, 0x74, 0x8c, 0x8e, 0x25, 0x21,
	0x6b, 0xb1, 0xe6, 0x10, 0x7f, 0x0d, 0xca, 0x06, 0x6d, 0xa6, 0x00, 0x8a, 0x1a, 0x7b, 0x52, 0x6b,
	0x70, 0x3e, 0x4e, 0xce, 0xd8, 0xdc, 0x00, 0xc4, 0xa5, 0x1d, 0x43, 0x1b, 0xe0, 0x26, 0x4c, 0xc7,
	0x86, 0x0f, 0x6d, 0x83, 0xaf, 0xc7, 0x18, 0xf0, 0x66, 0xf0, 0x97, 0x60, 0x8e, 0x19, 0x7c, 0x02,
	0x75, 0x0b, 0xce, 0xc7, 0x39, 0x9c, 0x20, 0x9f, 0xbd, 0x03, 0xb3, 0x1c, 0x0f, 0x7f, 0xb5, 0x66,
	0x6e, 0x5c, 0xe1, 0x0a, 0x2f, 0x64, 0xac, 0x70, 0x75, 0x1b, 0xe4, 0x34, 0xbb, 0xa1, 0x55, 0x73,
	0x09, 0x26, 0x83, 0x4c, 0x2c, 0xdb, 0x3b, 0xde, 0x80, 0x6a, 0x44, 0x34, 0xf4, 0x14, 0x6f, 0x47,
	0xa3, 0x43, 0xd5, 0x87, 0xbb, 0xb0, 0x24, 0xda, 0x85, 0x0b, 0x19, 0xbb, 0x70, 0x31, 0xbe, 0x0b,
	0x7f, 0x07, 0xa6, 0x38, 0xc6, 0xc3, 0x5b, 0xa4, 0xff, 0x76, 0xfb, 0x81, 0x04, 0x72, 0x38, 0xc5,
	0x8e, 0xed, 0xc4, 0x8c, 0x76, 0x1a, 0x32, 0x44, 0x76, 0x1e, 0xc9, 0xb2, 0xf3, 0x7b, 0x30, 0x27,
	0x80, 0xf0, 0x22, 0xa4, 0xfd, 0xa3, 0x14, 0x1d, 0xe0, 0xc2, 0xa9, 0x36, 0x2d, 0x83, 0xee, 0x3e,
	0x67, 0x2a, 0x74, 0x62, 0x3f, 0x2c, 0xf5, 0xd9, 0x0f, 0x55, 0x1b, 0xea, 0xd9, 0xc0, 0x5f, 0x84,
	0xaa, 0xae, 0x41, 0x8d, 0x3b, 0xc0, 0xdc, 0xd5, 0x0f, 0x43, 0x05, 0x05, 0x19, 0x84, 0x14, 0x65,
	0x10, 0xea, 0x2d, 0x98, 0x4d, 0x51, 0x0f, 0xbd, 0x8c, 0xbe, 0x06, 0x0a, 0xc7, 0x64, 0xdb, 0xdf,
	0x51, 0xb7, 0x83, 0x69, 0x63, 0xbb, 0xae, 0x14, 0xdf, 0x75, 0xd5, 0x5d, 0xb8, 0x20, 0x1c, 0x3a,
	0x34, 0x86, 0xdf, 0x48, 0x91, 0xdc, 0x7b, 0x96, 0x9f, 0xbb, 0x46, 0x51, 0xe3, 0x20, 0x8a, 0x1a,
	0x07, 0x7e, 0x2e, 0x95, 0x72, 0x0a, 0x71, 0xf6, 0xcd, 0xbb, 0xca, 0x48, 0xdc, 0x55, 0x86, 0x74,
	0x84, 0x6e, 0xa4, 0xe9, 0x10, 0xdf, 0xb0, 0x9b, 0x26, 0x49, 0x8e, 0x22, 0x53, 0xa7, 0x8d, 0x1f,
	0x88, 0x5a, 0x0c, 0x45, 0x55, 0x7f, 0x27, 0x45, 0xc6, 0x71, 0xef, 0xda, 0x2f, 0xa7, 0x6e, 0x7a,
	0x91, 0x17, 0xc4, 0x30, 0x9e, 0x81, 0x7e, 0xbe, 0x0d, 0x73, 0x41, 0x16, 0x93, 0x3e, 0xb5, 0x0d,
	0x9a, 0x07, 0xa4, 0x0f, 0x73, 0xea, 0x43, 0x50, 0x44, 0x7c, 0x87, 0xf5, 0x6b, 0x01, 0xe7, 0x2d,
	0x98, 0xe7, 0x52, 0x99, 0x13, 0x1d, 0x35, 0xd5, 0x25, 0x58, 0xc8, 0xe0, 0xc1, 0xf2, 0x22, 0x2f,
	0x46, 0xe0, 0xa6, 0x67, 0x09, 0xaa, 0x6c, 0x52, 0x54, 0x65, 0x13, 0x1c, 0x69, 0xe3, 0x7e, 0x50,
	0xec, 0xe7, 0x07, 0x75, 0x58, 0xcc, 0x9a, 0x95, 0xe1, 0x7a, 0x07, 0xe6, 0xb9, 0xd4, 0xe2, 0x54,
	0x2d, 0xf6, 0x2e, 0x2c, 0x64, 0xb0, 0x3e, 0x05, 0xa3, 0xdd, 0x8c, 0xb6, 0xca, 0x93, 0x59, 0xec,
	0x61, 0xb4, 0x8c, 0x4f, 0x19, 0xda, 0xdf, 0xf8, 0x08, 0x91, 0x06, 0xf7, 0x52, 0x6e, 0xab, 0x81,
	0x18, 0xe5, 0x48, 0x8c, 0xef, 0x73, 0x31, 0xe4, 0xf3, 0x95, 0x77, 0xfb, 0xee, 0xb1, 0xc1, 0xec,
	0xc5, 0x68, 0xf6, 0x3f, 0x4b, 0x70, 0x31, 0x9c, 0x9e, 0xc5, 0x2f, 0xa1, 0xa1, 0xbf, 0xf8, 0x68,
	0x2b, 0xd0, 0xdd, 0xcf, 0x25, 0x50, 0x63, 0xca, 0x63, 0x12, 0x9c, 0xa9, 0x0e, 0x03, 0xed, 0x8c,
	0x44, 0xc1, 0xf9, 0x2f, 0x12, 0x2c, 0x0b, 0x36, 0x86, 0x2f, 0x8f, 0x62, 0x7f, 0x21, 0xc1, 0xe5,
	0x3e, 0x02, 0x7c, 0x51, 0xba, 0xfd, 0x46, 0x94, 0x98, 0xb2, 0xcc, 0x4f, 0x18, 0xe4, 0x93, 0x19,
	0xa3, 0x20, 0x80, 0xec, 0x47, 0xae, 0x2f, 0xe0, 0x74, 0x0a, 0x11, 0xea, 0x41, 0xe4, 0x05, 0x5c,
	0x92, 0x98, 0x86, 0x9b, 0x97, 0x69, 0x0a, 0xd8, 0xb6, 0x22, 0xdb, 0x64, 0xb0, 0x3d, 0x05, 0xec,
	0xef, 0x44, 0x79, 0x80, 0x20, 0xb8, 0x5e, 0x4d, 0x58, 0x5d, 0x74, 0xce, 0x67, 0x46, 0x17, 0x6d,
	0x58, 0x17, 0x84, 0xac, 0x4f, 0xe0, 0x51, 0x69, 0xe6, 0xff, 0xe4, 0x97, 0xde, 0x8e, 0xed, 0xdc,
	0xc6, 0xbd, 0x67, 0xb6, 0x63, 0x7c, 0x69, 0xf7, 0x07, 0x24, 0xc3, 0xb9, 0x27, 0xbe, 0x0c, 0xac,
	0xc0, 0x1b, 0x3c, 0xaa, 0x3f, 0xe0, 0x17, 0xa9, 0x58, 0xd4, 0xb3, 0xd9, 0x44, 0x3e, 0x2b, 0xc1,
	0x14, 0x6f, 0x7b, 0x7a, 0x55, 0xf9, 0xff, 0x3a, 0xfa, 0xc0, 0x75, 0x74, 0x54, 0x83, 0xf2, 0x36,
	0x7e, 0x8a, 0xbb, 0x26, 0xab, 0xee, 0xb2, 0x27, 0xd2, 0xbe, 0xd9, 0xe9, 0xdc, 0xc6, 0x3d, 0x56,
	0xdf, 0x65, 0x4f, 0xc4, 0x27, 0xb4, 0xe7, 0xdb, 0xb8, 0xad, 0xf7, 0x68, 0x95, 0xb7, 0xa4, 0x05,
	0x8f, 0x44, 0x9d, 0xda, 0xf3, 0xaf, 0x6e, 0x3b, 0x6f, 0x3e, 0x7e, 0x4c, 0x16, 0xfe, 0x24, 0xed,
	0xe5, 0x9b, 0x08, 0x0e, 0xed, 0xf9, 0xdb, 0xa6, 0x65, 0xd8, 0xcf, 0x68, 0xa9, 0xb7, 0xa4, 0x85,
	0xcf, 0x44, 0x5e, 0xed, 0xf9, 0xc6, 0xb6, 0xc3, 0x8a, 0xbd, 0xfe, 0x03, 0x99, 0x6d, 0xb3, 0xd3,
	0x71, 0x09, 0x0c, 0xe4, 0x7b, 0x20, 0x7b, 0x24, 0x3d, 0x77, 0x9f, 0x3d, 0xa1, 0x3d, 0xd3, 0x7e,
	0x0f, 0x7b, 0x24, 0x3d, 0xdb, 0xf8, 0xe9, 0xa6, 0x61, 0x38, 0xf2, 0x79, 0xbf, 0x87, 0x3d, 0xa2,
	0x79, 0x18, 0xd3, 0x70, 0x5b, 0x7f, 0xbe, 0x73, 0xcb, 0xf2, 0xe4, 0x19, 0x5a, 0x26, 0x8f, 0x1a,
	0x08, 0x82, 0x3d, 0x77, 0xf3, 0x51, 0x47, 0xae, 0xd1, 0x1e, 0xff, 0x81, 0x60, 0xde, 0x73, 0x6f,
	0xb5, 0x75, 0xd7, 0x6d, 0xc9, 0xb3, 0xb4, 0x23, 0x7c, 0x26, 0x12, 0x6f, 0x1a, 0xce, 0x5e, 0xa0,
	0x5a, 0xd9, 0x97, 0x98, 0x6b, 0x62, 0x5a, 0x24, 0xda, 0x9d, 0x0b, 0xb5, 0x88, 0xbb, 0xa6, 0xfa,
	0x63, 0x09, 0x16, 0xa3, 0xb3, 0x8e, 0xf0, 0x96, 0x7e, 0x3d, 0xb1, 0x70, 0x6a, 0xa9, 0x38, 0x47,
	0x07, 0x66, 0xc7, 0xa3, 0x61, 0x4f, 0x12, 0x17, 0x61, 0x29, 0x13, 0x12, 0x3b, 0x4a, 0xfc, 0x4b,
	0xa2, 0x57, 0x65, 0xc9, 0x65, 0x7f, 0xc7, 0x76, 0xf0, 0xff, 0x62, 0x94, 0xfb, 0xc4, 0xbf, 0xbf,
	0xed, 0x27, 0xee, 0x99, 0x44, 0xba, 0xc6, 0x4d, 0x18, 0x0b, 0x05, 0x42, 0x15, 0xe2, 0xe3, 0x8f,
	0xf5, 0x76, 0xd7, 0xab, 0xbe, 0x82, 0x46, 0x61, 0xe4, 0x9b, 0xb6, 0xa3, 0x57, 0x25, 0xd2, 0xbc,
	0xab, 0x7b, 0xf8, 0x99, 0xde, 0xab, 0x16, 0xd0, 0x04, 0xc0, 0x3d, 0xf3, 0xb0, 0xdb, 0xd6, 0x3d,
	0xdb, 0x71, 0xab, 0xc5, 0xc6, 0x3a, 0x94, 0xa8, 0xe2, 0x08, 0xd5, 0x5d, 0xdb, 0x7b, 0xe0, 0x62,
	0xa3, 0xfa, 0x0a, 0x02, 0x28, 0xef, 0x59, 0xf4, 0xbf, 0x84, 0xc6, 0x61, 0x74, 0xb3, 0xdd, 0xa6,
	0x44, 0xd5, 0xc2, 0xc6, 0xbf, 0x97, 0xa1, 0xe2, 0x57, 0xa3, 0xb1, 0xf3, 0x14, 0x3b, 0xe8, 0x4d,
	0x18, 0x0d, 0xfc, 0x03, 0x9d, 0xf7, 0x15, 0x1c, 0xbf, 0x84, 0x51, 0x66, 0x12, 0xad, 0xcc, 0x6b,
	0x6a, 0x1f, 0xfe, 0xfd, 0x1f, 0x3f, 0x2d, 0x54, 0xd5, 0x4a, 0x33, 0x7c, 0x9d, 0xc5, 0x7d, 0x5d,
	0x6a, 0xa0, 0x87, 0x30, 0x16, 0x6e, 0xc6, 0x28, 0x3e, 0x36, 0x28, 0x2d, 0x2b, 0xb5, 0x64, 0x33,
	0xe3, 0x39, 0x4f, 0x79, 0xd6, 0xd4, 0x29, 0x8e, 0x67, 0xf3, 0x11, 0x71, 0x5b, 0xc2, 0xf9, 0x5d,
	0xa8, 0x70, 0x87, 0x62, 0x34, 0x4b, 0x99, 0xa4, 0xaf, 0x4e, 0x14, 0x39, 0xdd, 0xc1, 0xf8, 0xcf,
	0x51, 0xfe, 0xd3, 0x8d, 0x18, 0xff, 0x23, 0xdd, 0x34, 0x8e, 0x91, 0x0e, 0xe3, 0xfc, 0x89, 0x1b,
	0xa5, 0x98, 0x84, 0xe0, 0xe7, 0x04, 0x3d, 0x71, 0xfc, 0x1b, 0x62, 0xfc, 0x06, 0x54, 0xb8, 0x73,
	0x35, 0xc3, 0x9f, 0xbe, 0x74, 0x61, 0xf8, 0x05, 0xd7, 0x29, 0xaa, 0x4a, 0xf9, 0xcf, 0x2b, 0xb3,
	0x71, 0xfc, 0xf4, 0x55, 0x22, 0x22, 0x05, 0x99, 0x45, 0x87, 0x71, 0xfe, 0x1a, 0x04, 0xa5, 0xb8,
	0x25, 0x04, 0x11, 0xdd, 0x99, 0x04, 0x82, 0x28, 0x62, 0x41, 0x3c, 0x98, 0xe2, 0x47, 0xf9, 0xfe,
	0x37, 0x9f, 0xe4, 0xc6, 0x17, 0xe2, 0x95, 0x85, 0x8c, 0xde, 0x7c, 0xc1, 0x4c, 0xe3, 0xb8, 0x49,
	0xe3, 0x01, 0x99, 0x55, 0x83, 0xd1, 0x60, 0xd9, 0x32, 0x4f, 0x4d, 0xdc, 0x8a, 0x30, 0x4f, 0x4d,
	0x5e, 0x83, 0x04, 0x56, 0x47, 0x02, 0xab, 0x9b, 0x30, 0x16, 0x86, 0x02, 0x14, 0x1f, 0x9e, 0x70,
	0xd6, 0xd4, 0x2d, 0x86, 0xba, 0x46, 0xd9, 0xae, 0xa0, 0xcb, 0x31, 0xb6, 0x74, 0xe9, 0x1f, 0x37,
	0x8f, 0x48, 0x08, 0x3c, 0x6e, 0x1e, 0x05, 0x11, 0xf0, 0x18, 0x7d, 0x2c, 0x71, 0x57, 0x21, 0x41,
	0x01, 0x1c, 0x2d, 0xc4, 0x99, 0x27, 0xee, 0x2f, 0x94, 0xc5, 0xac, 0x6e, 0x86, 0xe1, 0x3a, 0xc5,
	0xb0, 0x86, 0xbe, 0x32, 0x10, 0x06, 0x5f, 0x97, 0xe8, 0x57, 0xa2, 0x1b, 0x13, 0x56, 0x8a, 0x47,
	0xcb, 0xe2, 0x19, 0xe3, 0x57, 0x0c, 0xca, 0xe5, 0x3e, 0x54, 0x0c, 0xde, 0x06, 0x85, 0x77, 0x0d,
	0x35, 0x06, 0x83, 0x47, 0x62, 0x3d, 0xb2, 0xa2, 0xdb, 0x2e, 0x76, 0x48, 0x44, 0x17, 0x62, 0xb3,
	0xc5, 0x0b, 0xb7, 0xca, 0xbc, 0xb8, 0x93, 0x21, 0xa8, 0x53, 0x04, 0x0a, 0x92, 0x29, 0x02, 0xff,
	0x15, 0x8e, 0xe6, 0xd1, 0x01, 0x71, 0x2c, 0x16, 0xb4, 0xbf, 0x07, 0xd3, 0x82, 0x83, 0x29, 0x5a,
	0x8a, 0x4b, 0x98, 0x2a, 0x18, 0x2b, 0xf5, 0x6c, 0x82, 0x81, 0xe7, 0x6e, 0x47, 0xb2, 0xb2, 0x03,
	0x63, 0x42, 0xd6, 0xf8, 0xc5, 0x45, 0x42, 0xd6, 0xc4, 0x3d, 0x85, 0xba, 0x48, 0xe7, 0x93, 0x1b,
	0xb5, 0x48, 0xdb, 0x4d, 0x92, 0x12, 0x37, 0x8f, 0xc8, 0xef, 0x31, 0xfa, 0x40, 0x8a, 0x44, 0xe5,
	0xce, 0x79, 0x09, 0x51, 0xd3, 0x17, 0x17, 0x09, 0x51, 0x05, 0xd7, 0x13, 0xea, 0x0a, 0x9d, 0xfa,
	0x62, 0x63, 0x89, 0x9b, 0x9a, 0x25, 0xc1, 0xdb, 0xcd, 0xa3, 0x30, 0x3f, 0x3e, 0x46, 0x47, 0x80,
	0xd2, 0xd5, 0x60, 0xb4, 0x18, 0xdb, 0x0f, 0x52, 0x49, 0x87, 0xb2, 0x94, 0xd9, 0xcf, 0xe6, 0x5f,
	0xa6, 0xf3, 0x2f, 0xaa, 0x73, 0x74, 0x7e, 0x8f, 0x76, 0xba, 0xcd, 0x23, 0x2f, 0xd2, 0x35, 0x89,
	0x20, 0x1f, 0x4b, 0x30, 0x23, 0xac, 0xf6, 0xa2, 0x8b, 0xc9, 0x98, 0x9e, 0xc6, 0xa0, 0xe6, 0x91,
	0x08, 0xd5, 0x20, 0x82, 0xc1, 0xe2, 0xce, 0x27, 0x12, 0xd4, 0xc4, 0x05, 0x5e, 0x94, 0x9a, 0x27,
	0x7d, 0x5a, 0x56, 0x2e, 0xe5, 0xd2, 0x0c, 0x0e, 0x86, 0x46, 0x74, 0xf4, 0x23, 0x09, 0x66, 0x84,
	0x05, 0x5f, 0xa6, 0x96, 0xbc, 0x3a, 0x33, 0x53, 0x4b, 0x6e, 0xbd, 0x58, 0x7d, 0x8d, 0x22, 0x69,
	0x28, 0x97, 0xf3, 0xd4, 0x12, 0xdb, 0xc4, 0xde, 0x07, 0x94, 0x2e, 0xf2, 0xa2, 0x78, 0x34, 0xcc,
	0x72, 0x93, 0xec, 0xea, 0x70, 0xa0, 0x12, 0xd4, 0xd7, 0x3e, 0x47, 0x5c, 0x50, 0xe0, 0x00, 0x24,
	0x82, 0x42, 0x1a, 0x41, 0x3d, 0x9b, 0x80, 0x41, 0xb8, 0x48, 0x21, 0x5c, 0x40, 0xd9, 0x9e, 0x8a,
	0x7e, 0xcd, 0xd7, 0xa1, 0x53, 0x85, 0x32, 0x74, 0x25, 0x3e, 0x47, 0x56, 0x29, 0x50, 0x59, 0x49,
	0x63, 0x11, 0x56, 0x33, 0xd5, 0x75, 0x0a, 0x69, 0x15, 0x5d, 0x11, 0x40, 0x12, 0x45, 0xad, 0xdf,
	0x4b, 0xd1, 0xab, 0xa1, 0xc2, 0x5a, 0x1e, 0xba, 0x9a, 0x15, 0x1b, 0xd3, 0x28, 0x1b, 0x83, 0x90,
	0x9e, 0x10, 0xe8, 0xa7, 0x52, 0x74, 0xd9, 0x90, 0x2a, 0xc8, 0xa1, 0xcb, 0xa2, 0x60, 0x9a, 0x06,
	0x78, 0xa5, 0x1f, 0x19, 0x03, 0xb7, 0x44, 0xc1, 0xcd, 0x35, 0x62, 0x29, 0x0c, 0x1f, 0x7e, 0x7f,
	0x2b, 0xc5, 0xde, 0xa8, 0x4d, 0x97, 0xd9, 0x12, 0x6a, 0xcb, 0xab, 0xf0, 0x25, 0xd4, 0x96, 0x5b,
	0xb5, 0x53, 0x57, 0x29, 0x32, 0xb5, 0x51, 0xe7, 0x91, 0x09, 0xa3, 0xf3, 0x47, 0x12, 0x4c, 0x0b,
	0x2a, 0x69, 0x28, 0x1e, 0x7f, 0x33, 0xfd, 0x3e, 0xa7, 0x08, 0xa7, 0x36, 0x28, 0x88, 0x65, 0xb5,
	0x5f, 0x34, 0x22, 0xab, 0xff, 0x0f, 0x12, 0x2d, 0xc9, 0xe6, 0xbe, 0xbb, 0x89, 0xae, 0x05, 0x1a,
	0x18, 0xe4, 0xb5, 0x53, 0x65, 0x6d, 0x40, 0xea, 0x78, 0x6e, 0xd7, 0xe0, 0x23, 0x96, 0x20, 0x4e,
	0x30, 0xaf, 0x43, 0x9f, 0xf9, 0xd7, 0x06, 0x7d, 0x5e, 0xbe, 0x45, 0xeb, 0x01, 0x88, 0xc1, 0xde,
	0x1d, 0x56, 0x9a, 0x03, 0xd3, 0x9f, 0x0c, 0xf6, 0x2f, 0xf9, 0x85, 0x2c, 0xaa, 0xf7, 0x25, 0x17,
	0x72, 0x4e, 0xf9, 0x33, 0xb9, 0x90, 0xf3, 0xca, 0x87, 0x83, 0x04, 0xc1, 0x1f, 0x4a, 0x30, 0x9b,
	0x51, 0xb8, 0x40, 0x97, 0x12, 0xe9, 0x80, 0xa8, 0xd2, 0xa2, 0x2c, 0xe7, 0x13, 0xc5, 0x77, 0x84,
	0xbe, 0x6e, 0x89, 0xde, 0x87, 0x19, 0xe1, 0x77, 0x09, 0x6c, 0x8f, 0xcc, 0xfb, 0x0a, 0x82, 0xed,
	0x91, 0xb9, 0x9f, 0x35, 0x04, 0xc9, 0x9b, 0x5a, 0xe3, 0x17, 0x29, 0xf7, 0xb6, 0xe7, 0xa7, 0x12,
	0xc8, 0x59, 0x1f, 0x24, 0xb0, 0xa4, 0xbd, 0xcf, 0x47, 0x0e, 0x2c, 0x69, 0xef, 0xfb, 0x55, 0x03,
	0x3b, 0x8b, 0x35, 0x14, 0x1e, 0x89, 0x6e, 0x1a, 0x49, 0x34, 0x59, 0x5f, 0x29, 0x30, 0x34, 0x7d,
	0xbe, 0x8c, 0x60, 0x68, 0xfa, 0x7d, 0xea, 0x10, 0x9e, 0x0c, 0xf3, 0xd0, 0x7c, 0x28, 0xc1, 0x8c,
	0xf0, 0x5b, 0x05, 0x66, 0x9c, 0xbc, 0x2f, 0x1f, 0x98, 0x71, 0x72, 0x3f, 0x75, 0x08, 0x40, 0xa0,
	0x3c, 0x10, 0xc4, 0x61, 0x33, 0x3e, 0xad, 0x61, 0x0e, 0x9b, 0xff, 0x01, 0x8f, 0xb2, 0x9c, 0x4f,
	0x34, 0x78, 0x0a, 0xe3, 0x3b, 0xec, 0x47, 0xfc, 0x45, 0x6c, 0x56, 0x99, 0x0b, 0xad, 0x65, 0xad,
	0x5a, 0x61, 0xf5, 0x4f, 0x59, 0x1f, 0x94, 0x9c, 0xa1, 0x7d, 0xe5, 0x51, 0x99, 0x7e, 0xbf, 0x74,
	0xfd, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0xf3, 0x80, 0xe9, 0xf5, 0x34, 0x00, 0x00,
}
