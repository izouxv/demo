// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	Tenant
	TenantExtend
	User
	Role
	TenantTree
	TenantRoleTree
	DomainRole
	UserToken
	AuthenticationRequest
	AuthenticationResponse
	AuthorizationRequest
	AuthorizationResponse
	GetAuthorizationInfoRequest
	GetAuthorizationInfoResponse
	LogoutRequest
	LogoutResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tenant struct {
	Tid          int64         `protobuf:"varint,1,opt,name=Tid" json:"Tid,omitempty"`
	TenantName   string        `protobuf:"bytes,2,opt,name=TenantName" json:"TenantName,omitempty"`
	Pid          int64         `protobuf:"varint,3,opt,name=Pid" json:"Pid,omitempty"`
	CreateTime   int64         `protobuf:"varint,4,opt,name=CreateTime" json:"CreateTime,omitempty"`
	UpdateTime   int64         `protobuf:"varint,5,opt,name=UpdateTime" json:"UpdateTime,omitempty"`
	IsDefault    bool          `protobuf:"varint,6,opt,name=IsDefault" json:"IsDefault,omitempty"`
	Tenant       []*Tenant     `protobuf:"bytes,7,rep,name=Tenant" json:"Tenant,omitempty"`
	TenantExtend *TenantExtend `protobuf:"bytes,8,opt,name=TenantExtend" json:"TenantExtend,omitempty"`
	Role         *Role         `protobuf:"bytes,9,opt,name=Role" json:"Role,omitempty"`
	Oid          int64         `protobuf:"varint,10,opt,name=Oid" json:"Oid,omitempty"`
}

func (m *Tenant) Reset()                    { *m = Tenant{} }
func (m *Tenant) String() string            { return proto.CompactTextString(m) }
func (*Tenant) ProtoMessage()               {}
func (*Tenant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tenant) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *Tenant) GetTenantName() string {
	if m != nil {
		return m.TenantName
	}
	return ""
}

func (m *Tenant) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Tenant) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Tenant) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Tenant) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *Tenant) GetTenant() []*Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

func (m *Tenant) GetTenantExtend() *TenantExtend {
	if m != nil {
		return m.TenantExtend
	}
	return nil
}

func (m *Tenant) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Tenant) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

type TenantExtend struct {
	NodeCount        int32 `protobuf:"varint,1,opt,name=NodeCount" json:"NodeCount,omitempty"`
	ApplicationCount int32 `protobuf:"varint,2,opt,name=ApplicationCount" json:"ApplicationCount,omitempty"`
	AlertCount       int32 `protobuf:"varint,3,opt,name=AlertCount" json:"AlertCount,omitempty"`
	UserCount        int32 `protobuf:"varint,4,opt,name=UserCount" json:"UserCount,omitempty"`
}

func (m *TenantExtend) Reset()                    { *m = TenantExtend{} }
func (m *TenantExtend) String() string            { return proto.CompactTextString(m) }
func (*TenantExtend) ProtoMessage()               {}
func (*TenantExtend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TenantExtend) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *TenantExtend) GetApplicationCount() int32 {
	if m != nil {
		return m.ApplicationCount
	}
	return 0
}

func (m *TenantExtend) GetAlertCount() int32 {
	if m != nil {
		return m.AlertCount
	}
	return 0
}

func (m *TenantExtend) GetUserCount() int32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

type User struct {
	Uid        int64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	State      int32  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	Nickname   string `protobuf:"bytes,4,opt,name=nickname" json:"nickname,omitempty"`
	CreateTime int64  `protobuf:"varint,5,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,6,opt,name=updateTime" json:"updateTime,omitempty"`
	LoginState int32  `protobuf:"varint,7,opt,name=loginState" json:"loginState,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *User) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *User) GetLoginState() int32 {
	if m != nil {
		return m.LoginState
	}
	return 0
}

type Role struct {
	Rid        int32  `protobuf:"varint,1,opt,name=rid" json:"rid,omitempty"`
	RoleName   string `protobuf:"bytes,2,opt,name=roleName" json:"roleName,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime int64  `protobuf:"varint,4,opt,name=updateTime" json:"updateTime,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Role) GetRid() int32 {
	if m != nil {
		return m.Rid
	}
	return 0
}

func (m *Role) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *Role) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Role) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type TenantTree struct {
	Tenant   *Tenant       `protobuf:"bytes,1,opt,name=tenant" json:"tenant,omitempty"`
	Children []*TenantTree `protobuf:"bytes,2,rep,name=children" json:"children,omitempty"`
}

func (m *TenantTree) Reset()                    { *m = TenantTree{} }
func (m *TenantTree) String() string            { return proto.CompactTextString(m) }
func (*TenantTree) ProtoMessage()               {}
func (*TenantTree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TenantTree) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

func (m *TenantTree) GetChildren() []*TenantTree {
	if m != nil {
		return m.Children
	}
	return nil
}

type TenantRoleTree struct {
	Tenant          *Tenant       `protobuf:"bytes,1,opt,name=tenant" json:"tenant,omitempty"`
	IsDefaultTenant bool          `protobuf:"varint,2,opt,name=isDefaultTenant" json:"isDefaultTenant,omitempty"`
	Role            []*Role       `protobuf:"bytes,3,rep,name=role" json:"role,omitempty"`
	Children        []*TenantTree `protobuf:"bytes,4,rep,name=children" json:"children,omitempty"`
}

func (m *TenantRoleTree) Reset()                    { *m = TenantRoleTree{} }
func (m *TenantRoleTree) String() string            { return proto.CompactTextString(m) }
func (*TenantRoleTree) ProtoMessage()               {}
func (*TenantRoleTree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TenantRoleTree) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

func (m *TenantRoleTree) GetIsDefaultTenant() bool {
	if m != nil {
		return m.IsDefaultTenant
	}
	return false
}

func (m *TenantRoleTree) GetRole() []*Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *TenantRoleTree) GetChildren() []*TenantTree {
	if m != nil {
		return m.Children
	}
	return nil
}

type DomainRole struct {
	Did        int64   `protobuf:"varint,1,opt,name=Did" json:"Did,omitempty"`
	DomainName string  `protobuf:"bytes,2,opt,name=DomainName" json:"DomainName,omitempty"`
	Role       []*Role `protobuf:"bytes,3,rep,name=role" json:"role,omitempty"`
}

func (m *DomainRole) Reset()                    { *m = DomainRole{} }
func (m *DomainRole) String() string            { return proto.CompactTextString(m) }
func (*DomainRole) ProtoMessage()               {}
func (*DomainRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DomainRole) GetDid() int64 {
	if m != nil {
		return m.Did
	}
	return 0
}

func (m *DomainRole) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *DomainRole) GetRole() []*Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type UserToken struct {
	Token          string            `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	User           *User             `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	TenantRoleTree []*TenantRoleTree `protobuf:"bytes,3,rep,name=tenantRoleTree" json:"tenantRoleTree,omitempty"`
	DomainRole     *DomainRole       `protobuf:"bytes,4,opt,name=DomainRole" json:"DomainRole,omitempty"`
}

func (m *UserToken) Reset()                    { *m = UserToken{} }
func (m *UserToken) String() string            { return proto.CompactTextString(m) }
func (*UserToken) ProtoMessage()               {}
func (*UserToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserToken) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserToken) GetTenantRoleTree() []*TenantRoleTree {
	if m != nil {
		return m.TenantRoleTree
	}
	return nil
}

func (m *UserToken) GetDomainRole() *DomainRole {
	if m != nil {
		return m.DomainRole
	}
	return nil
}

type AuthenticationRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Tid      int64  `protobuf:"varint,3,opt,name=tid" json:"tid,omitempty"`
	Did      int64  `protobuf:"varint,4,opt,name=did" json:"did,omitempty"`
}

func (m *AuthenticationRequest) Reset()                    { *m = AuthenticationRequest{} }
func (m *AuthenticationRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationRequest) ProtoMessage()               {}
func (*AuthenticationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AuthenticationRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthenticationRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthenticationRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *AuthenticationRequest) GetDid() int64 {
	if m != nil {
		return m.Did
	}
	return 0
}

type AuthenticationResponse struct {
	UserToken *UserToken `protobuf:"bytes,1,opt,name=userToken" json:"userToken,omitempty"`
}

func (m *AuthenticationResponse) Reset()                    { *m = AuthenticationResponse{} }
func (m *AuthenticationResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationResponse) ProtoMessage()               {}
func (*AuthenticationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AuthenticationResponse) GetUserToken() *UserToken {
	if m != nil {
		return m.UserToken
	}
	return nil
}

type AuthorizationRequest struct {
	Tid   int64  `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Opt   string `protobuf:"bytes,3,opt,name=opt" json:"opt,omitempty"`
	Token string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
}

func (m *AuthorizationRequest) Reset()                    { *m = AuthorizationRequest{} }
func (m *AuthorizationRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationRequest) ProtoMessage()               {}
func (*AuthorizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AuthorizationRequest) GetTid() int64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *AuthorizationRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AuthorizationRequest) GetOpt() string {
	if m != nil {
		return m.Opt
	}
	return ""
}

func (m *AuthorizationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthorizationResponse struct {
	UserToken *UserToken `protobuf:"bytes,1,opt,name=userToken" json:"userToken,omitempty"`
}

func (m *AuthorizationResponse) Reset()                    { *m = AuthorizationResponse{} }
func (m *AuthorizationResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationResponse) ProtoMessage()               {}
func (*AuthorizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AuthorizationResponse) GetUserToken() *UserToken {
	if m != nil {
		return m.UserToken
	}
	return nil
}

type GetAuthorizationInfoRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *GetAuthorizationInfoRequest) Reset()                    { *m = GetAuthorizationInfoRequest{} }
func (m *GetAuthorizationInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAuthorizationInfoRequest) ProtoMessage()               {}
func (*GetAuthorizationInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetAuthorizationInfoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetAuthorizationInfoResponse struct {
	UserToken *UserToken `protobuf:"bytes,1,opt,name=userToken" json:"userToken,omitempty"`
}

func (m *GetAuthorizationInfoResponse) Reset()                    { *m = GetAuthorizationInfoResponse{} }
func (m *GetAuthorizationInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAuthorizationInfoResponse) ProtoMessage()               {}
func (*GetAuthorizationInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetAuthorizationInfoResponse) GetUserToken() *UserToken {
	if m != nil {
		return m.UserToken
	}
	return nil
}

type LogoutRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func init() {
	proto.RegisterType((*Tenant)(nil), "api.Tenant")
	proto.RegisterType((*TenantExtend)(nil), "api.TenantExtend")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Role)(nil), "api.Role")
	proto.RegisterType((*TenantTree)(nil), "api.TenantTree")
	proto.RegisterType((*TenantRoleTree)(nil), "api.TenantRoleTree")
	proto.RegisterType((*DomainRole)(nil), "api.DomainRole")
	proto.RegisterType((*UserToken)(nil), "api.UserToken")
	proto.RegisterType((*AuthenticationRequest)(nil), "api.AuthenticationRequest")
	proto.RegisterType((*AuthenticationResponse)(nil), "api.AuthenticationResponse")
	proto.RegisterType((*AuthorizationRequest)(nil), "api.AuthorizationRequest")
	proto.RegisterType((*AuthorizationResponse)(nil), "api.AuthorizationResponse")
	proto.RegisterType((*GetAuthorizationInfoRequest)(nil), "api.GetAuthorizationInfoRequest")
	proto.RegisterType((*GetAuthorizationInfoResponse)(nil), "api.GetAuthorizationInfoResponse")
	proto.RegisterType((*LogoutRequest)(nil), "api.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "api.LogoutResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AuthServer service

type AuthServerClient interface {
	AuthenticationWithTid(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*AuthenticationResponse, error)
	AuthenticationWithDid(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*AuthenticationResponse, error)
	Authorization(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error)
	GetAuthorizationInfo(ctx context.Context, in *GetAuthorizationInfoRequest, opts ...grpc.CallOption) (*GetAuthorizationInfoResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
}

type authServerClient struct {
	cc *grpc.ClientConn
}

func NewAuthServerClient(cc *grpc.ClientConn) AuthServerClient {
	return &authServerClient{cc}
}

func (c *authServerClient) AuthenticationWithTid(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*AuthenticationResponse, error) {
	out := new(AuthenticationResponse)
	err := grpc.Invoke(ctx, "/api.AuthServer/AuthenticationWithTid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServerClient) AuthenticationWithDid(ctx context.Context, in *AuthenticationRequest, opts ...grpc.CallOption) (*AuthenticationResponse, error) {
	out := new(AuthenticationResponse)
	err := grpc.Invoke(ctx, "/api.AuthServer/AuthenticationWithDid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServerClient) Authorization(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*AuthorizationResponse, error) {
	out := new(AuthorizationResponse)
	err := grpc.Invoke(ctx, "/api.AuthServer/Authorization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServerClient) GetAuthorizationInfo(ctx context.Context, in *GetAuthorizationInfoRequest, opts ...grpc.CallOption) (*GetAuthorizationInfoResponse, error) {
	out := new(GetAuthorizationInfoResponse)
	err := grpc.Invoke(ctx, "/api.AuthServer/GetAuthorizationInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServerClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := grpc.Invoke(ctx, "/api.AuthServer/Logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthServer service

type AuthServerServer interface {
	AuthenticationWithTid(context.Context, *AuthenticationRequest) (*AuthenticationResponse, error)
	AuthenticationWithDid(context.Context, *AuthenticationRequest) (*AuthenticationResponse, error)
	Authorization(context.Context, *AuthorizationRequest) (*AuthorizationResponse, error)
	GetAuthorizationInfo(context.Context, *GetAuthorizationInfoRequest) (*GetAuthorizationInfoResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
}

func RegisterAuthServerServer(s *grpc.Server, srv AuthServerServer) {
	s.RegisterService(&_AuthServer_serviceDesc, srv)
}

func _AuthServer_AuthenticationWithTid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServerServer).AuthenticationWithTid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AuthServer/AuthenticationWithTid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServerServer).AuthenticationWithTid(ctx, req.(*AuthenticationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthServer_AuthenticationWithDid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServerServer).AuthenticationWithDid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AuthServer/AuthenticationWithDid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServerServer).AuthenticationWithDid(ctx, req.(*AuthenticationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthServer_Authorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServerServer).Authorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AuthServer/Authorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServerServer).Authorization(ctx, req.(*AuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthServer_GetAuthorizationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizationInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServerServer).GetAuthorizationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AuthServer/GetAuthorizationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServerServer).GetAuthorizationInfo(ctx, req.(*GetAuthorizationInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthServer_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServerServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AuthServer/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServerServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AuthServer",
	HandlerType: (*AuthServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthenticationWithTid",
			Handler:    _AuthServer_AuthenticationWithTid_Handler,
		},
		{
			MethodName: "AuthenticationWithDid",
			Handler:    _AuthServer_AuthenticationWithDid_Handler,
		},
		{
			MethodName: "Authorization",
			Handler:    _AuthServer_Authorization_Handler,
		},
		{
			MethodName: "GetAuthorizationInfo",
			Handler:    _AuthServer_GetAuthorizationInfo_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _AuthServer_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xd1, 0x4e, 0xdb, 0x48,
	0x14, 0x5d, 0xc7, 0x4e, 0x48, 0x2e, 0x4b, 0x60, 0x07, 0x76, 0xe5, 0x35, 0xec, 0x2a, 0xeb, 0xd5,
	0x4a, 0xd1, 0xee, 0x8a, 0x4a, 0xa0, 0x3e, 0xf5, 0x09, 0x11, 0xda, 0x22, 0x21, 0x40, 0x43, 0x50,
	0x9f, 0xa8, 0x64, 0xe2, 0x81, 0x8c, 0x30, 0x1e, 0xd7, 0x1e, 0xb7, 0x55, 0x3f, 0xa3, 0x0f, 0xfd,
	0x89, 0x4a, 0x7d, 0xed, 0x1f, 0xf4, 0xbb, 0xaa, 0x3b, 0x63, 0x7b, 0x6c, 0x37, 0x82, 0x8a, 0xbe,
	0xcd, 0x9c, 0x7b, 0xee, 0xdc, 0x33, 0xf7, 0x9e, 0x71, 0x02, 0x10, 0xe4, 0x72, 0xbe, 0x9d, 0xa4,
	0x42, 0x0a, 0x62, 0x07, 0x09, 0xf7, 0x3f, 0x77, 0xa0, 0x37, 0x65, 0x71, 0x10, 0x4b, 0xb2, 0x06,
	0xf6, 0x94, 0x87, 0xae, 0x35, 0xb2, 0xc6, 0x36, 0xc5, 0x25, 0xf9, 0x13, 0x40, 0xc7, 0x8e, 0x83,
	0x5b, 0xe6, 0x76, 0x46, 0xd6, 0x78, 0x40, 0x6b, 0x08, 0x66, 0x9c, 0xf2, 0xd0, 0xb5, 0x75, 0xc6,
	0xa9, 0xce, 0xd8, 0x4f, 0x59, 0x20, 0xd9, 0x94, 0xdf, 0x32, 0xd7, 0x51, 0x81, 0x1a, 0x82, 0xf1,
	0xf3, 0x24, 0x2c, 0xe3, 0x5d, 0x1d, 0x37, 0x08, 0xd9, 0x82, 0xc1, 0x61, 0x36, 0x61, 0x57, 0x41,
	0x1e, 0x49, 0xb7, 0x37, 0xb2, 0xc6, 0x7d, 0x6a, 0x00, 0xf2, 0x77, 0xa9, 0xd5, 0x5d, 0x1a, 0xd9,
	0xe3, 0xe5, 0x9d, 0xe5, 0xed, 0x20, 0xe1, 0xdb, 0x1a, 0xa2, 0xe5, 0x35, 0x1e, 0xc3, 0xcf, 0x7a,
	0x75, 0xf0, 0x56, 0xb2, 0x38, 0x74, 0xfb, 0x23, 0x6b, 0xbc, 0xbc, 0xf3, 0x4b, 0x8d, 0xaa, 0x03,
	0xb4, 0x41, 0x23, 0x7f, 0x80, 0x43, 0x45, 0xc4, 0xdc, 0x81, 0xa2, 0x0f, 0x14, 0x1d, 0x01, 0xaa,
	0x60, 0xbc, 0xea, 0x09, 0x0f, 0x5d, 0xd0, 0x57, 0x3d, 0xe1, 0xa1, 0xff, 0xc1, 0x6a, 0x16, 0x42,
	0xed, 0xc7, 0x22, 0x64, 0xfb, 0x22, 0x8f, 0xa5, 0xea, 0x62, 0x97, 0x1a, 0x80, 0xfc, 0x0b, 0x6b,
	0x7b, 0x49, 0x12, 0xf1, 0x59, 0x20, 0xb9, 0x88, 0x35, 0xa9, 0xa3, 0x48, 0xdf, 0xe0, 0xd8, 0xa5,
	0xbd, 0x88, 0xa5, 0x52, 0xb3, 0x6c, 0xc5, 0xaa, 0x21, 0x58, 0xe9, 0x3c, 0x63, 0xa9, 0x0e, 0x3b,
	0xba, 0x52, 0x05, 0xf8, 0x5f, 0x2c, 0x70, 0x70, 0x87, 0x9a, 0x73, 0x33, 0xd0, 0x9c, 0x87, 0xc4,
	0x83, 0x7e, 0x9e, 0xb1, 0x34, 0x36, 0xe3, 0xac, 0xf6, 0x64, 0x03, 0xba, 0x99, 0x0c, 0x24, 0x2b,
	0xea, 0xe9, 0x0d, 0x66, 0xc4, 0x7c, 0x76, 0xa3, 0x32, 0x1c, 0x9d, 0x51, 0xee, 0x51, 0xe6, 0xcc,
	0x0c, 0xbb, 0x18, 0xe6, 0xac, 0x31, 0xec, 0xdc, 0x0c, 0xbb, 0xa7, 0xe3, 0x06, 0xc1, 0x78, 0x24,
	0xae, 0x79, 0x7c, 0xa6, 0xca, 0x2e, 0xe9, 0x6b, 0x1a, 0xc4, 0x97, 0x50, 0xf5, 0x3e, 0x2d, 0xee,
	0xd1, 0xa5, 0xb8, 0x44, 0x55, 0xa9, 0x88, 0x58, 0xcd, 0x96, 0xd5, 0xbe, 0xa5, 0xca, 0xbe, 0x47,
	0x95, 0xd3, 0x56, 0xe5, 0xbf, 0x2c, 0x4d, 0x3f, 0x4d, 0x19, 0x43, 0xcb, 0x49, 0x6d, 0x39, 0x4b,
	0x19, 0xa3, 0x69, 0x39, 0x1d, 0x22, 0xff, 0x41, 0x7f, 0x36, 0xe7, 0x51, 0x98, 0xb2, 0xd8, 0xed,
	0x28, 0x67, 0xae, 0xd6, 0x68, 0x78, 0x0e, 0xad, 0x08, 0xfe, 0x47, 0x0b, 0x86, 0x45, 0xbe, 0x88,
	0xd8, 0xf7, 0x17, 0x19, 0xc3, 0x2a, 0x2f, 0x5f, 0x42, 0xf1, 0x0a, 0x3a, 0xea, 0x81, 0xb4, 0x61,
	0xb4, 0x32, 0x76, 0xc3, 0xb5, 0x95, 0x94, 0xba, 0x95, 0x11, 0x6e, 0xa8, 0x75, 0xee, 0x53, 0x7b,
	0x01, 0x30, 0x11, 0xb7, 0x01, 0x8f, 0xcb, 0x49, 0x4c, 0x8c, 0xa3, 0x26, 0xfa, 0xc1, 0xeb, 0x78,
	0xfd, 0x13, 0x61, 0x90, 0x7b, 0xb4, 0xf8, 0x9f, 0x2c, 0x6d, 0xe5, 0xa9, 0xb8, 0x61, 0x31, 0x5a,
	0x50, 0xe2, 0x42, 0x15, 0x18, 0x50, 0xbd, 0xc1, 0x23, 0xd0, 0xa4, 0xea, 0xf0, 0xf2, 0x08, 0xcc,
	0xa1, 0x0a, 0x26, 0x4f, 0x60, 0x28, 0x1b, 0xed, 0x2c, 0x6a, 0xad, 0xd7, 0x9b, 0x58, 0x84, 0x68,
	0x8b, 0x4a, 0x1e, 0xd5, 0xaf, 0xa7, 0xcc, 0x50, 0x76, 0xc3, 0xc0, 0xb4, 0x46, 0xf1, 0x33, 0xf8,
	0x75, 0x2f, 0x97, 0x73, 0x16, 0xcb, 0xe2, 0xc5, 0x52, 0xf6, 0x2a, 0x67, 0x99, 0x6c, 0x3c, 0x2d,
	0xab, 0xf5, 0xb4, 0x3c, 0xe8, 0x27, 0x41, 0x96, 0xbd, 0x11, 0x69, 0x58, 0xda, 0xb5, 0xdc, 0x63,
	0x4b, 0xa5, 0xf9, 0x86, 0x4a, 0xae, 0x90, 0x90, 0x87, 0x85, 0x33, 0x71, 0xe9, 0x3f, 0x85, 0xdf,
	0xda, 0x45, 0xb3, 0x44, 0xc4, 0x19, 0x23, 0xff, 0xc3, 0x20, 0x2f, 0xdb, 0x57, 0x98, 0x67, 0x58,
	0x35, 0x48, 0xa1, 0xd4, 0x10, 0xfc, 0x4b, 0xd8, 0xc0, 0x73, 0x44, 0xca, 0xdf, 0x35, 0xb4, 0x17,
	0x1a, 0xac, 0x86, 0x86, 0x3c, 0x8d, 0x0a, 0xb1, 0xb8, 0x44, 0x44, 0x24, 0xfa, 0x63, 0x34, 0xa0,
	0xb8, 0x34, 0xd3, 0x72, 0x6a, 0xd3, 0xf2, 0x0f, 0x74, 0x83, 0x6a, 0x35, 0x1e, 0x24, 0x75, 0x17,
	0x36, 0x9f, 0x31, 0xd9, 0x38, 0xe9, 0x30, 0xbe, 0x12, 0xa5, 0xe2, 0x85, 0x4e, 0xf1, 0x8f, 0x60,
	0x6b, 0x71, 0xd2, 0x83, 0x24, 0xfc, 0x03, 0x2b, 0x47, 0xe2, 0x5a, 0xe4, 0xf2, 0xee, 0xa2, 0x6b,
	0x30, 0x2c, 0x69, 0xba, 0xcc, 0xce, 0x7b, 0x1b, 0x00, 0x45, 0x9c, 0xb1, 0xf4, 0x35, 0x4b, 0x09,
	0x6d, 0x5b, 0xe6, 0x05, 0x97, 0x73, 0xfc, 0x79, 0xf5, 0x54, 0xed, 0x85, 0x76, 0xf2, 0x36, 0x17,
	0xc6, 0x74, 0x01, 0xff, 0xa7, 0xc5, 0x67, 0x4e, 0x7e, 0xec, 0xcc, 0xe7, 0xb0, 0xd2, 0x68, 0x1d,
	0xf9, 0xbd, 0xe2, 0xb7, 0x1d, 0xe3, 0x79, 0x8b, 0x42, 0xd5, 0x49, 0x17, 0xb0, 0xb1, 0x68, 0x0e,
	0x64, 0xa4, 0xb2, 0xee, 0x98, 0xab, 0xf7, 0xd7, 0x1d, 0x8c, 0xea, 0xf8, 0x5d, 0xe8, 0xe9, 0x8e,
	0x13, 0xa2, 0xe8, 0x8d, 0x29, 0x79, 0xeb, 0x0d, 0xac, 0x4c, 0xba, 0xec, 0xa9, 0x3f, 0x3d, 0xbb,
	0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xc7, 0xf2, 0x33, 0x02, 0x09, 0x00, 0x00,
}
